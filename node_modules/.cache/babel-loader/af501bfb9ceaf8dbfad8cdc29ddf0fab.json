{"ast":null,"code":"import _defineProperty from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Header,Divider,Button,Container,Form,Input,Grid,Card}from'semantic-ui-react';import DoctorCard from'./DoctorCard';var Profile=/*#__PURE__*/function(_React$Component){_inherits(Profile,_React$Component);function Profile(){var _getPrototypeOf2;var _this;_classCallCheck(this,Profile);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Profile)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={email:_this.props.currentUser.email,password:_this.props.currentUser.password,passwordConfirmation:_this.props.currentUser.passwordConfirmation,firstName:_this.props.currentUser.firstName,lastName:_this.props.currentUser.lastName,address:_this.props.currentUser.address,isDisabled:true};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value),function(){return console.log(_this.state);});};_this.submitEdit=function(){var userData=_this.state;_this.props.patchUser(userData);_this.setState({isDisabled:true});_this.props.history.push('/search');alert(\"Profile has been updated!\");};_this.edit=function(){_this.setState({isDisabled:!_this.state.isDisabled});};return _this;}_createClass(Profile,[{key:\"render\",value:function render(){var _this2=this;var profileDoctors=this.props.currentUser.doctors.map(function(doctor){return React.createElement(DoctorCard,Object.assign({key:doctor.id},doctor));});return React.createElement(\"div\",null,React.createElement(Grid,{columns:2},React.createElement(Grid.Column,null,React.createElement(Container,{textAlign:\"center\"},React.createElement(Header,{as:\"h2\",display:\"flex\",textAlign:\"center\",color:\"red\"},\"User Profile\"),React.createElement(Divider,null),React.createElement(Form,{width:6},this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"Email\",name:\"email\",type:\"text\",value:this.state.email,onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"Email\",name:\"email\",type:\"text\",value:this.state.email,onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"Password\",name:\"password\",type:\"password\",value:this.state.password,onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"Password\",name:\"password\",type:\"password\",value:this.state.password,onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"Password Confirmation\",name:\"passwordConfirmation\",type:\"password\",value:this.state.passwordConfirmation||\"\",onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"Password Confirmation\",name:\"passwordConfirmation\",type:\"password\",value:this.state.passwordConfirmation||\"\",onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"First Name\",name:\"firstName\",type:\"text\",value:this.state.firstName||\"\",onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"First Name\",name:\"firstName\",type:\"text\",value:this.state.firstName||\"\",onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"Last Name\",name:\"lastName\",type:\"text\",value:this.state.lastName||\"\",onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"Last Name\",name:\"lastName\",type:\"text\",value:this.state.lastName||\"\",onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Input,{disabled:true,placeholder:\"Address\",name:\"address\",type:\"text\",value:this.state.address||\"\",onChange:function onChange(e){return _this2.onChange(e);}}):React.createElement(Input,{placeholder:\"Address\",name:\"address\",type:\"text\",value:this.state.address||\"\",onChange:function onChange(e){return _this2.onChange(e);}})),React.createElement(Form,null,this.state.isDisabled?React.createElement(Button,{disabled:true,color:\"red\",onClick:this.submitEdit},\"Submit\"):React.createElement(Button,{color:\"red\",onClick:this.submitEdit},\"Submit\"),this.state.isDisabled?React.createElement(Button,{color:\"red\",onClick:this.edit},\"Edit\"):React.createElement(Button,{color:\"black\",onClick:this.edit},\"Nevermind\")))),this.props.currentUser.doctors.length>0&&React.createElement(Grid.Column,null,React.createElement(Header,{as:\"h2\",display:\"flex\",textAlign:\"center\",color:\"red\"},\"Favorite Doctors\"),React.createElement(Divider,null),React.createElement(Card.Group,{style:{overflow:'auto',maxHeight:'52em'},display:\"flex\",\"justify-content\":\"center\",itemsPerRow:2},profileDoctors))));}}]);return Profile;}(React.Component);export default Profile;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Profile.js"],"names":["React","Header","Divider","Button","Container","Form","Input","Grid","Card","DoctorCard","Profile","state","email","props","currentUser","password","passwordConfirmation","firstName","lastName","address","isDisabled","onChange","e","setState","target","name","value","console","log","submitEdit","userData","patchUser","history","push","alert","edit","profileDoctors","doctors","map","doctor","id","length","overflow","maxHeight","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Header,\n  Divider,\n  Button,\n  Container,\n  Form,\n  Input,\n  Grid,\n  Card\n} from 'semantic-ui-react'\nimport DoctorCard from './DoctorCard'\n\n\nclass Profile extends React.Component {\n  state = {\n    email: this.props.currentUser.email,\n    password: this.props.currentUser.password,\n    passwordConfirmation: this.props.currentUser.passwordConfirmation,\n    firstName: this.props.currentUser.firstName,\n    lastName: this.props.currentUser.lastName,\n    address: this.props.currentUser.address,\n    isDisabled: true\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    }, () => console.log(this.state))\n  }\n\n  submitEdit = () => {\n    let userData = this.state\n    this.props.patchUser(userData)\n    this.setState({\n      isDisabled: true\n    })\n    this.props.history.push('/search')\n    alert(\"Profile has been updated!\")\n  }\n\n  edit = () => {\n    this.setState({\n      isDisabled: !this.state.isDisabled\n    })\n  }\n\n  render() {\n    let profileDoctors = this.props.currentUser.doctors.map(doctor => <DoctorCard key={doctor.id} {...doctor} />)\n    return (\n      <div>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Container textAlign='center'>\n              <Header as='h2' display='flex' textAlign=\"center\" color=\"red\">User Profile</Header>\n              <Divider />\n              <Form width={6}>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Email\" name=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Email\" name=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Password Confirmation\" name=\"passwordConfirmation\" type=\"password\" value={this.state.passwordConfirmation || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Password Confirmation\" name=\"passwordConfirmation\" type=\"password\" value={this.state.passwordConfirmation || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"First Name\" name=\"firstName\" type=\"text\" value={this.state.firstName || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"First Name\" name=\"firstName\" type=\"text\" value={this.state.firstName || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Last Name\" name=\"lastName\" type=\"text\" value={this.state.lastName || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Last Name\" name=\"lastName\" type=\"text\" value={this.state.lastName || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Address\" name=\"address\" type=\"text\" value={this.state.address || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Address\" name=\"address\" type=\"text\" value={this.state.address || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Button disabled color='red' onClick={this.submitEdit}>Submit</Button>\n                  : <Button color='red' onClick={this.submitEdit}>Submit</Button>}\n                {this.state.isDisabled ? <Button color='red' onClick={this.edit}>Edit</Button>\n                  : <Button color='black' onClick={this.edit}>Nevermind</Button>}\n\n              </Form>\n            </Container >\n          </Grid.Column>\n          {this.props.currentUser.doctors.length > 0 && <Grid.Column >\n            <Header as='h2' display='flex' textAlign=\"center\" color=\"red\">Favorite Doctors</Header>\n            <Divider />\n            <Card.Group style={{ overflow: 'auto', maxHeight: '52em' }} display='flex' justify-content='center' itemsPerRow={2}>\n              {profileDoctors}\n            </Card.Group>\n          </Grid.Column>}\n\n        </Grid>\n\n\n\n      </div>\n    )\n  }\n}\nexport default Profile"]},"metadata":{},"sourceType":"module"}