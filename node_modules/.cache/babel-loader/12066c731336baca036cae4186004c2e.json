{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js\";\nimport { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nconst index = [];\nexport default class SearchIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadSearchIndex = async () => {\n      const {\n        searchId\n      } = this.props.match.params.searchId;\n      let csv = '';\n\n      try {\n        let res = await Axios.get(`http://localhost:3000/searches/${searchId}`);\n        csv = res.data.csv;\n      } catch (err) {}\n\n      csv = csv.split(',');\n      csv.pop();\n      console.log(csv, 'CSV FROM LOADSEARCHINDEX');\n      await csv.map(async id => {\n        console.log(id);\n        let doctorId = parseInt(id);\n        let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n        let doc = res.data;\n        console.log(doc);\n        index.push(doc);\n        console.log(index);\n      });\n    };\n\n    this.displayDoctors = () => {\n      return this.props.searchIndex.map(doc => React.createElement(DoctorCard, {\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, doc.name));\n    };\n  }\n\n  async componentDidMount() {\n    this.props.loadUser();\n    await this.loadSearchIndex();\n  }\n\n  render() {\n    console.log(index);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.displayDoctors());\n  }\n\n}","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js"],"names":["Card","Grid","DoctorCard","Axios","React","Component","index","SearchIndex","loadSearchIndex","searchId","props","match","params","csv","res","get","data","err","split","pop","console","log","map","id","doctorId","parseInt","doc","push","displayDoctors","searchIndex","name","componentDidMount","loadUser","render"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDG,eADiD,GAC/B,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAA7C;AACA,UAAII,GAAG,GAAG,EAAV;;AACA,UAAI;AACF,YAAIC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,kCAAiCN,QAAS,EAArD,CAAhB;AACAI,QAAAA,GAAG,GAAGC,GAAG,CAACE,IAAJ,CAASH,GAAf;AACD,OAHD,CAGE,OAAOI,GAAP,EAAY,CAAE;;AAChBJ,MAAAA,GAAG,GAAGA,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAN;AACAL,MAAAA,GAAG,CAACM,GAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ,EAAiB,0BAAjB;AACA,YAAMA,GAAG,CAACS,GAAJ,CAAQ,MAAOC,EAAP,IAAc;AAC1BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACA,YAAIC,QAAQ,GAAGC,QAAQ,CAACF,EAAD,CAAvB;AACA,YAAIT,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,iCAAgCS,QAAS,EAApD,CAAhB;AACA,YAAIE,GAAG,GAAGZ,GAAG,CAACE,IAAd;AAEAI,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACApB,QAAAA,KAAK,CAACqB,IAAN,CAAWD,GAAX;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD,OATK,CAAN;AAUD,KArBgD;;AAAA,SAuBjDsB,cAvBiD,GAuBhC,MAAM;AACrB,aAAO,KAAKlB,KAAL,CAAWmB,WAAX,CAAuBP,GAAvB,CAA4BI,GAAD,IAChC,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,GAAG,CAACH,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BG,GAAG,CAACI,IAA9B,CADK,CAAP;AAGD,KA3BgD;AAAA;;AA6BjD,QAAMC,iBAAN,GAA0B;AACxB,SAAKrB,KAAL,CAAWsB,QAAX;AACA,UAAM,KAAKxB,eAAL,EAAN;AAED;;AACDyB,EAAAA,MAAM,GAAG;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKsB,cAAL,EAAN,CAAP;AACD;;AArCgD","sourcesContent":["import { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\n\nimport React, { Component } from 'react';\nconst index = [];\n\nexport default class SearchIndex extends Component {\n  loadSearchIndex = async () => {\n    const { searchId } = this.props.match.params.searchId;\n    let csv = '';\n    try {\n      let res = await Axios.get(`http://localhost:3000/searches/${searchId}`);\n      csv = res.data.csv;\n    } catch (err) {}\n    csv = csv.split(',');\n    csv.pop();\n    console.log(csv, 'CSV FROM LOADSEARCHINDEX');\n    await csv.map(async (id) => {\n      console.log(id);\n      let doctorId = parseInt(id);\n      let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n      let doc = res.data;\n\n      console.log(doc);\n      index.push(doc);\n      console.log(index);\n    });\n  };\n\n  displayDoctors = () => {\n    return this.props.searchIndex.map((doc) => (\n      <DoctorCard key={doc.id}>{doc.name}</DoctorCard>\n    ));\n  };\n\n  async componentDidMount() {\n    this.props.loadUser();\n    await this.loadSearchIndex();\n\n  }\n  render() {\n    console.log(index);\n    return <div>{this.displayDoctors()}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}