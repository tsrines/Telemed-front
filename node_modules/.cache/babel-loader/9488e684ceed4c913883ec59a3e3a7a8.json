{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      let formData = this.state;\n      this.props.login(formData);\n      this.setState({\n        email: '',\n        password: '',\n        passwordConfirmation: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"red\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Telemed\", React.createElement(Image, {\n      src: \"../favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: () => this.props.login,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"email\",\n      value: this.state.email,\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"password\",\n      value: this.state.password,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.props.register && React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"passwordConfirmation\",\n      value: this.state.passwordConfirmation,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password Confirmation\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.props.register && React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.onSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.formData,\n      color: \"red\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign Up!\")), !this.props.register && React.createElement(Button, {\n      onClick: this.formData,\n      color: \"red\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.register ? 'Sign Up' : 'Login'))), !this.props.register && React.createElement(Button, {\n      onClick: this.props.onSignUp,\n      label: \"Sign Up?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js"],"names":["React","Button","Form","Grid","Header","Image","Segment","withRouter","LoginForm","Component","state","email","password","passwordConfirmation","onChange","e","setState","target","name","value","onSubmit","formData","props","login","render","height","maxWidth","register","onSignUp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  onSubmit = () => {\n    let formData = this.state;\n    this.props.login(formData);\n    this.setState({\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n    });\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign='center'\n        style={{ height: '100vh' }}\n        verticalAlign='middle'\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='red' textAlign='center'>\n            Telemed\n            <Image src='../favicon.ico' />\n          </Header>\n          <br />\n          <br />\n          <Form onSubmit={()=> this.props.login} size='large'>\n            <Segment stacked>\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name='email'\n                value={this.state.email}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='E-mail address'\n              />\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name='password'\n                value={this.state.password}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n              {this.props.register && (\n                <Form.Input\n                  onChange={(e) => this.onChange(e)}\n                  name='passwordConfirmation'\n                  value={this.state.passwordConfirmation}\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password Confirmation'\n                  type='password'\n                />\n              )}\n              {this.props.register && (\n                <Button.Group>\n                  <Button onClick={this.props.onSignUp}>Cancel</Button>\n                  <Button.Or />\n                  <Button\n                    onClick={this.formData}\n                    color='red'\n                    fluid\n                    size='large'\n                  >\n                    Sign Up!\n                  </Button>\n                </Button.Group>\n              )}\n              {!this.props.register && (\n                <Button onClick={this.formData} color='red' fluid size='large'>\n                  {this.props.register ? 'Sign Up' : 'Login'}\n                </Button>\n              )}\n            </Segment>\n          </Form>\n          {!this.props.register && (\n            <Button onClick={this.props.onSignUp} label='Sign Up?' />\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}