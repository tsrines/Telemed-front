{"ast":null,"code":"import _defineProperty from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Button,Form,Grid,Header,Image,Segment}from'semantic-ui-react';import{withRouter,Link}from'react-router-dom';import SignUp from'./SignUp';var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);function Login(){var _getPrototypeOf2;var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Login)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={email:'',password:''};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var formData=_this.state;_this.props.login(formData);_this.setState({email:'',password:''});};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(Grid,{textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},React.createElement(Grid.Column,{style:{maxWidth:450}},React.createElement(Header,{as:\"h2\",color:\"red\",textAlign:\"center\"},\"Telemed\",React.createElement(Image,{src:\"../favicon.ico\"})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(Form,{onSubmit:function onSubmit(e){return _this2.onSubmit(e);},size:\"large\"},React.createElement(Segment,{stacked:true},React.createElement(Form.Input,{onChange:function onChange(e){return _this2.onChange(e);},name:\"email\",value:this.state.email,fluid:true,icon:\"user\",iconPosition:\"left\",placeholder:\"E-mail address\"}),React.createElement(Form.Input,{onChange:function onChange(e){return _this2.onChange(e);},name:\"password\",value:this.state.password,fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\"}),React.createElement(Button,{onClick:this.formData,color:\"red\",fluid:true,size:\"large\"},\"Login\"))),\"Don't have an account? \",\" \",React.createElement(Link,{to:\"/signup\"},\"Sign Up!\")));}}]);return Login;}(React.Component);export default withRouter(Login);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js"],"names":["React","Button","Form","Grid","Header","Image","Segment","withRouter","Link","SignUp","Login","state","email","password","onChange","e","setState","target","name","value","onSubmit","preventDefault","formData","props","login","height","maxWidth","Component"],"mappings":"k1BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,MAA7B,CAAqCC,KAArC,CAA4CC,OAA5C,KAA2D,mBAA3D,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,kBAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,GAEMC,CAAAA,K,uYACJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,CAENC,QAAQ,CAAE,EAFJ,C,OAIRC,Q,CAAW,SAACC,CAAD,CAAO,CAChB,MAAKC,QAAL,oBACGD,CAAC,CAACE,MAAF,CAASC,IADZ,CACmBH,CAAC,CAACE,MAAF,CAASE,KAD5B,GAGD,C,OAEDC,Q,CAAW,SAACL,CAAD,CAAO,CAChBA,CAAC,CAACM,cAAF,GACA,GAAIC,CAAAA,QAAQ,CAAG,MAAKX,KAApB,CACA,MAAKY,KAAL,CAAWC,KAAX,CAAiBF,QAAjB,EACA,MAAKN,QAAL,CAAc,CACZJ,KAAK,CAAE,EADK,CAEZC,QAAQ,CAAE,EAFE,CAAd,EAID,C,wEAEQ,iBACP,MACE,qBAAC,IAAD,EACE,SAAS,CAAC,QADZ,CAEE,KAAK,CAAE,CAAEY,MAAM,CAAE,OAAV,CAFT,CAGE,aAAa,CAAC,QAHhB,EAKE,oBAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAApB,EACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,KAAK,CAAC,KAAtB,CAA4B,SAAS,CAAC,QAAtC,YAEE,oBAAC,KAAD,EAAO,GAAG,CAAC,gBAAX,EAFF,CADF,CAKE,8BALF,CAME,8BANF,CAOE,oBAAC,IAAD,EAAM,QAAQ,CAAE,kBAACX,CAAD,QAAO,CAAA,MAAI,CAACK,QAAL,CAAcL,CAAd,CAAP,EAAhB,CAAyC,IAAI,CAAC,OAA9C,EACE,oBAAC,OAAD,EAAS,OAAO,KAAhB,EACE,oBAAC,IAAD,CAAM,KAAN,EACE,QAAQ,CAAE,kBAACA,CAAD,QAAO,CAAA,MAAI,CAACD,QAAL,CAAcC,CAAd,CAAP,EADZ,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE,KAAKJ,KAAL,CAAWC,KAHpB,CAIE,KAAK,KAJP,CAKE,IAAI,CAAC,MALP,CAME,YAAY,CAAC,MANf,CAOE,WAAW,CAAC,gBAPd,EADF,CAUE,oBAAC,IAAD,CAAM,KAAN,EACE,QAAQ,CAAE,kBAACG,CAAD,QAAO,CAAA,MAAI,CAACD,QAAL,CAAcC,CAAd,CAAP,EADZ,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAE,KAAKJ,KAAL,CAAWE,QAHpB,CAIE,KAAK,KAJP,CAKE,IAAI,CAAC,MALP,CAME,YAAY,CAAC,MANf,CAOE,WAAW,CAAC,UAPd,CAQE,IAAI,CAAC,UARP,EAVF,CAoBE,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKS,QAAtB,CAAgC,KAAK,CAAC,KAAtC,CAA4C,KAAK,KAAjD,CAAkD,IAAI,CAAC,OAAvD,UApBF,CADF,CAPF,2BAkC0B,GAlC1B,CAmCE,oBAAC,IAAD,EAAM,EAAE,CAAC,SAAT,aAnCF,CALF,CADF,CA6CD,C,mBAnEiBtB,KAAK,CAAC2B,S,EAsE1B,cAAepB,CAAAA,UAAU,CAACG,KAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport { withRouter, Link } from 'react-router-dom';\nimport SignUp from './SignUp';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    let formData = this.state;\n    this.props.login(formData);\n    this.setState({\n      email: '',\n      password: '',\n    });\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign='center'\n        style={{ height: '100vh' }}\n        verticalAlign='middle'\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='red' textAlign='center'>\n            Telemed\n            <Image src='../favicon.ico' />\n          </Header>\n          <br />\n          <br />\n          <Form onSubmit={(e) => this.onSubmit(e)} size='large'>\n            <Segment stacked>\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name='email'\n                value={this.state.email}\n                fluid\n                icon='user'\n                iconPosition='left'\n                placeholder='E-mail address'\n              />\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name='password'\n                value={this.state.password}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n              <Button onClick={this.formData} color='red' fluid size='large'>\n                Login\n              </Button>\n            </Segment>\n\n          </Form>\n          Don't have an account? {\" \"}\n          <Link to='/signup'>Sign Up!</Link>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}