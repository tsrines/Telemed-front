{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Profile.js\";\nimport React from 'react';\nimport { Header, Divider, Button, Form, Input, Grid, Card, Icon } from 'semantic-ui-react';\nimport DoctorCard from '../DoctorCard';\nimport PropTypes from 'prop-types';\nimport Edit from './Edit';\n\nconst Profile = ({\n  currentUser,\n  loadUser,\n  history,\n  loading\n}) => {\n  const profileDoctors = () => currentUser.doctors && currentUser.doctors.map(doc => React.createElement(DoctorCard, {\n    key: doc.id,\n    doctor: doc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n\n  return React.createElement(React.Fragment, null, currentUser && // <Grid.Row>\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"   \", React.createElement(Header, {\n    as: \"h2\",\n    display: \"flex\",\n    textAlign: \"center\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Favorite Doctors\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Card.Group, {\n    style: {\n      overflow: 'auto',\n      maxHeight: '52em'\n    },\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    itemsPerRow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, profileDoctors())) // </Grid.Row>\n  );\n};\n\nProfile.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Profile.js"],"names":["React","Header","Divider","Button","Form","Input","Grid","Card","Icon","DoctorCard","PropTypes","Edit","Profile","currentUser","loadUser","history","loading","profileDoctors","doctors","map","doc","id","overflow","maxHeight","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,MADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,IARF,QASO,mBATP;AAWA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAC/D,QAAMC,cAAc,GAAG,MACrBJ,WAAW,CAACK,OAAZ,IACKL,WAAW,CAACK,OAAZ,CAAoBC,GAApB,CAAyBC,GAAD,IACvB,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,GAAG,CAACC,EAArB;AAAyB,IAAA,MAAM,EAAED,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFP;;AAOA,SACE,0CAaKP,WAAW,IACV;AACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,OAAO,EAAC,MAAxB;AAA+B,IAAA,SAAS,EAAC,QAAzC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR,EAGF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,EAIF,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KADT;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,uBAAgB,QAHlB;AAIE,IAAA,WAAW,EAAE,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,cAAc,EANjB,CAJE,CAFW,CAcV;AA3BN,GADF;AAiCD,CAzCD;;AA2CAL,OAAO,CAACY,SAAR,GAAoB;AAClBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADP;AAElBb,EAAAA,WAAW,EAAEH,SAAS,CAACiB,MAAV,CAAiBD;AAFZ,CAApB;AAKA,eAAed,OAAf","sourcesContent":["import React from 'react';\n\nimport {\n  Header,\n  Divider,\n  Button,\n  Form,\n  Input,\n  Grid,\n  Card,\n  Icon,\n} from 'semantic-ui-react';\n\nimport DoctorCard from '../DoctorCard';\nimport PropTypes from 'prop-types';\nimport Edit from './Edit';\n\nconst Profile = ({ currentUser, loadUser, history, loading }) => {\n  const profileDoctors = () =>\n    currentUser.doctors\n      && currentUser.doctors.map((doc) => (\n          <DoctorCard key={doc.id} doctor={doc} />\n        ))\n      \n\n  return (\n    <>\n      {/* <Grid style={{ padding: '2em' }} columns={1}>\n        <Grid.Row>\n          {currentUser && (\n            <>\n              <Header as='h4' display='flex' textAlign='center' color='red'>\n                <Icon loading={loading} size='tiny' name='edit'></Icon>\n                {currentUser.email}\n              </Header>\n            </>\n          )}\n          <Divider />\n        </Grid.Row> */}\n        {currentUser && (\n          // <Grid.Row>\n         <div>   <Header as='h2' display='flex' textAlign='center' color='red'>\n         Favorite Doctors\n       </Header>\n       <Divider />\n       <Card.Group\n         style={{ overflow: 'auto', maxHeight: '52em' }}\n         display='flex'\n         justify-content='center'\n         itemsPerRow={1}\n       >\n         {profileDoctors()}\n       </Card.Group></div>\n          // </Grid.Row>\n        )}\n      {/* </Grid> */}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}