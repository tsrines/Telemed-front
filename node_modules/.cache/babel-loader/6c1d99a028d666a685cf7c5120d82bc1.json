{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Profile.js\";\nimport React from 'react';\nimport { Header, Divider, Button, Form, Input, Grid, Card, Icon, Container } from 'semantic-ui-react';\nimport DoctorCard from '../DoctorCard';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  currentUser,\n  loadUser,\n  history,\n  loading\n}) => {\n  const profileDoctors = () => currentUser.doctors && currentUser.doctors.map(doc => React.createElement(DoctorCard, {\n    key: doc.id,\n    doctor: doc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n\n  return React.createElement(React.Fragment, null, currentUser && React.createElement(Container, {\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, currentUser && React.createElement(React.Fragment, null, React.createElement(Header, {\n    as: \"h2\",\n    display: \"flex\",\n    textAlign: \"center\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, currentUser.email.split(\"@\")[0], ' ', React.createElement(Link, {\n    to: '/profile/edit',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    loading: loading,\n    fluid: \"true\",\n    name: \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), ' ', React.createElement(Header, {\n    as: \"h2\",\n    display: \"flex\",\n    textAlign: \"center\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Favorite Doctors\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Card.Group, {\n    style: {\n      overflow: 'auto',\n      maxHeight: '52em'\n    },\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    itemsPerRow: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, profileDoctors())));\n};\n\nProfile.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Profile.js"],"names":["React","Header","Divider","Button","Form","Input","Grid","Card","Icon","Container","DoctorCard","PropTypes","Link","Profile","currentUser","loadUser","history","loading","profileDoctors","doctors","map","doc","id","email","split","overflow","maxHeight","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,MADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,IARF,EASEC,SATF,QAUO,mBAVP;AAYA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,OAAzB;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAC/D,QAAMC,cAAc,GAAG,MACrBJ,WAAW,CAACK,OAAZ,IACAL,WAAW,CAACK,OAAZ,CAAoBC,GAApB,CAAyBC,GAAD,IAAS,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,GAAG,CAACC,EAArB;AAAyB,IAAA,MAAM,EAAED,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CAFF;;AAIA,SACE,0CACGP,WAAW,IACV,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,IACV,0CACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,OAAO,EAAC,MAAxB;AAA+B,IAAA,SAAS,EAAC,QAAzC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,CAACS,KAAZ,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADH,EACoC,GADpC,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEP,OAAf;AAAwB,IAAA,KAAK,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,CADF,CAFJ,EAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAWc,GAXd,EAYE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,OAAO,EAAC,MAAxB;AAA+B,IAAA,SAAS,EAAC,QAAzC;AAAkD,IAAA,KAAK,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KADT;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,uBAAgB,QAHlB;AAIE,IAAA,WAAW,EAAE,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,cAAc,EANjB,CAhBF,CAFJ,CADF;AA+BD,CApCD;;AAsCAL,OAAO,CAACc,SAAR,GAAoB;AAClBZ,EAAAA,QAAQ,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADP;AAElBf,EAAAA,WAAW,EAAEH,SAAS,CAACmB,MAAV,CAAiBD;AAFZ,CAApB;AAKA,eAAehB,OAAf","sourcesContent":["import React from 'react';\n\nimport {\n  Header,\n  Divider,\n  Button,\n  Form,\n  Input,\n  Grid,\n  Card,\n  Icon,\n  Container,\n} from 'semantic-ui-react';\n\nimport DoctorCard from '../DoctorCard';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({ currentUser, loadUser, history, loading }) => {\n  const profileDoctors = () =>\n    currentUser.doctors &&\n    currentUser.doctors.map((doc) => <DoctorCard key={doc.id} doctor={doc} />);\n\n  return (\n    <>\n      {currentUser && (\n        <Container text>\n          {currentUser && (\n            <>\n              <Header as='h2' display='flex' textAlign='center' color='red'>\n                {currentUser.email.split(\"@\")[0]}{' '}\n                <Link to={'/profile/edit'}>\n                  <Icon loading={loading} fluid='true' name='edit'>Edit</Icon>\n                </Link>\n              </Header>\n            </>\n          )}\n          <Divider />{' '}\n          <Header as='h2' display='flex' textAlign='center' color='red'>\n            Favorite Doctors\n          </Header>\n          <Divider />\n          <Card.Group\n            style={{ overflow: 'auto', maxHeight: '52em' }}\n            display='flex'\n            justify-content='center'\n            itemsPerRow={3}\n          >\n            {profileDoctors()}\n          </Card.Group>\n        </Container>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}