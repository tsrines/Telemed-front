{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js\";\nimport React from 'react';\nimport { Form, Header, Image, Button, Grid, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      query: '',\n      distance: '',\n      browserLocation: false\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const formData = this.state;\n      this.props.googleSearch(formData);\n      this.props.loadingHandler();\n    };\n\n    this.useCurrentPosition = async e => {\n      const geo = navigator.geolocation;\n      let lat = null;\n      let lng = null;\n      let address = '';\n\n      if (!geo) {\n        console.log('Geo not supported');\n      } else {\n        geo.getCurrentPosition(position => {\n          console.log(position.coords.longitude);\n          console.log(position.coords.longitude);\n          lng = position.coords.longitude;\n          lat = position.coords.latitude;\n        });\n      }\n\n      try {\n        console.log(lat, lng);\n        address = await axios.get(`http://localhost:3000/doctors/getaddress/${lat}/${lng}`);\n        console.log(address);\n        address = address.results.formatted_address;\n        this.setState({\n          address\n        });\n      } catch (err) {\n        console.log('object');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"red\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"../favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \"Telemed\"), this.props.error && React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"No search results found / API is currently down\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"button\", {\n      onClick: this.useCurrentPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Use Current Location\"), React.createElement(\"input\", {\n      required: true,\n      name: \"address\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"What kind of doctor do you need to see?\"), React.createElement(\"input\", {\n      required: true,\n      name: \"query\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"...foot, heart, etc\",\n      value: this.state.query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"How far are you willing to travel?\"), React.createElement(\"input\", {\n      label: 'Travel Distance',\n      required: true,\n      name: \"distance\",\n      onChange: e => this.onChange(e),\n      type: \"number\",\n      placeholder: \"...in miles\",\n      value: this.state.distance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), !this.props.isLoading && React.createElement(Button, {\n      color: \"red\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Get Doctors\"), this.props.isLoading && React.createElement(Button, {\n      loading: true,\n      color: \"red\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js"],"names":["React","Form","Header","Image","Button","Grid","Segment","axios","Search","Component","state","address","query","distance","browserLocation","onChange","e","setState","target","name","value","onSubmit","preventDefault","formData","props","googleSearch","loadingHandler","useCurrentPosition","geo","navigator","geolocation","lat","lng","console","log","getCurrentPosition","position","coords","longitude","latitude","get","results","formatted_address","err","render","height","maxWidth","error","isLoading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Header, Image, Button, Grid, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n  state = {\n    address: '',\n    query: '',\n    distance: '',\n    browserLocation: false,\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const formData = this.state;\n    this.props.googleSearch(formData);\n    this.props.loadingHandler();\n  };\n\n  useCurrentPosition = async (e) => {\n    const geo = navigator.geolocation;\n    let lat = null;\n    let lng = null;\n    let address = '';\n    if (!geo) {\n      console.log('Geo not supported');\n    } else {\n      geo.getCurrentPosition((position) => {\n        console.log(position.coords.longitude)\n        console.log(position.coords.longitude)\n        lng = position.coords.longitude;\n        lat = position.coords.latitude;\n      })\n    }\n\n    try {\n      console.log(lat,lng)\n      address = await axios.get(\n        `http://localhost:3000/doctors/getaddress/${lat}/${lng}`\n      );\n      console.log(address)\n      address = address.results.formatted_address;\n      this.setState({address})\n    } catch (err) {\n      console.log('object');\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 900 }}>\n            <Header as='h2' color='red' textAlign='center'>\n              <Image src='../favicon.ico' />\n              Telemed\n            </Header>\n            {this.props.error && (\n              <Segment>No search results found / API is currently down</Segment>\n            )}\n            <Form onSubmit={this.onSubmit}>\n              <>\n                <Form.Field>\n                  <label>Location</label>\n                  <button onClick={this.useCurrentPosition}>\n                    Use Current Location\n                  </button>\n                  <input\n                    required\n                    name='address'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='Address'\n                    value={this.state.address}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>What kind of doctor do you need to see?</label>\n                  <input\n                    required\n                    name='query'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='...foot, heart, etc'\n                    value={this.state.query}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>How far are you willing to travel?</label>\n                  <input\n                    label={'Travel Distance'}\n                    required\n                    name='distance'\n                    onChange={(e) => this.onChange(e)}\n                    type='number'\n                    placeholder='...in miles'\n                    value={this.state.distance}\n                  />\n                </Form.Field>\n                {!this.props.isLoading && (\n                  <Button color='red' type='submit'>\n                    Get Doctors\n                  </Button>\n                )}\n                {this.props.isLoading && (\n                  <Button loading color='red' type='submit'></Button>\n                )}\n              </>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}