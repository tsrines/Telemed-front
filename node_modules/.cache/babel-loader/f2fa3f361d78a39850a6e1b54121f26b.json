{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DoctorShow from './components/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      favorite: 0,\n      currentUser: null,\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchedDocs: [],\n      apiDoctors: [],\n      doctorShow: {},\n      doctorSearch: []\n    };\n\n    this.doneLoading = () => {\n      this.setState({\n        loading: false\n      }, () => {\n        console.log('loading = false ?', this.state.loading);\n      });\n    };\n\n    this.googleSearch = async payload => {\n      this.setState({\n        loading: true\n      });\n      const apidocs = await fetchApiDoctors(payload);\n      this.setState({\n        doctorSearch: apidocs,\n        loading: false\n      }, () => this.props.history.push('/search/doctors'));\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.map(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n        }\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.heart = doctor => {\n      console.log(doctor);\n      console.log('got here in heart');\n    };\n\n    this.unHeart = favorite => {\n      // debugger\n      // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n      fetch(`https://cryptic-island-45793.herokuapp.com/favorites/${favorite.id}`, {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(data => {\n        let favorites = this.state.currentUser.favorites.filter(favorite => favorite.id !== data.id);\n        let doctors = this.state.currentUser.doctors.filter(doctor => doctor.api_id !== data.api_id);\n        this.setState({ ...this.state,\n          favorite: 0,\n          doctors: [data.doctor, ...this.state.doctors],\n          currentUser: { ...this.state.currentUser,\n            favorites: favorites,\n            doctors: doctors\n          }\n        });\n      });\n    };\n\n    this.favorite = dunno => {\n      console.log('got here in favorite');\n    };\n\n    this.patchUser = async formData => {\n      this.setState({\n        loading: true\n      });\n      let res = await axios.patch(`http://localhost:3000/${this.state.currentUser.id}`, formData);\n      let currentUser = res.data;\n      this.setState({\n        currentUser,\n        loading: false\n      });\n    };\n\n    this.getDoctorById = async id => {\n      // debugger\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow,\n          loading: false\n        });\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n          this.setState({\n            currentUser: res.data\n          });\n        } catch (error) {// alert(error);\n        }\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser: currentUser.user\n      }, () => {\n        localStorage.token = currentUser.token; // this.loadUser();\n\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  async componentDidMount() {// this.getDoctors();\n    // this.loadUser();\n  }\n\n  render() {\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      signUp: this.signUp,\n      logout: this.logout,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        doctors: this.state.doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({}, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        error: this.state.error,\n        isLoading: this.state.isLoading,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        doneLoading: this.doneLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        doctorSearch: this.state.doctorSearch,\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        doctorShow: this.state.doctorShow,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        heart: this.heart,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","NavBar","Container","App","Component","state","loading","favorite","currentUser","lat","lng","doctors","searchedDocs","apiDoctors","doctorShow","doctorSearch","doneLoading","setState","console","log","googleSearch","payload","apidocs","props","history","push","forEach","doc","reviews","place_id","id","map","photos","isFavorite","favoriteArray","filter","doctor","api_id","match","params","length","heart","unHeart","fetch","method","then","resp","json","data","favorites","dunno","patchUser","formData","res","patch","getDoctorById","get","err","getDoctors","error","loadUser","token","localStorage","headers","Authorization","login","post","errors","alert","setUser","signUp","user","logout","removeItem","componentDidMount","render","routerProps","isLoading","rate"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport DoctorShow from './components/DoctorShow';\nimport Doctors from './containers/Doctors';\n\nimport Profile from './components/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\n\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    favorite: 0,\n    currentUser: null,\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchedDocs: [],\n\n    apiDoctors: [],\n\n    doctorShow: {},\n    doctorSearch: [],\n\n  };\n\n  doneLoading = () => {\n    this.setState({ loading: false }, () => {\n      console.log('loading = false ?', this.state.loading);\n    });\n  };\n\n  googleSearch = async (payload) => {\n    this.setState({ loading: true });\n    const apidocs = await fetchApiDoctors(payload);\n\n    this.setState({ doctorSearch: apidocs, loading: false }, () =>\n      this.props.history.push('/search/doctors')\n    );\n\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.map(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n      }\n    });\n    this.setState({ loading: false });\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  heart = (doctor) => {\n    console.log(doctor);\n    console.log('got here in heart');\n  };\n\n  unHeart = (favorite) => {\n    // debugger\n\n    // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n    fetch(\n      `https://cryptic-island-45793.herokuapp.com/favorites/${favorite.id}`,\n      {\n        method: 'DELETE',\n      }\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        let favorites = this.state.currentUser.favorites.filter(\n          (favorite) => favorite.id !== data.id\n        );\n        let doctors = this.state.currentUser.doctors.filter(\n          (doctor) => doctor.api_id !== data.api_id\n        );\n        this.setState({\n          ...this.state,\n          favorite: 0,\n          doctors: [data.doctor, ...this.state.doctors],\n          currentUser: {\n            ...this.state.currentUser,\n            favorites: favorites,\n            doctors: doctors,\n          },\n        });\n      });\n  };\n\n  favorite = (dunno) => {\n    console.log('got here in favorite');\n  };\n\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n\n\n  patchUser = async (formData) => {\n    this.setState({ loading: true });\n    let res = await axios.patch(\n      `http://localhost:3000/${this.state.currentUser.id}`,\n      formData\n    );\n    let currentUser = res.data;\n    this.setState({ currentUser, loading: false });\n  };\n  getDoctorById = async (id) => {\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow, loading: false });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        this.setState({ currentUser: res.data });\n      } catch (error) {\n        // alert(error);\n      }\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n    // this.loadUser();\n  }\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser: currentUser.user,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        // this.loadUser();\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.setState(\n      {\n        currentUser: null,\n      },\n      () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      }\n    );\n  };\n  render() {\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <>\n        <Container>\n          <Router>\n            <NavBar\n              signUp={this.signUp}\n              logout={this.logout}\n              currentUser={this.state.currentUser}\n            />\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route\n                exact\n                path='/doctors'\n                render={(routerProps) => (\n                  <Doctors\n                    loadUser={this.loadUser}\n                    getDoctorById={this.getDoctorById}\n                    currentUser={this.state.currentUser}\n                    loading={this.state.loading}\n                    getDoctors={this.getDoctors}\n                    {...routerProps}\n                    doctors={this.state.doctors}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/signup'\n                render={(routerProps) => (\n                  <SignUp\n                    {...routerProps}\n                    setUser={this.setUser}\n                    signUp={this.signUp}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path='/login'\n                render={(routerProps) => (\n                  <Login\n                    {...routerProps}\n                    setUser={this.setUser}\n                    login={this.login}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/search'\n                render={(routerProps) => (\n                  <Search\n                    error={this.state.error}\n                    isLoading={this.state.isLoading}\n                    currentUser={this.state.currentUser}\n                    {...routerProps}\n                    googleSearch={this.googleSearch}\n                    favorite={this.favorite}\n                    doneLoading={this.doneLoading}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/search/doctors'\n                render={(routerProps) => (\n                  <Doctors\n                    doctorSearch={this.state.doctorSearch}\n                    loadUser={this.loadUser}\n                    getDoctorById={this.getDoctorById}\n                    currentUser={this.state.currentUser}\n                    loading={this.state.loading}\n                    getDoctors={this.getDoctors}\n                    {...routerProps}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/doctors/:id'\n                render={(routerProps) => (\n                  <DoctorShow\n                    loadUser={this.loadUser}\n                    getDoctorById={this.getDoctorById}\n                    doctorShow={this.state.doctorShow}\n                    rate={this.rate}\n                    doctors={this.state.doctors}\n                    favorite={this.state.favorite}\n                    isFavorite={this.isFavorite}\n                    heart={this.heart}\n                    currentUser={this.state.currentUser}\n                    {...routerProps}\n                    favorite={this.favorite}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path='/profile'\n                render={(routerProps) => (\n                  <Profile\n                    patchUser={this.patchUser}\n                    currentUser={this.state.currentUser}\n                    doctors={this.state.doctors}\n                    loadUser={this.loadUser}\n                    {...routerProps}\n                  />\n                )}\n              />\n            </Switch>\n          </Router>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}