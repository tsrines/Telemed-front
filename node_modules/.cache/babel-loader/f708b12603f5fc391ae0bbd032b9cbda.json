{"ast":null,"code":"import _objectSpread from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Route,Switch,withRouter}from'react-router-dom';import{Button,Image}from'semantic-ui-react';import DoctorShow from'./components/DoctorShow';import Doctors from'./containers/Doctors';import Login from'./components/Login';import Profile from'./components/Profile';import Search from'./components/Search';import'./App.css';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={isLoading:false,isLoggedIn:false,register:false,favorite:0,currentUser:{id:\"\",email:\"\",address:\"\",password:\"\",passwordConfirmation:\"\",firstName:\"\",lastName:\"\",doctors:[],favorites:[]},lat:0,lng:0,doctors:[],error:false,apiDoctors:[],users:[]};_this.isFavorite=function(){var favoriteArray=_this.state.currentUser.doctors.filter(function(doctor){return doctor.api_id==_this.props.match.params.id;});if(favoriteArray.length>0){_this.setState({favorite:1});}};_this.rate=function(e,data){};_this.createDoctor=function(doctor){var doctorObj={api_id:doctor.id,first_name:doctor.firstName,last_name:doctor.lastName,address:doctor.address,image:doctor.image,specialty:doctor.specialty,title:doctor.title,gender:doctor.gender,bio:doctor.bio,phone_number:doctor.phone};fetch(\"https://cryptic-island-45793.herokuapp.com/doctors\",{method:\"POST\",headers:{\"Content-type\":\"application/json\",\"Accepts\":\"application/json\"},body:JSON.stringify(doctorObj)}).then(function(resp){return resp.json();}).then(function(data){var doctors=_toConsumableArray(_this.state.doctors);_this.setState(_objectSpread({},_this.state,{doctors:[data].concat(_toConsumableArray(doctors))}),function(){_this.props.history.push('/doctors');});},_this.setState({isLoading:false}));};_this.heart=function(doctor){var favorite=_this.state.currentUser.favorites.find(function(favorite){return favorite.api_id==doctor.api_id;});if(typeof favorite==\"object\"){_this.unHeart(favorite);}else{_this.favorite(doctor);}};_this.unHeart=function(favorite){// debugger\n// let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\nfetch(\"https://cryptic-island-45793.herokuapp.com/favorites/\".concat(favorite.id),{method:\"DELETE\"}).then(function(resp){return resp.json();}).then(function(data){var favorites=_this.state.currentUser.favorites.filter(function(favorite){return favorite.id!==data.id;});var doctors=_this.state.currentUser.doctors.filter(function(doctor){return doctor.api_id!==data.api_id;});_this.setState(_objectSpread({},_this.state,{favorite:0,doctors:[data.doctor].concat(_toConsumableArray(_this.state.doctors)),currentUser:_objectSpread({},_this.state.currentUser,{favorites:favorites,doctors:doctors})}));});};_this.favorite=function(doctor){var favoriteObject={user_id:_this.state.currentUser.id,doctor_id:doctor.id,api_id:doctor.api_id};fetch(\"https://cryptic-island-45793.herokuapp.com/favorites\",{method:\"POST\",headers:{\"content-type\":\"application/json\",\"accepts\":\"application/json\"},body:JSON.stringify(favoriteObject)}).then(function(resp){return resp.json();}).then(function(data){var favorites=_toConsumableArray(_this.state.currentUser.favorites);var doctors=_toConsumableArray(_this.state.currentUser.doctors);var newdoc={id:data.doctor_id,api_id:doctor.api_id,first_name:doctor.first_name,last_name:doctor.last_name,title:doctor.title,gender:doctor.gender,bio:doctor.bio,phone_number:doctor.phone_number};// userDoctors.filter\n_this.setState(_objectSpread({},_this.state,{favorite:1,currentUser:_objectSpread({},_this.state.currentUser,{favorites:[data].concat(_toConsumableArray(favorites)),doctors:[newdoc].concat(_toConsumableArray(doctors))})}));});};_this.onSubmit=function(formData){_this.logInOrSignUp(formData);};_this.logInOrSignUp=function(formData){fetch(\"https://cryptic-island-45793.herokuapp.com/users\",{method:\"POST\",headers:{\"content-type\":\"application/json\",\"accepts\":\"application/json\"},body:JSON.stringify({email:formData.email,password:formData.password,password_confirmation:formData.passwordConfirmation})}).then(function(resp){return resp.json();}).then(function(data){_this.setState(_objectSpread({},_this.state,{currentUser:{id:data.id,email:data.email,address:data.address,password:data.password,passwordConfirmation:data.password_confirmation,firstName:data.first_name,lastName:data.last_name,doctors:data.doctors,favorites:data.favorites},isLoggedIn:true}),function(){return _this.props.history.push('/search');});});};_this.userProfile=function(){var id=_this.state.currentUser.id;fetch(\"https://cryptic-island-45793.herokuapp.com/users/\".concat(id)).then(function(resp){return resp.json();}).then(function(data){_this.setState(_objectSpread({},_this.state,{currentUser:_objectSpread({},_this.state.currentUser,{doctors:data.doctors})}),function(){_this.props.history.push('/profile');});});};_this.logOut=function(){_this.props.history.push('/');_this.setState({isLoggedIn:false,currentUser:{},doctors:[]});};_this.onSignUp=function(){_this.setState({register:!_this.state.register});};_this.toGeoCode=function(formData){fetch(\"https://maps.googleapis.com/maps/api/geocode/json?address=\".concat(formData.address,\"&key=AIzaSyAkZI07elJzbOUJR5DCnSDGTZuDGmcptBM\")).then(function(resp){return resp.json();}).then(function(data){return _this.setState({lat:data[\"results\"][0].geometry.location.lat,lng:data[\"results\"][0].geometry.location.lng},function(){return _this.getDoctors(formData);});}).catch(function(err){return console.dir(err);});};_this.isResolved=function(){if(_this.state.apiDoctors.length<1){_this.setState({error:true});}else{_this.setState({error:false});}};_this.getDoctors=function(formData){fetch(\"https://api.betterdoctor.com/2015-01-27/doctors?query=\".concat(formData.ailment,\"&location=\").concat(_this.state.lat,\"%2C\").concat(_this.state.lng,\"%2C\").concat(formData.miles,\"&skip=0&limit=100&user_key=456c38f1b8349922db25eb4a4fd44429\")).then(function(resp){return resp.json();}).then(function(data){_this.setState({apiDoctors:data.data,isLoading:false},function(){return _this.isResolved();});_this.parseDoctors(data.data);}).catch(function(err){if(err)_this.setState({error:true,isLoading:false});});};_this.parseDoctors=function(doctorsArray){var doctors=[];doctorsArray.map(function(element){try{var doctorHash={};doctorHash.id=element.uid;// doctorHash.image = this.imageApi(element.profile.first_name, element.profile.last_name, element.profile.title)\ndoctorHash.firstName=element.profile.first_name;doctorHash.lastName=element.profile.last_name;if(element.profile.gender==='male'){doctorHash.image='https://semantic-ui.com/images/avatar2/large/matthew.png';}else if(element.profile.gender==='female'){doctorHash.image='https://semantic-ui.com/images/avatar2/large/kristy.png';}else{doctorHash.image='https://semantic-ui.com/images/avatar2/large/elyse.png';}doctorHash.title=element.profile.title;doctorHash.bio=element.profile.bio;doctorHash.address=element.practices[0].address;doctorHash.gender=element.profile.gender;doctorHash.phone=element.practices[0].phones[0].number;doctorHash.specialty=element.specialties[0].name;doctors.push(doctorHash);_this.createDoctor(doctorHash);}catch(err){console.log(err);}});};_this.loadingHandler=function(){_this.setState({isLoading:true});};_this.patchUser=function(userData){fetch(\"https://cryptic-island-45793.herokuapp.com\"+\"/users/\".concat(_this.state.currentUser.id),{method:\"PATCH\",headers:{\"content-type\":\"application/json\",\"accepts\":\"application/json\"},body:JSON.stringify({email:userData.email,password:userData.password,password_confirmation:userData.passwordConfirmation,first_name:userData.firstName,last_name:userData.lastName,address:userData.address})}).then(function(resp){return resp.json();}).then(function(data){return _this.setState(_objectSpread({},_this.state,{currentUser:{doctors:data.doctors,favorites:data.favorites,id:data.id,email:data.email,address:data.address,password:data.password,passwordConfirmation:data.password_confirmation,firstName:data.first_name,lastName:data.last_name}}));});};_this.searchButton=function(){if(_this.state.isLoggedIn){_this.props.history.push('/search');}else{alert('Please log in before searching');}};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// let doctorsInCurrentState = [...this.state.doctors]\nfetch(\"https://cryptic-island-45793.herokuapp.com\"+\"/users\").then(function(resp){return resp.json();}).then(function(users){_this2.setState({users:users});});}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(\"div\",null,React.createElement(Button,{color:\"red\",onClick:function onClick(){return _this3.searchButton();}},\"Search\"),this.state.isLoggedIn&&React.createElement(Button,{color:\"red\",onClick:function onClick(){return _this3.userProfile();}},\"Profile\"),this.state.isLoggedIn&&React.createElement(Button,{color:\"red\",onClick:this.logOut},\"Logout\"),React.createElement(Image,{alt:\"\",src:\"\"}),!this.state.isLoggedIn&&React.createElement(Login,{isLoggedIn:this.state.isLoggedIn,onSignUp:this.onSignUp,onSubmit:this.onSubmit,register:this.state.register}),React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/doctors\",render:function render(routerProps){return React.createElement(Doctors,Object.assign({createDoctor:_this3.createDoctor},routerProps,{doctors:_this3.state.doctors}));}}),React.createElement(Route,{exact:true,path:\"/search\",render:function render(routerProps){return React.createElement(Search,Object.assign({error:_this3.state.error,isLoading:_this3.state.isLoading,currentUser:_this3.state.currentUser,loadingHandler:_this3.loadingHandler},routerProps,{toGeoCode:_this3.toGeoCode,favorite:_this3.favorite}));}}),React.createElement(Route,{exact:true,path:\"/doctors/:id\",render:function render(routerProps){return React.createElement(DoctorShow,Object.assign({rate:_this3.rate,doctors:_this3.state.doctors,favorite:_this3.state.favorite,isFavorite:_this3.isFavorite,heart:_this3.heart,currentUser:_this3.state.currentUser},routerProps,{favorite:_this3.favorite}));}}),React.createElement(Route,{exact:true,path:\"/profile\",render:function render(routerProps){return React.createElement(Profile,Object.assign({patchUser:_this3.patchUser,currentUser:_this3.state.currentUser,doctors:_this3.state.doctors,isLoggedIn:_this3.state.isLoggedIn},routerProps));}})));}}]);return App;}(React.Component);export default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","Button","Image","DoctorShow","Doctors","Login","Profile","Search","App","state","isLoading","isLoggedIn","register","favorite","currentUser","id","email","address","password","passwordConfirmation","firstName","lastName","doctors","favorites","lat","lng","error","apiDoctors","users","isFavorite","favoriteArray","filter","doctor","api_id","props","match","params","length","setState","rate","e","data","createDoctor","doctorObj","first_name","last_name","image","specialty","title","gender","bio","phone_number","phone","fetch","method","headers","body","JSON","stringify","then","resp","json","history","push","heart","find","unHeart","favoriteObject","user_id","doctor_id","newdoc","onSubmit","formData","logInOrSignUp","password_confirmation","userProfile","logOut","onSignUp","toGeoCode","geometry","location","getDoctors","catch","err","console","dir","isResolved","ailment","miles","parseDoctors","doctorsArray","map","element","doctorHash","uid","profile","practices","phones","number","specialties","name","log","loadingHandler","patchUser","userData","searchButton","alert","routerProps","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Route,\n  Switch,\n  withRouter,\n} from 'react-router-dom'\nimport { Button, Image } from 'semantic-ui-react'\nimport DoctorShow from './components/DoctorShow'\nimport Doctors from './containers/Doctors'\nimport Login from './components/Login'\nimport Profile from './components/Profile'\nimport Search from './components/Search'\nimport './App.css';\n\n\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: false,\n    isLoggedIn: false,\n    register: false,\n    favorite: 0,\n    currentUser: {\n      id: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      doctors: [],\n      favorites: []\n    },\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    error: false,\n    apiDoctors: [],\n    users: []\n  }\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id)\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1\n      })\n    }\n\n  }\n\n  rate = (e, data) => {\n\n  }\n\n  createDoctor = (doctor) => {\n\n    let doctorObj = {\n      api_id: doctor.id,\n      first_name: doctor.firstName,\n      last_name: doctor.lastName,\n      address: doctor.address,\n      image: doctor.image,\n      specialty: doctor.specialty,\n      title: doctor.title,\n      gender: doctor.gender,\n      bio: doctor.bio,\n      phone_number: doctor.phone\n    }\n\n    fetch(\"https://cryptic-island-45793.herokuapp.com/doctors\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify(doctorObj)\n    }).then(resp => resp.json())\n      .then(data => {\n\n        let doctors = [...this.state.doctors]\n        this.setState({\n          ...this.state,\n          doctors: [data, ...doctors]\n        }, () => { this.props.history.push('/doctors') })\n      }, this.setState({ isLoading: false }))\n  }\n\n  heart = (doctor) => {\n\n\n    let favorite = this.state.currentUser.favorites.find(favorite => favorite.api_id == doctor.api_id)\n\n\n    if (typeof favorite == \"object\") {\n\n      this.unHeart(favorite)\n    } else {\n\n      this.favorite(doctor)\n    }\n  }\n\n  unHeart = (favorite) => {\n    // debugger\n\n    // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n    fetch(`https://cryptic-island-45793.herokuapp.com/favorites/${favorite.id}`, {\n      method: \"DELETE\",\n    }).then(resp => resp.json()).then(data => {\n      let favorites = this.state.currentUser.favorites.filter(favorite => favorite.id !== data.id)\n      let doctors = this.state.currentUser.doctors.filter(doctor => doctor.api_id !== data.api_id)\n      this.setState({\n        ...this.state,\n        favorite: 0,\n        doctors: [data.doctor, ...this.state.doctors],\n        currentUser: {\n          ...this.state.currentUser,\n          favorites: favorites,\n          doctors: doctors\n        }\n      })\n    })\n  }\n\n  favorite = (doctor) => {\n    let favoriteObject = {\n      user_id: this.state.currentUser.id,\n      doctor_id: doctor.id,\n      api_id: doctor.api_id\n    }\n\n    fetch(\"https://cryptic-island-45793.herokuapp.com/favorites\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify(favoriteObject)\n    }).then(resp => resp.json())\n      .then(data => {\n        let favorites = [...this.state.currentUser.favorites]\n        let doctors = [...this.state.currentUser.doctors]\n\n        let newdoc = {\n          id: data.doctor_id,\n          api_id: doctor.api_id,\n          first_name: doctor.first_name,\n          last_name: doctor.last_name,\n          title: doctor.title,\n          gender: doctor.gender,\n          bio: doctor.bio,\n          phone_number: doctor.phone_number\n        }\n\n        // userDoctors.filter\n        this.setState({\n          ...this.state,\n          favorite: 1,\n          currentUser: {\n            ...this.state.currentUser,\n            favorites: [data, ...favorites],\n            doctors: [newdoc, ...doctors]\n\n          }\n        })\n\n      })\n\n  }\n\n\n  onSubmit = (formData) => {\n    this.logInOrSignUp(formData)\n  }\n\n  logInOrSignUp = (formData) => {\n    fetch(\"https://cryptic-island-45793.herokuapp.com/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password,\n        password_confirmation: formData.passwordConfirmation\n\n      })\n    }).then(resp => resp.json())\n      .then(data => {\n\n        this.setState({\n          ...this.state,\n          currentUser: {\n            id: data.id,\n            email: data.email,\n            address: data.address,\n            password: data.password,\n            passwordConfirmation: data.password_confirmation,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            doctors: data.doctors,\n            favorites: data.favorites\n          },\n          isLoggedIn: true\n        }, () => this.props.history.push('/search'))\n      }\n\n      )\n\n  }\n\n  userProfile = () => {\n\n\n    let id = this.state.currentUser.id\n    fetch(`https://cryptic-island-45793.herokuapp.com/users/${id}`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          ...this.state,\n          currentUser: {\n            ...this.state.currentUser,\n            doctors: data.doctors\n          }\n\n        }, () => {\n\n          this.props.history.push('/profile')\n        })\n      })\n  }\n\n  logOut = () => {\n    this.props.history.push('/')\n    this.setState({ isLoggedIn: false, currentUser: {}, doctors: [] })\n  }\n\n  onSignUp = () => {\n    this.setState({ register: !this.state.register })\n  }\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n  toGeoCode = (formData) => {\n\n\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${formData.address}&key=AIzaSyAkZI07elJzbOUJR5DCnSDGTZuDGmcptBM`)\n      .then(resp => resp.json())\n      .then(data => this.setState({\n        lat: data[\"results\"][0].geometry.location.lat,\n        lng: data[\"results\"][0].geometry.location.lng\n      }, () => this.getDoctors(formData))).catch(err => console.dir(err))\n\n  }\n\n  // request to BetterDoc API with Long/Lat\n  isResolved = () => {\n    if (this.state.apiDoctors.length < 1) {\n      this.setState({ error: true })\n    } else {\n      this.setState({ error: false })\n    }\n  }\n\n  getDoctors = (formData) => {\n\n    fetch(`https://api.betterdoctor.com/2015-01-27/doctors?query=${formData.ailment}&location=${this.state.lat}%2C${this.state.lng}%2C${formData.miles}&skip=0&limit=100&user_key=456c38f1b8349922db25eb4a4fd44429`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          apiDoctors: data.data,\n          isLoading: false\n        }, () => this.isResolved())\n        this.parseDoctors(data.data)\n      }).catch((err) => {\n        if(err) this.setState({error: true, isLoading: false})\n      })\n  }\n\n\n  parseDoctors = (doctorsArray) => {\n\n    let doctors = []\n    doctorsArray.map(element => {\n\n\n      try {\n        let doctorHash = {}\n        doctorHash.id = element.uid\n        // doctorHash.image = this.imageApi(element.profile.first_name, element.profile.last_name, element.profile.title)\n        doctorHash.firstName = element.profile.first_name\n        doctorHash.lastName = element.profile.last_name\n        if (element.profile.gender === 'male') {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/matthew.png'\n        } else if (element.profile.gender === 'female') {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/kristy.png'\n        } else {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/elyse.png'\n        }\n        doctorHash.title = element.profile.title\n        doctorHash.bio = element.profile.bio\n        doctorHash.address = element.practices[0].address\n        doctorHash.gender = element.profile.gender\n        doctorHash.phone = element.practices[0].phones[0].number\n\n        doctorHash.specialty = element.specialties[0].name\n        doctors.push(doctorHash)\n        this.createDoctor(doctorHash)\n      }\n      catch (err) {\n        console.log(err)\n      }\n    })\n  }\n\n  loadingHandler = () => {\n    this.setState({ isLoading: true })\n  }\n\n\n  patchUser = (userData) => {\n\n    fetch(\"https://cryptic-island-45793.herokuapp.com\" + `/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: userData.email,\n        password: userData.password,\n        password_confirmation: userData.passwordConfirmation,\n        first_name: userData.firstName,\n        last_name: userData.lastName,\n        address: userData.address,\n\n      })\n    }).then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          ...this.state,\n          currentUser: {\n            doctors: data.doctors,\n            favorites: data.favorites,\n            id: data.id,\n            email: data.email,\n            address: data.address,\n            password: data.password,\n            passwordConfirmation: data.password_confirmation,\n            firstName: data.first_name,\n            lastName: data.last_name\n          }\n        }))\n  }\n\n  componentDidMount() {\n    // let doctorsInCurrentState = [...this.state.doctors]\n    fetch(\"https://cryptic-island-45793.herokuapp.com\" + `/users`)\n      .then(resp => resp.json())\n      .then(users => {\n        this.setState({\n          users\n        })\n      })\n  }\n\n  searchButton = () => {\n    if (this.state.isLoggedIn) {\n      this.props.history.push('/search')\n    } else {\n      alert('Please log in before searching')\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"red\" onClick={() => this.searchButton()} >Search</Button>\n        {this.state.isLoggedIn && <Button color=\"red\" onClick={() => this.userProfile()}>Profile</Button>}\n        {this.state.isLoggedIn && <Button color=\"red\" onClick={this.logOut}>Logout</Button>}\n        <Image alt=\"\" src=\"\"></Image>\n        {!this.state.isLoggedIn && <Login isLoggedIn={this.state.isLoggedIn} onSignUp={this.onSignUp} onSubmit={this.onSubmit} register={this.state.register} />}\n        <Switch>\n          <Route exact path='/doctors' render={routerProps => <Doctors createDoctor={this.createDoctor}  {...routerProps} doctors={this.state.doctors} />} />\n          <Route exact path='/search' render={routerProps => <Search error={this.state.error} isLoading={this.state.isLoading} currentUser={this.state.currentUser} loadingHandler={this.loadingHandler} {...routerProps} toGeoCode={this.toGeoCode} favorite={this.favorite} />} />\n          <Route exact path='/doctors/:id' render={routerProps => <DoctorShow rate={this.rate} doctors={this.state.doctors} favorite={this.state.favorite} isFavorite={this.isFavorite} heart={this.heart} currentUser={this.state.currentUser} {...routerProps} favorite={this.favorite} />} />\n          <Route exact path='/profile' render={routerProps => <Profile patchUser={this.patchUser} currentUser={this.state.currentUser} doctors={this.state.doctors} isLoggedIn={this.state.isLoggedIn} {...routerProps} />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App)"]},"metadata":{},"sourceType":"module"}