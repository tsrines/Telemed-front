{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js\";\nimport React from 'react';\nimport { Grid, Rating, Header, Message, Divider, Segment, Image } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass DoctorShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: 0,\n      currentUser: null,\n      doc: {},\n      id: null\n    };\n\n    this.postFavorite = async () => {\n      const favoriteObject = {\n        doctor_id: this.props.match.params.id,\n        user_id: this.state.currentUser.id\n      };\n\n      try {\n        let res = await axios.post(`http://localhost:3000/favorites`, favoriteObject);\n        this.setState({\n          favorite: 1,\n          id: res.data.id\n        });\n        console.log(res.data);\n      } catch (error) {}\n    };\n\n    this.deleteFavorite = async () => {\n      try {\n        let res = await axios.delete(`http://localhost:3000/favorites/${this.state.id}`);\n        console.log(\"res.data from deletefavorite\", res.data);\n        this.setState({\n          favorite: 0,\n          id: null\n        });\n      } catch (err) {\n        console.log(\"error\", err);\n      }\n\n      console.log('got here in delete');\n    };\n\n    this.rate = (e, {\n      rating\n    }) => {\n      if (rating === 0) {\n        this.deleteFavorite();\n      } else {\n        this.postFavorite();\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getDoctorById(parseInt(this.props.match.params.id));\n    console.log(doctor); // if(this.props.currentUser.doctors.includes(this.props.doctorShow)) this.setState({favorite: 1})\n\n    const token = localStorage.token;\n\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: {\n            Authorization: token\n          }\n        });\n\n        if (res.errors) {\n          this.setState({\n            currentUser: null\n          });\n        } else {\n          // debugger\n          this.setState({\n            currentUser: res.data\n          });\n        }\n      } catch (error) {\n        this.setState({\n          currentUser: null\n        });\n        alert(error);\n      }\n    }\n  }\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \", this.state); // debugger\n\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos\n    } = this.props.doctorShow;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        maxWidth: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, name), React.createElement(Rating, {\n      onRate: (e, data) => this.rate(e, data),\n      icon: \"heart\",\n      rating: this.state.favorite,\n      maxRating: 1,\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Phone Number: \", formatted_phone_number), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Address: \", formatted_address), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: website,\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      to: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Website\")), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: url,\n      rel: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Google Maps\")), rating && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Average Rating: \", rating), reviews && reviews.map(review => React.createElement(\"div\", {\n      key: review.author_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, review.author_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, review.text)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, photos && photos.map(photo => React.createElement(Image, {\n      key: photo.id,\n      alt: \"\",\n      src: photo.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default DoctorShow;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js"],"names":["React","Grid","Rating","Header","Message","Divider","Segment","Image","axios","DoctorShow","Component","state","favorite","currentUser","doc","id","postFavorite","favoriteObject","doctor_id","props","match","params","user_id","res","post","setState","data","console","log","error","deleteFavorite","delete","err","rate","e","rating","componentDidMount","getDoctorById","parseInt","doctor","token","localStorage","get","headers","Authorization","errors","alert","render","name","formatted_phone_number","formatted_address","url","website","reviews","photos","doctorShow","height","maxWidth","map","review","author_name","text","photo","slug"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,KAPF,QAQO,mBARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,WAAW,EAAE,IAFP;AAGNC,MAAAA,GAAG,EAAE,EAHC;AAINC,MAAAA,EAAE,EAAE;AAJE,KAF+B;;AAAA,SAsCvCC,YAtCuC,GAsCxB,YAAY;AACzB,YAAMC,cAAc,GAAG;AACrBC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBN,EADd;AAErBO,QAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWE,WAAX,CAAuBE;AAFX,OAAvB;;AAIA,UAAI;AACF,YAAIQ,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAY,iCAAZ,EAA8CP,cAA9C,CAAhB;AACA,aAAKQ,QAAL,CAAc;AAACb,UAAAA,QAAQ,EAAE,CAAX;AAAcG,UAAAA,EAAE,EAAEQ,GAAG,CAACG,IAAJ,CAASX;AAA3B,SAAd;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACD,OAJD,CAIE,OAAOG,KAAP,EAAc,CAEf;AACF,KAlDsC;;AAAA,SAoDvCC,cApDuC,GAoDtB,YAAY;AAC3B,UAAI;AACF,YAAIP,GAAG,GAAG,MAAMf,KAAK,CAACuB,MAAN,CAAc,mCAAkC,KAAKpB,KAAL,CAAWI,EAAG,EAA9D,CAAhB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CL,GAAG,CAACG,IAA/C;AACA,aAAKD,QAAL,CAAc;AAACb,UAAAA,QAAQ,EAAE,CAAX;AAAcG,UAAAA,EAAE,EAAE;AAAlB,SAAd;AACD,OAJD,CAIE,OAAOiB,GAAP,EAAY;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,GAArB;AACD;;AAEDL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,KA9DsC;;AAAA,SAgEvCK,IAhEuC,GAgEhC,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAmB;AACxB,UAAGA,MAAM,KAAK,CAAd,EAAgB;AACd,aAAKL,cAAL;AACD,OAFD,MAEO;AACL,aAAKd,YAAL;AACD;AAGF,KAxEsC;AAAA;;AAWvC,QAAMoB,iBAAN,GAA0B;AACxB,SAAKjB,KAAL,CAAWkB,aAAX,CAAyBC,QAAQ,CAAC,KAAKnB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBN,EAAzB,CAAjC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ,EAFwB,CAIxB;;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACD,KAA3B;;AACA,QAAIA,KAAJ,EAAW;AACT;AAEA,UAAI;AACF,YAAIjB,GAAG,GAAG,MAAMf,KAAK,CAACkC,GAAN,CAAU,kCAAV,EAA8C;AAC5DC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEJ;AAAjB;AADmD,SAA9C,CAAhB;;AAGA,YAAGjB,GAAG,CAACsB,MAAP,EAAc;AACZ,eAAKpB,QAAL,CAAc;AAACZ,YAAAA,WAAW,EAAE;AAAd,WAAd;AACD,SAFD,MAEO;AACL;AACA,eAAKY,QAAL,CAAc;AAAEZ,YAAAA,WAAW,EAAEU,GAAG,CAACG;AAAnB,WAAd;AACD;AAEF,OAXD,CAWE,OAAOG,KAAP,EAAc;AACd,aAAKJ,QAAL,CAAc;AAACZ,UAAAA,WAAW,EAAE;AAAd,SAAd;AACAiC,QAAAA,KAAK,CAACjB,KAAD,CAAL;AACD;AACF;AACF;;AAsCDkB,EAAAA,MAAM,GAAG;AACPpB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuC,KAAKjB,KAA5C,EADO,CAEP;;AACA,UAAM;AACJqC,MAAAA,IADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,iBAHI;AAIJf,MAAAA,MAJI;AAKJgB,MAAAA,GALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA;AARI,QASF,KAAKnC,KAAL,CAAWoC,UATf;AAWA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,aAAa,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAST,IAAT,CADF,EAEE,oBAAC,MAAD;AACE,MAAA,MAAM,EAAE,CAACd,CAAD,EAAIR,IAAJ,KAAa,KAAKO,IAAL,CAAUC,CAAV,EAAaR,IAAb,CADvB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,QAHrB;AAIE,MAAA,SAAS,EAAE,CAJb;AAKE,MAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAwBqC,sBAAxB,CAVF,EAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmBC,iBAAnB,CAXF,EAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAEE,OADR;AAEE,MAAA,GAAG,EAAC,qBAFN;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,EAAE,EAAEA,OAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAZF,EAsBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAED,GAAT;AAAc,MAAA,GAAG,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAtBF,EA2BGhB,MAAM,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0BA,MAA1B,CA3Bb,EA4BGkB,OAAO,IACNA,OAAO,CAACK,GAAR,CAAaC,MAAD,IACV;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,MAAM,CAACC,WAAhB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACE,IAAX,CAJF,CADF,CADF,CA7BJ,CADF,CADF,EA2CE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,MAAM,IACLA,MAAM,CAACI,GAAP,CAAYI,KAAD,IACT,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAAC/C,EAAlB;AAAsB,MAAA,GAAG,EAAC,EAA1B;AAA6B,MAAA,GAAG,EAAE+C,KAAK,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CA3CF,CANF,CADF,CADF;AA6DD;;AArJsC;;AAwJzC,eAAetD,UAAf","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Rating,\n  Header,\n  Message,\n  Divider,\n  Segment,\n  Image,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass DoctorShow extends React.Component {\n\n  state = {\n    favorite: 0,\n    currentUser: null,\n    doc: {},\n    id: null,\n  };\n\n\n\n  async componentDidMount() {\n    this.props.getDoctorById(parseInt(this.props.match.params.id));\n    console.log(doctor)\n\n    // if(this.props.currentUser.doctors.includes(this.props.doctorShow)) this.setState({favorite: 1})\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        if(res.errors){\n          this.setState({currentUser: null})\n        } else {\n          // debugger\n          this.setState({ currentUser: res.data });\n        }\n\n      } catch (error) {\n        this.setState({currentUser: null})\n        alert(error);\n      }\n    }\n  }\n\n  postFavorite = async () => {\n    const favoriteObject = {\n      doctor_id: this.props.match.params.id,\n      user_id: this.state.currentUser.id\n    }\n    try {\n      let res = await axios.post(`http://localhost:3000/favorites`, favoriteObject)\n      this.setState({favorite: 1, id: res.data.id})\n      console.log(res.data)\n    } catch (error) {\n      \n    }\n  }\n\n  deleteFavorite = async () => {\n    try {      \n      let res = await axios.delete(`http://localhost:3000/favorites/${this.state.id}`)\n      console.log(\"res.data from deletefavorite\",res.data)\n      this.setState({favorite: 0, id: null})\n    } catch (err) {\n      console.log(\"error\", err)\n    }\n\n    console.log('got here in delete')\n  }\n\n  rate = (e, { rating }) => {\n    if(rating === 0){\n      this.deleteFavorite()\n    } else {\n      this.postFavorite()\n    }\n\n\n  };\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \",this.state)\n    // debugger\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos,\n    } = this.props.doctorShow;\n\n    return (\n      <div>\n        <Grid\n          columns={2}\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Row style={{ maxWidth: 1000 }}>\n            <Grid.Column>\n              <Segment>\n                <Header>{name}</Header>\n                <Rating\n                  onRate={(e, data) => this.rate(e, data)}\n                  icon='heart'\n                  rating={this.state.favorite}\n                  maxRating={1}\n                  size='huge'\n                />\n                <Divider />\n                <Message>Phone Number: {formatted_phone_number}</Message>\n                <Message>Address: {formatted_address}</Message>\n                <Message>\n                  <a\n                    href={website}\n                    rel='noopener noreferrer'\n                    target='_blank'\n                    to={website}\n                  >\n                    Website\n                  </a>\n                </Message>\n                <Message>\n                  <a href={url} rel=''>\n                    Google Maps\n                  </a>\n                </Message>\n                {rating && <Message>Average Rating: {rating}</Message>}\n                {reviews &&\n                  reviews.map((review) => (\n                    <div key={review.author_name}>\n                      <Message>\n                        <span>\n                          <strong>{review.author_name}</strong>\n                        </span>\n                        <p>{review.text}</p>\n                      </Message>\n                    </div>\n                  ))}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              {photos &&\n                photos.map((photo) => (\n                  <Image key={photo.id} alt='' src={photo.slug}></Image>\n                ))}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DoctorShow;\n"]},"metadata":{},"sourceType":"module"}