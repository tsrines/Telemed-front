{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js\";\nimport React from 'react';\nimport { Grid, Rating, Header, Message, Divider, Segment } from 'semantic-ui-react';\n\nclass DoctorShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isFavorite = () => {\n      // eslint-disable-next-line\n      let favoriteArray = this.props.currentUser.doctors.filter( // eslint-disable-next-line\n      doctor => doctor.id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.state = {\n      favorite: 0\n    };\n\n    this.favoriteHandler = () => {\n      this.setState({\n        favorite: 0\n      });\n    };\n\n    this.docCheck = () => {\n      let doc;\n\n      if (this.props.doctors.length > 0) {\n        // eslint-disable-next-line\n        doc = this.props.doctors.find( // eslint-disable-next-line\n        doctor => doctor.id == this.props.match.params.id);\n\n        if (!!doc) {\n          this.renderDocJsx(doc);\n        }\n      } else {\n        doc = this.props.currentUser.doctors.find( // eslint-disable-next-line\n        doctor => doctor.id == this.props.match.params.id);\n\n        if (!!doc) {\n          this.renderDocJsx(doc);\n        }\n      }\n    };\n\n    this.rate = (e, data, doc) => {\n      this.setState({\n        favorite: data.rating\n      }, () => this.props.heart(doc));\n    };\n  }\n\n  componentDidMount() {\n    if (Array.isArray(this.props.currentUser.doctors)) {\n      this.isFavorite();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    let doc;\n    doc = this.props.currentUser.doctors.find( // eslint-disable-next-line\n    doctor => doctor.id == this.props.match.params.id); // eslint-disable-next-line\n\n    if (doc == undefined) {\n      // eslint-disable-next-line\n      doc = this.props.doctors.find( // eslint-disable-next-line\n      doctor => doctor.id == this.props.match.params.id);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\ndefa;\nexport default DoctorShow;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js"],"names":["React","Grid","Rating","Header","Message","Divider","Segment","DoctorShow","Component","isFavorite","favoriteArray","props","currentUser","doctors","filter","doctor","id","match","params","length","setState","favorite","state","favoriteHandler","docCheck","doc","find","renderDocJsx","rate","e","data","rating","heart","componentDidMount","Array","isArray","render","console","log","undefined","height","defa"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Rating,\n  Header,\n  Message,\n  Divider,\n  Segment,\n} from 'semantic-ui-react';\n\nclass DoctorShow extends React.Component {\n  isFavorite = () => {\n    // eslint-disable-next-line\n    let favoriteArray = this.props.currentUser.doctors.filter(\n      // eslint-disable-next-line\n      (doctor) => doctor.id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  state = {\n    favorite: 0,\n  };\n\n  favoriteHandler = () => {\n    this.setState({\n      favorite: 0,\n    });\n  };\n\n  docCheck = () => {\n    let doc;\n    if (this.props.doctors.length > 0) {\n      // eslint-disable-next-line\n      doc = this.props.doctors.find(\n        // eslint-disable-next-line\n        (doctor) => doctor.id == this.props.match.params.id\n      );\n      if (!!doc) {\n        this.renderDocJsx(doc);\n      }\n    } else {\n      doc = this.props.currentUser.doctors.find(\n        // eslint-disable-next-line\n        (doctor) => doctor.id == this.props.match.params.id\n      );\n      if (!!doc) {\n        this.renderDocJsx(doc);\n      }\n    }\n  };\n\n  componentDidMount() {\n    if (Array.isArray(this.props.currentUser.doctors)) {\n      this.isFavorite();\n    }\n  }\n\n  rate = (e, data, doc) => {\n    this.setState(\n      {\n        favorite: data.rating,\n      },\n      () => this.props.heart(doc)\n    );\n  };\n\n  render() {\n    console.log(this.props)\n    let doc;\n    doc = this.props.currentUser.doctors.find(\n      // eslint-disable-next-line\n      (doctor) => doctor.id == this.props.match.params.id\n    );\n    // eslint-disable-next-line\n    if (doc == undefined) {\n      // eslint-disable-next-line\n      doc = this.props.doctors.find(\n        // eslint-disable-next-line\n        (doctor) => doctor.id == this.props.match.params.id\n      );\n    }\n\n    return (\n      <div>\n        <Grid\n          columns={2}\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          {/* <Grid.Row style={{ maxWidth: 750 }}>\n            <Grid.Column>\n              <Segment>\n                <Header>\n                  {doc.first_name ? doc.first_name : doc.firstName}{' '}\n                  {doc.last_name ? doc.last_name : doc.lastName} {doc.title}\n                </Header>\n                <Divider />\n                <Message>Phone Number: {doc.phone_number}</Message>\n                <Rating\n                  onRate={(e, data) => this.rate(e, data, doc)}\n                  icon='heart'\n                  rating={this.state.favorite}\n                  maxRating={1}\n                  size='huge'\n                />\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Message>{doc.bio}</Message>\n            </Grid.Column>\n          </Grid.Row> */}\n        </Grid>\n      </div>\n    );\n  }\n}\n\ndefa\n\nexport default DoctorShow;\n"]},"metadata":{},"sourceType":"module"}