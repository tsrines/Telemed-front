{"ast":null,"code":"import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{API_ROOT,HEADERS}from'../constants';var NewMessageForm=/*#__PURE__*/function(_React$Component){_inherits(NewMessageForm,_React$Component);function NewMessageForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,NewMessageForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(NewMessageForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={text:'',conversation_id:_this.props.conversation_id};_this.componentWillReceiveProps=function(nextProps){_this.setState({conversation_id:nextProps.conversation_id});};_this.handleChange=function(e){_this.setState({text:e.target.value});};_this.handleSubmit=function(e){e.preventDefault();fetch(\"\".concat(API_ROOT,\"/messages\"),{method:'POST',headers:HEADERS,body:JSON.stringify(_this.state)});_this.setState({text:''});};_this.render=function(){return React.createElement(\"div\",{className:\"newMessageForm\"},React.createElement(\"form\",{onSubmit:_this.handleSubmit},React.createElement(\"label\",null,\"New Message:\"),React.createElement(\"br\",null),React.createElement(\"input\",{type:\"text\",value:_this.state.text,onChange:_this.handleChange}),React.createElement(\"input\",{type:\"submit\"})));};return _this;}return NewMessageForm;}(React.Component);export default NewMessageForm;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/NewMessageForm.js"],"names":["React","API_ROOT","HEADERS","NewMessageForm","state","text","conversation_id","props","componentWillReceiveProps","nextProps","setState","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","render","Component"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,cAAlC,C,GAGMC,CAAAA,c,2aACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,eAAe,CAAE,MAAKC,KAAL,CAAWD,eAFtB,C,OAKRE,yB,CAA4B,SAACC,SAAD,CAAe,CACzC,MAAKC,QAAL,CAAc,CAAEJ,eAAe,CAAEG,SAAS,CAACH,eAA7B,CAAd,EACD,C,OAEDK,Y,CAAe,SAACC,CAAD,CAAO,CACpB,MAAKF,QAAL,CAAc,CAAEL,IAAI,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAjB,CAAd,EACD,C,OAEDC,Y,CAAe,SAACH,CAAD,CAAO,CACpBA,CAAC,CAACI,cAAF,GAEAC,KAAK,WAAIhB,QAAJ,cAAyB,CAC5BiB,MAAM,CAAE,MADoB,CAE5BC,OAAO,CAAEjB,OAFmB,CAG5BkB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,MAAKlB,KAApB,CAHsB,CAAzB,CAAL,CAKA,MAAKM,QAAL,CAAc,CAAEL,IAAI,CAAE,EAAR,CAAd,EACD,C,OAEDkB,M,CAAS,UAAM,CACb,MACE,4BAAK,SAAS,CAAC,gBAAf,EACE,4BAAM,QAAQ,CAAE,MAAKR,YAArB,EACE,gDADF,CAEE,8BAFF,CAGE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAE,MAAKX,KAAL,CAAWC,IAFpB,CAGE,QAAQ,CAAE,MAAKM,YAHjB,EAHF,CAQE,6BAAO,IAAI,CAAC,QAAZ,EARF,CADF,CADF,CAcD,C,uCAxC0BX,KAAK,CAACwB,S,EA2CnC,cAAerB,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport { API_ROOT, HEADERS } from '../constants';\n\n\nclass NewMessageForm extends React.Component {\n  state = {\n    text: '',\n    conversation_id: this.props.conversation_id,\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    this.setState({ conversation_id: nextProps.conversation_id });\n  };\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(`${API_ROOT}/messages`, {\n      method: 'POST',\n      headers: HEADERS,\n      body: JSON.stringify(this.state),\n    });\n    this.setState({ text: '' });\n  };\n\n  render = () => {\n    return (\n      <div className='newMessageForm'>\n        <form onSubmit={this.handleSubmit}>\n          <label>New Message:</label>\n          <br />\n          <input\n            type='text'\n            value={this.state.text}\n            onChange={this.handleChange}\n          />\n          <input type='submit' />\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default NewMessageForm;\n"]},"metadata":{},"sourceType":"module"}