{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/Photos.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Grid } from 'semantic-ui-react';\n\nconst Photos = ({\n  photos\n}) => {\n  return React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Image.Group, {\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, photos && photos.map(photo => React.createElement(Image, {\n    key: photo.id,\n    alt: \"\",\n    src: photo.slug,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))));\n};\n\nPhotos.propTypes = {\n  photos: PropTypes.array.isRequired\n};\nexport default Photos;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/Photos.js"],"names":["React","PropTypes","Image","Grid","Photos","photos","map","photo","id","slug","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7B,SAEI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,IACLA,MAAM,CAACC,GAAP,CAAYC,KAAD,IACT,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,GAAG,EAAC,EAA1B;AAA6B,IAAA,GAAG,EAAED,KAAK,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CAFJ;AAYD,CAbD;;AAeAL,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,MAAM,EAAEJ,SAAS,CAACU,KAAV,CAAgBC;AADP,CAAnB;AAIA,eAAeR,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Grid } from 'semantic-ui-react';\n\nconst Photos = ({ photos }) => {\n  return (\n\n      <Grid.Row>\n        <Image.Group size='medium'>\n          {photos &&\n            photos.map((photo) => (\n              <Image key={photo.id} alt='' src={photo.slug} />\n            ))}\n        </Image.Group>\n      </Grid.Row>\n\n  );\n};\n\nPhotos.propTypes = {\n  photos: PropTypes.array.isRequired,\n};\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}