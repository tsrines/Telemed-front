{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\nimport SearchIndex from './containers/SearchIndex';\nimport ConversationsList from './components/ConversationsList';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      currentUser: {},\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchIndex: [],\n      doctorShow: {}\n    };\n\n    this.editProfileOnChange = e => {\n      this.setState({ ...this.state,\n        currentUser: { ...this.state.currentUser,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.editProfileOnSubmit = async e => {\n      this.loadingHandler(true);\n      e.preventDefault();\n      const {\n        email,\n        address,\n        first_name,\n        last_name\n      } = this.state.currentUser;\n      const payload = {\n        email,\n        address,\n        first_name,\n        last_name\n      };\n      await this.patchUser(payload);\n      this.loadingHandler(false);\n    };\n\n    this.saveSearch = async searchedDoctors => {\n      let user_id = this.state.currentUser.id;\n      let ids = [];\n      let data;\n      searchedDoctors.forEach(doc => ids.push(doc.id));\n      let csv = ids.join(','); // debugger\n\n      const payload = {\n        csv,\n        user_id\n      }; // debugger;\n\n      try {\n        let res = await axios.post(`http://localhost:3000/searches`, payload);\n        data = res.data;\n        console.log('data from saveSearch', data);\n      } catch (error) {}\n\n      this.loadingHandler(false);\n      this.props.history.push(`/search/${payload.user_id}/${data.id}`);\n    };\n\n    this.setSearchIndex = searchIndex => {\n      this.setState({\n        searchIndex\n      });\n    };\n\n    this.googleSearch = async payload => {\n      this.loadingHandler(true);\n      const apidocs = await fetchApiDoctors(payload); // this.setState({ searchIndex: apidocs }, () => {\n      //   this.loadingHandler(false);\n      // });\n\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.map(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n        }\n      });\n      this.saveSearch(apidocs);\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.loadingHandler = bool => {\n      this.setState({\n        loading: bool\n      });\n    };\n\n    this.patchUser = async formData => {\n      try {\n        let res = await axios.patch(`http://localhost:3000/users/${this.state.currentUser.id}`, formData); // debugger\n\n        if (res.data.errors) {\n          console.log(res.data.errors);\n        } else {\n          let currentUser = res.data;\n          this.setState({\n            currentUser\n          }, () => this.loadingHandler(false));\n        }\n      } catch (err) {// console.log(err.data)\n      }\n    };\n\n    this.getDoctorById = async id => {\n      // debugger\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow\n        }, () => this.loadingHandler(false));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        }, () => {\n          this.loadingHandler(false);\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n          if (res.data.errors) console.log(res.data.errors);\n          this.setState({\n            currentUser: res.data\n          }, () => this.loadingHandler(false));\n        } catch (err) {\n          if (err) console.log(err);\n        }\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser: currentUser.user\n      }, () => {\n        localStorage.token = currentUser.token;\n        this.loadUser();\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.props.history.push('/');\n      this.setState({\n        currentUser: {}\n      }, () => {\n        localStorage.removeItem('token');\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // this.getDoctors();\n    await this.loadUser();\n  }\n\n  render() {\n    // console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routerProps => React.createElement(Landing, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.currentUser && this.state.currentUser.id && React.createElement(NavBar, {\n      signUp: this.signUp,\n      logout: this.logout,\n      loading: this.state.loading,\n      loadingHandler: this.loadingHandler,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        doctors: this.state.doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        loadingHandler: this.loadingHandler,\n        error: this.state.error,\n        loading: this.state.loading,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search/:userId/:searchId\",\n      render: routerProps => React.createElement(SearchIndex, Object.assign({\n        loadingHandler: this.loadingHandler,\n        setSearchIndex: this.setSearchIndex,\n        searchIndex: this.state.searchIndex,\n        loadUser: this.loadUser,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/conversationlist\",\n      render: routerProps => React.createElement(ConversationsList, Object.assign({}, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading,\n        getDoctorById: this.getDoctorById,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        doctorShow: this.state.doctorShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/edit\",\n      render: routerProps => React.createElement(Edit, Object.assign({\n        editProfileOnChange: this.editProfileOnChange,\n        editProfileOnSubmit: this.editProfileOnSubmit,\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","NavBar","Container","Edit","SearchIndex","ConversationsList","App","Component","state","loading","currentUser","lat","lng","doctors","searchIndex","doctorShow","editProfileOnChange","e","setState","target","name","value","editProfileOnSubmit","loadingHandler","preventDefault","email","address","first_name","last_name","payload","patchUser","saveSearch","searchedDoctors","user_id","id","ids","data","forEach","doc","push","csv","join","res","post","console","log","error","props","history","setSearchIndex","googleSearch","apidocs","reviews","place_id","map","photos","isFavorite","favoriteArray","filter","doctor","api_id","match","params","length","favorite","bool","formData","patch","errors","err","getDoctorById","get","getDoctors","loadUser","token","localStorage","headers","Authorization","login","alert","setUser","signUp","user","logout","removeItem","componentDidMount","render","routerProps","rate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\nimport SearchIndex from './containers/SearchIndex';\nimport ConversationsList from './components/ConversationsList';\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    currentUser: {},\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchIndex: [],\n    doctorShow: {},\n  };\n\n  editProfileOnChange = (e) => {\n    this.setState({\n      ...this.state,\n      currentUser: {\n        ...this.state.currentUser,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  editProfileOnSubmit = async (e) => {\n    this.loadingHandler(true);\n    e.preventDefault();\n    const { email, address, first_name, last_name } = this.state.currentUser;\n    const payload = {\n      email,\n      address,\n      first_name,\n      last_name,\n    };\n    await this.patchUser(payload);\n    this.loadingHandler(false);\n  };\n\n  saveSearch = async (searchedDoctors) => {\n    let user_id = this.state.currentUser.id;\n    let ids = [];\n    let data;\n    searchedDoctors.forEach((doc) => ids.push(doc.id));\n    let csv = ids.join(',');\n    // debugger\n    const payload = {\n      csv,\n      user_id,\n    };\n    // debugger;\n    try {\n      let res = await axios.post(`http://localhost:3000/searches`, payload);\n      data = res.data;\n\n      console.log('data from saveSearch', data);\n    } catch (error) {}\n    this.loadingHandler(false)\n    this.props.history.push(`/search/${payload.user_id}/${data.id}`);\n  };\n\n  setSearchIndex = (searchIndex) => {\n    this.setState({ searchIndex });\n  };\n\n  googleSearch = async (payload) => {\n    this.loadingHandler(true);\n    const apidocs = await fetchApiDoctors(payload);\n\n    // this.setState({ searchIndex: apidocs }, () => {\n    //   this.loadingHandler(false);\n    // });\n\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.map(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n      }\n    });\n    this.saveSearch(apidocs);\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  loadingHandler = (bool) => {\n    this.setState({ loading: bool });\n  };\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n\n  patchUser = async (formData) => {\n    try {\n      let res = await axios.patch(\n        `http://localhost:3000/users/${this.state.currentUser.id}`,\n        formData\n      );\n\n      // debugger\n      if (res.data.errors) {\n        console.log(res.data.errors);\n      } else {\n        let currentUser = res.data;\n        this.setState({ currentUser }, () => this.loadingHandler(false));\n      }\n    } catch (err) {\n      // console.log(err.data)\n    }\n  };\n  getDoctorById = async (id) => {\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow }, () => this.loadingHandler(false));\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data }, () => {\n        this.loadingHandler(false);\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        if(res.data.errors) console.log(res.data.errors)\n        this.setState({ currentUser: res.data }, () =>\n          this.loadingHandler(false)\n        );\n      } catch (err) {\n        if(err) console.log(err)\n      }\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n     await this.loadUser();\n  }\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n    this.loadingHandler(false);\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n    this.loadingHandler(false);\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser: currentUser.user,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        this.loadUser();\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.props.history.push('/');\n    this.setState(\n      {\n        currentUser: {},\n      },\n      () => {\n        localStorage.removeItem('token');\n      }\n    );\n  };\n\n  render() {\n    // console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={(routerProps) => (\n              <Landing\n                {...routerProps}\n                currentUser={this.state.currentUser}\n                loading={this.state.loading}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/signup'\n            render={(routerProps) => (\n              <SignUp\n                loadingHandler={this.loadingHandler}\n                loading={this.state.loading}\n                {...routerProps}\n                setUser={this.setUser}\n                signUp={this.signUp}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path='/login'\n            render={(routerProps) => (\n              <Login\n                loadingHandler={this.loadingHandler}\n                loading={this.state.loading}\n                {...routerProps}\n                setUser={this.setUser}\n                login={this.login}\n              />\n            )}\n          />\n          <Container>\n            {this.state.currentUser && this.state.currentUser.id && (\n              <NavBar\n                signUp={this.signUp}\n                logout={this.logout}\n                loading={this.state.loading}\n                loadingHandler={this.loadingHandler}\n                currentUser={this.state.currentUser}\n              />\n            )}\n            <Route\n              exact\n              path='/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                  doctors={this.state.doctors}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path='/search'\n              render={(routerProps) => (\n                <Search\n                  loadingHandler={this.loadingHandler}\n                  error={this.state.error}\n                  loading={this.state.loading}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  googleSearch={this.googleSearch}\n                  favorite={this.favorite}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search/:userId/:searchId'\n              render={(routerProps) => (\n                <SearchIndex\n                  loadingHandler={this.loadingHandler}\n                  setSearchIndex={this.setSearchIndex}\n                  searchIndex={this.state.searchIndex}\n                  loadUser={this.loadUser}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/conversationlist'\n              render={(routerProps) => <ConversationsList {...routerProps} />}\n            />\n            <Route\n              exact\n              path='/doctors/:id'\n              render={(routerProps) => (\n                <DoctorShow\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  getDoctorById={this.getDoctorById}\n                  rate={this.rate}\n                  doctors={this.state.doctors}\n                  favorite={this.state.favorite}\n                  isFavorite={this.isFavorite}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  favorite={this.favorite}\n                  doctorShow={this.state.doctorShow}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile'\n              render={(routerProps) => (\n                <Profile\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  currentUser={this.state.currentUser}\n                  doctors={this.state.doctors}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile/edit'\n              render={(routerProps) => (\n                <Edit\n                  editProfileOnChange={this.editProfileOnChange}\n                  editProfileOnSubmit={this.editProfileOnSubmit}\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  patchUser={this.patchUser}\n                  currentUser={this.state.currentUser}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n          </Container>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}