{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctors = async doctors => {\n  doctors.forEach(async doctor => {\n    let detailedDoctor;\n\n    try {\n      let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n      detailedDoctor = res.data.result;\n    } catch (err) {\n      console.log(\"Error\", err);\n    }\n\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: {\n          lat,\n          lng\n        }\n      }\n    } = detailedDoctor;\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website\n    };\n\n    try {\n      let res = await fetch('http://localhost:3000/doctors', requestOptions);\n      let data = await res.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctors","doctors","forEach","doctor","detailedDoctor","res","get","place_id","data","result","err","console","log","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","fetch","requestOptions","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AAE7CA,EAAAA,OAAO,CAACC,OAAR,CAAgB,MAAOC,MAAP,IAAkB;AACjC,QAAIC,cAAJ;;AACA,QAAI;AACF,UAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACb,0CAAyCH,MAAM,CAACI,QAAS,EAD5C,CAAhB;AAGAH,MAAAA,cAAc,GAAGC,GAAG,CAACG,IAAJ,CAASC,MAA1B;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD;;AAID,UAAM;AACJG,MAAAA,iBADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,IAHI;AAIJR,MAAAA,QAJI;AAKJS,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP;AADF;AATN,QAYFnB,cAZJ;AAcA,UAAMoB,UAAU,GAAG;AACjBjB,MAAAA,QADiB;AAEjBQ,MAAAA,IAFiB;AAGjBF,MAAAA,iBAHiB;AAIjBG,MAAAA,MAJiB;AAKjBG,MAAAA,kBALiB;AAMjBL,MAAAA,sBANiB;AAOjBQ,MAAAA,GAPiB;AAQjBC,MAAAA,GARiB;AASjBN,MAAAA,GATiB;AAUjBC,MAAAA;AAViB,KAAnB;;AAYA,QAAI;AAEF,UAAIb,GAAG,GAAG,MAAMoB,KAAK,CAAC,+BAAD,EAAkCC,cAAlC,CAArB;AACA,UAAIlB,IAAI,GAAG,MAAMH,GAAG,CAACsB,IAAJ,EAAjB;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,KALD,CAKE,OAAOE,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACF,GA/CA;AAgDF,CAlDM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctors = async (doctors) => {\n\n   doctors.forEach(async (doctor) => {\n    let detailedDoctor\n    try {\n      let res = await Axios.get(\n        `http://localhost:3000/geocodes/details/${doctor.place_id}`\n      );\n      detailedDoctor = res.data.result;\n    } catch (err) {\n      console.log(\"Error\", err)\n    }\n\n\n\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: { lat, lng },\n      },\n    } = detailedDoctor;\n\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website,\n    };\n    try {\n\n      let res = await fetch('http://localhost:3000/doctors', requestOptions)\n      let data = await res.json()\n      console.log(data)\n    } catch (err) {\n     console.log(err) \n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}