{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctors = async doctors => {\n  const allDocs = [];\n  doctors.forEach(async doctor => {\n    let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: {\n          lat,\n          lng\n        }\n      }\n    } = detailedDoctor;\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website\n    };\n    const body = JSON.stringify(doctorHash);\n    console.log(body); // debugger;\n\n    fetch(`http://localhost:3000/doctors`, config, body).then(res => res.json()).then(data => allDocs.push(data));\n  });\n  console.log(allDocs);\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctors","doctors","allDocs","forEach","doctor","res","get","place_id","detailedDoctor","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","body","JSON","stringify","console","log","fetch","config","then","json","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AAC9C,QAAMC,OAAO,GAAG,EAAhB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,MAAOC,MAAP,IAAkB;AAChC,QAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACb,0CAAyCF,MAAM,CAACG,QAAS,EAD5C,CAAhB;AAGA,UAAMC,cAAc,GAAGH,GAAG,CAACI,IAAJ,CAASC,MAAhC;AACA,UAAM;AACJC,MAAAA,iBADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,IAHI;AAIJN,MAAAA,QAJI;AAKJO,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP;AADF;AATN,QAYFb,cAZJ;AAcA,UAAMc,UAAU,GAAG;AACjBf,MAAAA,QADiB;AAEjBM,MAAAA,IAFiB;AAGjBF,MAAAA,iBAHiB;AAIjBG,MAAAA,MAJiB;AAKjBG,MAAAA,kBALiB;AAMjBL,MAAAA,sBANiB;AAOjBQ,MAAAA,GAPiB;AAQjBC,MAAAA,GARiB;AASjBN,MAAAA,GATiB;AAUjBC,MAAAA;AAViB,KAAnB;AAcA,UAAMO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,UAAf,CAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAlCgC,CAmChC;;AAEAK,IAAAA,KAAK,CAAE,+BAAF,EAAkCC,MAAlC,EAA0CN,IAA1C,CAAL,CAAqDO,IAArD,CAA2DzB,GAAD,IACxDA,GAAG,CAAC0B,IAAJ,EADF,EAEED,IAFF,CAEOrB,IAAI,IAAIP,OAAO,CAAC8B,IAAR,CAAavB,IAAb,CAFf;AAID,GAzCD;AA2CAiB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,OAAZ;AACD,CA9CM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctors = async (doctors) => {\n  const allDocs = [];\n  doctors.forEach(async (doctor) => {\n    let res = await Axios.get(\n      `http://localhost:3000/geocodes/details/${doctor.place_id}`\n    );\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: { lat, lng },\n      },\n    } = detailedDoctor;\n\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website,\n    };\n\n\n    const body = JSON.stringify(doctorHash);\n    console.log(body)\n    // debugger;\n\n    fetch(`http://localhost:3000/doctors`, config, body).then((res) =>\n      res.json()\n    ).then(data => allDocs.push(data))\n\n  });\n\n  console.log(allDocs)\n};\n"]},"metadata":{},"sourceType":"module"}