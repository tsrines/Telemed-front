{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctors = doctors => {\n  const allDoctors = doctors.map(async doctor => {\n    let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: {\n          lat,\n          lng\n        }\n      }\n    } = detailedDoctor;\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website\n    };\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'Application/json');\n    myHeaders.append('accepts', 'application/json');\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(doctorHash),\n      redirect: 'follow'\n    };\n\n    try {\n      await fetch('http://localhost:3000/doctors', requestOptions).then(res => res.json()).then(data => doctordata);\n    } catch (err) {\n      console.log('ERROR', err);\n    }\n  });\n  return allDoctors;\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctors","doctors","allDoctors","map","doctor","res","get","place_id","detailedDoctor","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","then","json","doctordata","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,QAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAOC,MAAP,IAAkB;AAC/C,QAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACb,0CAAyCF,MAAM,CAACG,QAAS,EAD5C,CAAhB;AAIA,UAAMC,cAAc,GAAGH,GAAG,CAACI,IAAJ,CAASC,MAAhC;AAEA,UAAM;AACJC,MAAAA,iBADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,IAHI;AAIJN,MAAAA,QAJI;AAKJO,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP;AADF;AATN,QAYFb,cAZJ;AAcA,UAAMc,UAAU,GAAG;AACjBf,MAAAA,QADiB;AAEjBM,MAAAA,IAFiB;AAGjBF,MAAAA,iBAHiB;AAIjBG,MAAAA,MAJiB;AAKjBG,MAAAA,kBALiB;AAMjBL,MAAAA,sBANiB;AAOjBQ,MAAAA,GAPiB;AAQjBC,MAAAA,GARiB;AASjBN,MAAAA,GATiB;AAUjBC,MAAAA;AAViB,KAAnB;AAaA,UAAMO,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,IAAAA,SAAS,CAACE,MAAV,CAAiB,SAAjB,EAA4B,kBAA5B;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAEL,SAFY;AAGrBM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf,CAHe;AAIrBU,MAAAA,QAAQ,EAAE;AAJW,KAAvB;;AAMA,QAAI;AACF,YAAMC,KAAK,CAAC,+BAAD,EAAkCP,cAAlC,CAAL,CACHQ,IADG,CACG7B,GAAD,IAASA,GAAG,CAAC8B,IAAJ,EADX,EAEHD,IAFG,CAEGzB,IAAD,IAAW2B,UAFb,CAAN;AAID,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,GAnDkB,CAAnB;AAqDA,SAAOnC,UAAP;AACD,CAvDM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctors = (doctors) => {\n  const allDoctors = doctors.map(async (doctor) => {\n    let res = await Axios.get(\n      `http://localhost:3000/geocodes/details/${doctor.place_id}`\n    );\n\n    const detailedDoctor = res.data.result;\n\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: { lat, lng },\n      },\n    } = detailedDoctor;\n\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website,\n    };\n\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'Application/json');\n    myHeaders.append('accepts', 'application/json');\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(doctorHash),\n      redirect: 'follow',\n    };\n    try {\n      await fetch('http://localhost:3000/doctors', requestOptions)\n        .then((res) => res.json())\n        .then((data) =>  doctordata);\n\n    } catch (err) {\n      console.log('ERROR', err);\n    }\n  });\n\n  return allDoctors\n};\n"]},"metadata":{},"sourceType":"module"}