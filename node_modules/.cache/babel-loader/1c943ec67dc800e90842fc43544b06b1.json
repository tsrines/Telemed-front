{"ast":null,"code":"import _defineProperty from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Button,Form,Grid,Header,Image,Segment,Divider}from'semantic-ui-react';import{withRouter}from'react-router-dom';import emailjs from'emailjs-com';var LoginForm=/*#__PURE__*/function(_React$Component){_inherits(LoginForm,_React$Component);function LoginForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,LoginForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={email:\"\",password:\"\",passwordConfirmation:\"\"};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.formData=function(){var formData=_this.state;_this.props.onSubmit(formData);_this.setState({email:\"\",password:\"\",passwordConfirmation:\"\"});};return _this;}_createClass(LoginForm,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(Grid,{textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},React.createElement(Grid.Column,{style:{maxWidth:450}},React.createElement(Header,{as:\"h2\",color:\"red\",textAlign:\"center\"},\"Telemed\",React.createElement(Image,{src:\"../favicon.ico\"})),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(Form,{size:\"large\"},React.createElement(Segment,{stacked:true},React.createElement(Form.Input,{onChange:function onChange(e){return _this2.onChange(e);},name:\"email\",value:this.state.email,fluid:true,icon:\"user\",iconPosition:\"left\",placeholder:\"E-mail address\"}),React.createElement(Form.Input,{onChange:function onChange(e){return _this2.onChange(e);},name:\"password\",value:this.state.password,fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\"}),this.props.register&&React.createElement(Form.Input,{onChange:function onChange(e){return _this2.onChange(e);},name:\"passwordConfirmation\",value:this.state.passwordConfirmation,fluid:true,icon:\"lock\",iconPosition:\"left\",placeholder:\"Password Confirmation\",type:\"password\"}),this.props.register&&React.createElement(Button.Group,null,React.createElement(Button,{onClick:this.props.onSignUp},\"Cancel\"),React.createElement(Button.Or,null),React.createElement(Button,{onClick:this.formData,color:\"red\",fluid:true,size:\"large\"},\"Sign Up!\")),!this.props.register&&React.createElement(Button,{onClick:this.formData,color:\"red\",fluid:true,size:\"large\"},this.props.register?\"Sign Up\":\"Login\"))),!this.props.register&&React.createElement(Button,{onClick:this.props.onSignUp,label:\"Sign Up?\"})));}}]);return LoginForm;}(React.Component);export default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js"],"names":["React","Button","Form","Grid","Header","Image","Segment","Divider","withRouter","emailjs","LoginForm","state","email","password","passwordConfirmation","onChange","e","setState","target","name","value","formData","props","onSubmit","height","maxWidth","register","onSignUp","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, Grid, Header, Image, Segment, Divider } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\nimport emailjs from 'emailjs-com'\n\n\nclass LoginForm extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  formData = () => {\n    let formData = this.state\n    this.props.onSubmit(formData)\n    this.setState({\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    })\n  }\n\n\n  render() {\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='red' textAlign='center'>\n            Telemed \n            <Image src='../favicon.ico' />\n          </Header>\n          <br />\n          <br />\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"email\"\n                value={this.state.email}\n                fluid icon='user'\n                iconPosition='left'\n                placeholder='E-mail address' />\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"password\"\n                value={this.state.password}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n              {this.props.register &&\n                <Form.Input\n                  onChange={(e) => this.onChange(e)}\n                  name=\"passwordConfirmation\"\n                  value={this.state.passwordConfirmation}\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password Confirmation'\n                  type='password'\n                />}\n              {this.props.register && <Button.Group>\n                <Button onClick={this.props.onSignUp}>Cancel</Button>\n                <Button.Or />\n                <Button onClick={this.formData} color='red' fluid size='large'>Sign Up!</Button>\n              </Button.Group>}\n              {!this.props.register && <Button onClick={this.formData} color='red' fluid size='large'>\n                {this.props.register ? \"Sign Up\" : \"Login\"}\n              </Button>}\n            </Segment>\n          </Form>\n          {!this.props.register &&\n            <Button onClick={this.props.onSignUp} label=\"Sign Up?\" />}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\n\nexport default withRouter(LoginForm)"]},"metadata":{},"sourceType":"module"}