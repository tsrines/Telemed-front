{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js\";\nimport { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nconst index = [];\nexport default class SearchIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadSearchIndex = async () => {\n      const searchId = parseInt(this.props.match.params.searchId);\n      const searches = this.props.currentUser.searches;\n      let csv = searches[searchId].csv;\n      debugger;\n      csv = csv.split(',');\n      csv.pop();\n      await csv.map(async id => {\n        // console.log(id);\n        let doctorId = parseInt(id);\n        let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n        let doc = res.data; // console.log(doc);\n\n        index.push(doc);\n        this.props.setSearchIndex(index);\n      });\n    };\n\n    this.displayDoctors = () => {\n      return this.props.searchIndex.map(doc => React.createElement(\"div\", {\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, doc.name));\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.loadUser();\n    this.loadSearchIndex();\n  }\n\n  render() {\n    console.log(index);\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.displayDoctors());\n  }\n\n}","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js"],"names":["Card","Grid","DoctorCard","Axios","React","Component","index","SearchIndex","loadSearchIndex","searchId","parseInt","props","match","params","searches","currentUser","csv","split","pop","map","id","doctorId","res","get","doc","data","push","setSearchIndex","displayDoctors","searchIndex","name","componentDidMount","loadUser","render","console","log"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDG,eADiD,GAC/B,YAAY;AAC5B,YAAMC,QAAQ,GAAGC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,QAAzB,CAAzB;AACA,YAAMK,QAAQ,GAAG,KAAKH,KAAL,CAAWI,WAAX,CAAuBD,QAAxC;AACA,UAAIE,GAAG,GAAGF,QAAQ,CAACL,QAAD,CAAR,CAAmBO,GAA7B;AACA;AACAA,MAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AACAD,MAAAA,GAAG,CAACE,GAAJ;AAEA,YAAMF,GAAG,CAACG,GAAJ,CAAQ,MAAOC,EAAP,IAAc;AAC1B;AACA,YAAIC,QAAQ,GAAGX,QAAQ,CAACU,EAAD,CAAvB;AACA,YAAIE,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,iCAAgCF,QAAS,EAApD,CAAhB;AACA,YAAIG,GAAG,GAAGF,GAAG,CAACG,IAAd,CAJ0B,CAM1B;;AACAnB,QAAAA,KAAK,CAACoB,IAAN,CAAWF,GAAX;AACA,aAAKb,KAAL,CAAWgB,cAAX,CAA0BrB,KAA1B;AAGD,OAXK,CAAN;AAcD,KAvBgD;;AAAA,SAyBjDsB,cAzBiD,GAyBhC,MAAM;AAErB,aAAO,KAAKjB,KAAL,CAAWkB,WAAX,CAAuBV,GAAvB,CAA4BK,GAAD,IAChC;AAAK,QAAA,GAAG,EAAEA,GAAG,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBI,GAAG,CAACM,IAAvB,CADK,CAAP;AAGD,KA9BgD;AAAA;;AAgCjD,QAAMC,iBAAN,GAA0B;AACxB,UAAM,KAAKpB,KAAL,CAAWqB,QAAX,EAAN;AACA,SAAKxB,eAAL;AAED;;AACDyB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY7B,KAAZ;AACF,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKsB,cAAL,EAAL,CAAP;AAEC;;AAzCgD","sourcesContent":["import { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\n\nimport React, { Component } from 'react';\nconst index = [];\n\nexport default class SearchIndex extends Component {\n  loadSearchIndex = async () => {\n    const searchId = parseInt(this.props.match.params.searchId)\n    const searches = this.props.currentUser.searches\n    let csv = searches[searchId].csv\n    debugger\n    csv = csv.split(',');\n    csv.pop();\n\n    await csv.map(async (id) => {\n      // console.log(id);\n      let doctorId = parseInt(id);\n      let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n      let doc = res.data;\n\n      // console.log(doc);\n      index.push(doc);\n      this.props.setSearchIndex(index)\n\n\n    }); \n    \n\n  };\n\n  displayDoctors = () => {\n\n    return this.props.searchIndex.map((doc) => (\n      <div key={doc.id}>{doc.name}</div>\n    ));\n  };\n\n  async componentDidMount() {\n    await this.props.loadUser()\n    this.loadSearchIndex()\n\n  }\n  render() {\n    console.log(index)\n  return <h4>{this.displayDoctors()}</h4>\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}