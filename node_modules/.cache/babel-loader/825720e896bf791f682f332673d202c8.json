{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js\";\nimport { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nconst index = [];\nexport default class SearchIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadSearchIndex = async () => {\n      const searchId = parseInt(this.props.match.params.searchId);\n      const searches = this.props.currentUser.searches;\n      let csv = searches[searchId];\n      csv = csv.split(',');\n      csv.pop();\n      await csv.map(async id => {\n        // console.log(id);\n        let doctorId = parseInt(id);\n        let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n        let doc = res.data; // console.log(doc);\n\n        index.push(doc);\n        console.log(index);\n      }); // debugger\n    };\n\n    this.displayDoctors = () => {\n      return index.map(doc => React.createElement(DoctorCard, {\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, doc.name));\n    };\n  }\n\n  async componentDidMount() {\n    this.props.loadUser();\n    this.loadSearchIndex();\n  }\n\n  render() {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, JSON.stringify(index));\n  }\n\n}","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js"],"names":["Card","Grid","DoctorCard","Axios","React","Component","index","SearchIndex","loadSearchIndex","searchId","parseInt","props","match","params","searches","currentUser","csv","split","pop","map","id","doctorId","res","get","doc","data","push","console","log","displayDoctors","name","componentDidMount","loadUser","render","JSON","stringify"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDG,eADiD,GAC/B,YAAY;AAC5B,YAAMC,QAAQ,GAAGC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,QAAzB,CAAzB;AACA,YAAMK,QAAQ,GAAG,KAAKH,KAAL,CAAWI,WAAX,CAAuBD,QAAxC;AACA,UAAIE,GAAG,GAAGF,QAAQ,CAACL,QAAD,CAAlB;AAEAO,MAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAN;AACAD,MAAAA,GAAG,CAACE,GAAJ;AAEA,YAAMF,GAAG,CAACG,GAAJ,CAAQ,MAAOC,EAAP,IAAc;AAC1B;AACA,YAAIC,QAAQ,GAAGX,QAAQ,CAACU,EAAD,CAAvB;AACA,YAAIE,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,iCAAgCF,QAAS,EAApD,CAAhB;AACA,YAAIG,GAAG,GAAGF,GAAG,CAACG,IAAd,CAJ0B,CAM1B;;AACAnB,QAAAA,KAAK,CAACoB,IAAN,CAAWF,GAAX;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACD,OATK,CAAN,CAR4B,CAmB5B;AACD,KArBgD;;AAAA,SAuBjDuB,cAvBiD,GAuBhC,MAAM;AAErB,aAAOvB,KAAK,CAACa,GAAN,CAAWK,GAAD,IACf,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,GAAG,CAACJ,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BI,GAAG,CAACM,IAA9B,CADK,CAAP;AAGD,KA5BgD;AAAA;;AA8BjD,QAAMC,iBAAN,GAA0B;AACxB,SAAKpB,KAAL,CAAWqB,QAAX;AACA,SAAKxB,eAAL;AAED;;AACDyB,EAAAA,MAAM,GAAG;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACC,SAAL,CAAe7B,KAAf,CAAL,CAAP;AAEC;;AAtCgD","sourcesContent":["import { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\n\nimport React, { Component } from 'react';\nconst index = [];\n\nexport default class SearchIndex extends Component {\n  loadSearchIndex = async () => {\n    const searchId = parseInt(this.props.match.params.searchId)\n    const searches = this.props.currentUser.searches\n    let csv = searches[searchId]\n\n    csv = csv.split(',');\n    csv.pop();\n\n    await csv.map(async (id) => {\n      // console.log(id);\n      let doctorId = parseInt(id);\n      let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n      let doc = res.data;\n\n      // console.log(doc);\n      index.push(doc);\n      console.log(index);\n    });\n    \n    // debugger\n  };\n\n  displayDoctors = () => {\n\n    return index.map((doc) => (\n      <DoctorCard key={doc.id}>{doc.name}</DoctorCard>\n    ));\n  };\n\n  async componentDidMount() {\n    this.props.loadUser()\n    this.loadSearchIndex()\n\n  }\n  render() {\n  return <h4>{JSON.stringify(index,)}</h4>\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}