{"ast":null,"code":"import React from'react';import{Header,Divider,Card,Icon,Container}from'semantic-ui-react';import DoctorCard from'../DoctorCard';import{Link}from'react-router-dom';import{useEffect}from'react';var Profile=function Profile(_ref){var currentUser=_ref.currentUser,loadUser=_ref.loadUser,history=_ref.history,loading=_ref.loading;useEffect(function(){loadUser();},[]);var profileDoctors=function profileDoctors(){return currentUser.doctors&&currentUser.doctors.map(function(doc){return React.createElement(DoctorCard,{key:doc.id,doctor:doc});});};return React.createElement(React.Fragment,null,currentUser!==undefined&&React.createElement(Container,{text:true},currentUser!==undefined&&React.createElement(React.Fragment,null,React.createElement(Header,{as:\"h2\",display:\"flex\",textAlign:\"center\",color:\"red\"},\"Welcome,\",' ',currentUser.email?currentUser.email.split('@')[0]:'User',' ',React.createElement(Link,{to:'/profile/edit'},React.createElement(Icon,{size:\"tiny\",loading:loading,fluid:\"true\",name:\"edit\"})))),React.createElement(Divider,null),' ',React.createElement(Header,{as:\"h2\",display:\"flex\",textAlign:\"center\",color:\"red\"},\"Favorite Doctors\"),React.createElement(Divider,null),React.createElement(Card.Group,{style:{overflow:'auto',maxHeight:'52em'},display:\"flex\",\"justify-content\":\"center\",itemsPerRow:3},profileDoctors())));};export default Profile;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Profile.js"],"names":["React","Header","Divider","Card","Icon","Container","DoctorCard","Link","useEffect","Profile","currentUser","loadUser","history","loading","profileDoctors","doctors","map","doc","id","undefined","email","split","overflow","maxHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,IAA1B,CAAgCC,IAAhC,CAAsCC,SAAtC,KAAuD,mBAAvD,CAEA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CAGA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAiD,IAA9CC,CAAAA,WAA8C,MAA9CA,WAA8C,CAAjCC,QAAiC,MAAjCA,QAAiC,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CAC/DL,SAAS,CAAC,UAAM,CACdG,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAGA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SACrBJ,CAAAA,WAAW,CAACK,OAAZ,EACAL,WAAW,CAACK,OAAZ,CAAoBC,GAApB,CAAwB,SAACC,GAAD,QAAS,qBAAC,UAAD,EAAY,GAAG,CAAEA,GAAG,CAACC,EAArB,CAAyB,MAAM,CAAED,GAAjC,EAAT,EAAxB,CAFqB,EAAvB,CAGA,MACE,yCACGP,WAAW,GAAKS,SAAhB,EACC,oBAAC,SAAD,EAAW,IAAI,KAAf,EACGT,WAAW,GAAKS,SAAhB,EACC,wCACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,OAAO,CAAC,MAAxB,CAA+B,SAAS,CAAC,QAAzC,CAAkD,KAAK,CAAC,KAAxD,aACW,GADX,CAEGT,WAAW,CAACU,KAAZ,CAAoBV,WAAW,CAACU,KAAZ,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAApB,CAAsD,MAFzD,CAEiE,GAFjE,CAGE,oBAAC,IAAD,EAAM,EAAE,CAAE,eAAV,EACE,oBAAC,IAAD,EACE,IAAI,CAAC,MADP,CAEE,OAAO,CAAER,OAFX,CAGE,KAAK,CAAC,MAHR,CAIE,IAAI,CAAC,MAJP,EADF,CAHF,CADF,CAFJ,CAiBE,oBAAC,OAAD,MAjBF,CAiBc,GAjBd,CAkBE,oBAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,CAAgB,OAAO,CAAC,MAAxB,CAA+B,SAAS,CAAC,QAAzC,CAAkD,KAAK,CAAC,KAAxD,qBAlBF,CAqBE,oBAAC,OAAD,MArBF,CAsBE,oBAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAE,CAAES,QAAQ,CAAE,MAAZ,CAAoBC,SAAS,CAAE,MAA/B,CADT,CAEE,OAAO,CAAC,MAFV,CAGE,kBAAgB,QAHlB,CAIE,WAAW,CAAE,CAJf,EAMGT,cAAc,EANjB,CAtBF,CAFJ,CADF,CAqCD,CA5CD,CAmDA,cAAeL,CAAAA,OAAf","sourcesContent":["import React from 'react';\n\nimport { Header, Divider, Card, Icon, Container } from 'semantic-ui-react';\n\nimport DoctorCard from '../DoctorCard';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst Profile = ({ currentUser, loadUser, history, loading }) => {\n  useEffect(() => {\n    loadUser();\n  }, []);\n  const profileDoctors = () =>\n    currentUser.doctors &&\n    currentUser.doctors.map((doc) => <DoctorCard key={doc.id} doctor={doc} />);\n  return (\n    <>\n      {currentUser !== undefined && (\n        <Container text>\n          {currentUser !== undefined && (\n            <>\n              <Header as='h2' display='flex' textAlign='center' color='red'>\n                Welcome,{' '}\n                {currentUser.email ? currentUser.email.split('@')[0] : 'User'}{' '}\n                <Link to={'/profile/edit'}>\n                  <Icon\n                    size='tiny'\n                    loading={loading}\n                    fluid='true'\n                    name='edit'\n                  ></Icon>\n                </Link>\n              </Header>\n            </>\n          )}\n          <Divider />{' '}\n          <Header as='h2' display='flex' textAlign='center' color='red'>\n            Favorite Doctors\n          </Header>\n          <Divider />\n          <Card.Group\n            style={{ overflow: 'auto', maxHeight: '52em' }}\n            display='flex'\n            justify-content='center'\n            itemsPerRow={3}\n          >\n            {profileDoctors()}\n          </Card.Group>\n        </Container>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}