{"ast":null,"code":"import _toConsumableArray from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import{Card,Grid}from'semantic-ui-react';import DoctorCard from'../components/DoctorCard';import Axios from'axios';import React,{Component}from'react';var SearchIndex=/*#__PURE__*/function(_Component){_inherits(SearchIndex,_Component);function SearchIndex(){var _getPrototypeOf2;var _this;_classCallCheck(this,SearchIndex);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SearchIndex)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.loadSearchIndex=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var index,searchId,userId,searches,csv;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// this.props.loadUser();\nindex=[];// debugger;\nsearchId=parseInt(_this.props.match.params.searchId);userId=parseInt(_this.props.match.params.userId);// if (userId !== this.props.currentUser.id)\n//   this.props.history.push('/search');\nsearches=_this.props.currentUser.searches;_context2.prev=4;csv=searches.find(function(search){return searchId===search.id;}).csv;csv=csv.split(',');_context2.next=9;return csv.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var doctorId,res,doc;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// console.log(id);\ndoctorId=parseInt(id);_context.next=3;return Axios.get(\"http://localhost:3000/doctors/\".concat(doctorId));case 3:res=_context.sent;doc=res.data;// console.log(doc);\nindex.push(doc);_this.props.setSearchIndex(index);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());case 9:_context2.next=17;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](4);alert('Something went wrong, please search again');_this.props.history.push('/search');console.log(_context2.t0);throw _context2.t0;case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[4,11]]);}));_this.displayDoctors=function(){// this.props.loadingHandler(false)\nvar sortedIndex=_toConsumableArray(_this.props.searchIndex).sort(function(a,b){return a.id-b.id;});return sortedIndex.map(function(doctor){return React.createElement(DoctorCard,{currentUser:_this.props.currentUser,getDoctorById:_this.props.getDoctorById,key:doctor.id,doctor:doctor});});};return _this;}_createClass(SearchIndex,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.props.loadUser();case 2:_context3.next=4;return this.loadSearchIndex();case 4:case\"end\":return _context3.stop();}}},_callee3,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){return React.createElement(\"div\",null,' ',React.createElement(Grid,{container:true,textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},React.createElement(Card.Group,{style:{maxHeight:'35em',padding:'3em'},display:\"flex\",\"justify-content\":\"center\",itemsPerRow:3},this.displayDoctors())));}}]);return SearchIndex;}(Component);export{SearchIndex as default};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js"],"names":["Card","Grid","DoctorCard","Axios","React","Component","SearchIndex","loadSearchIndex","index","searchId","parseInt","props","match","params","userId","searches","currentUser","csv","find","search","id","split","map","doctorId","get","res","doc","data","push","setSearchIndex","alert","history","console","log","displayDoctors","sortedIndex","searchIndex","sort","a","b","doctor","getDoctorById","loadUser","height","maxHeight","padding"],"mappings":"2mCAAA,OAASA,IAAT,CAAeC,IAAf,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAEqBC,CAAAA,W,mZACnBC,e,sEAAkB,+KAChB;AACMC,KAFU,CAEF,EAFE,CAGhB;AACMC,QAJU,CAICC,QAAQ,CAAC,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,QAAzB,CAJT,CAKVK,MALU,CAKDJ,QAAQ,CAAC,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAzB,CALP,CAMhB;AACA;AACMC,QARU,CAQC,MAAKJ,KAAL,CAAWK,WAAX,CAAuBD,QARxB,kBAUVE,GAVU,CAUJF,QAAQ,CAACG,IAAT,CAAc,SAACC,MAAD,QAAYV,CAAAA,QAAQ,GAAKU,MAAM,CAACC,EAAhC,EAAd,EAAkDH,GAV9C,CAWdA,GAAG,CAAGA,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAN,CAXc,uBAaRJ,CAAAA,GAAG,CAACK,GAAJ,2FAAQ,iBAAOF,EAAP,uIACZ;AACIG,QAFQ,CAEGb,QAAQ,CAACU,EAAD,CAFX,uBAGIjB,CAAAA,KAAK,CAACqB,GAAN,yCAA2CD,QAA3C,EAHJ,QAGRE,GAHQ,eAIRC,GAJQ,CAIFD,GAAG,CAACE,IAJF,CAMZ;AACAnB,KAAK,CAACoB,IAAN,CAAWF,GAAX,EAEA,MAAKf,KAAL,CAAWkB,cAAX,CAA0BrB,KAA1B,EATY,sDAAR,gEAbQ,6FAyBdsB,KAAK,CAAC,2CAAD,CAAL,CACA,MAAKnB,KAAL,CAAWoB,OAAX,CAAmBH,IAAnB,CAAwB,SAAxB,EACAI,OAAO,CAACC,GAAR,eA3Bc,0F,SAiClBC,c,CAAiB,UAAM,CACrB;AACA,GAAIC,CAAAA,WAAW,CAAG,mBAAI,MAAKxB,KAAL,CAAWyB,WAAf,EAA4BC,IAA5B,CAAiC,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAAClB,EAAF,CAAKmB,CAAC,CAACnB,EAAhB,EAAjC,CAAlB,CACC,MAAOe,CAAAA,WAAW,CAACb,GAAZ,CAAgB,SAACkB,MAAD,QACtB,qBAAC,UAAD,EACE,WAAW,CAAE,MAAK7B,KAAL,CAAWK,WAD1B,CAEE,aAAa,CAAE,MAAKL,KAAL,CAAW8B,aAF5B,CAGE,GAAG,CAAED,MAAM,CAACpB,EAHd,CAIE,MAAM,CAAEoB,MAJV,EADsB,EAAhB,CAAP,CAQF,C,iUAGO,MAAK7B,KAAL,CAAW+B,QAAX,E,+BACA,MAAKnC,eAAL,E,kNAEC,CACP,MACE,gCACG,GADH,CAEE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,QAFZ,CAGE,KAAK,CAAE,CAAEoC,MAAM,CAAE,OAAV,CAHT,CAIE,aAAa,CAAC,QAJhB,EAME,oBAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAqBC,OAAO,CAAE,KAA9B,CADT,CAEE,OAAO,CAAC,MAFV,CAGE,kBAAgB,QAHlB,CAIE,WAAW,CAAE,CAJf,EAMG,KAAKX,cAAL,EANH,CANF,CAFF,CADF,CAoBD,C,yBAxEsC7B,S,SAApBC,W","sourcesContent":["import { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\n\nimport React, { Component } from 'react';\n\nexport default class SearchIndex extends Component {\n  loadSearchIndex = async () => {\n    // this.props.loadUser();\n    const index = [];\n    // debugger;\n    const searchId = parseInt(this.props.match.params.searchId);\n    const userId = parseInt(this.props.match.params.userId);\n    // if (userId !== this.props.currentUser.id)\n    //   this.props.history.push('/search');\n    const searches = this.props.currentUser.searches;\n    try {\n      let csv = searches.find((search) => searchId === search.id).csv;\n      csv = csv.split(',');\n\n      await csv.map(async (id) => {\n        // console.log(id);\n        let doctorId = parseInt(id);\n        let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n        let doc = res.data;\n\n        // console.log(doc);\n        index.push(doc);\n\n        this.props.setSearchIndex(index);\n      });\n    } catch (err) {\n      alert('Something went wrong, please search again');\n      this.props.history.push('/search');\n      console.log(err);\n      throw err;\n    }\n\n  };\n\n  displayDoctors = () => {\n    // this.props.loadingHandler(false)\n    let sortedIndex = [...this.props.searchIndex].sort((a,b) => a.id-b.id)\n     return sortedIndex.map((doctor) => (\n      <DoctorCard\n        currentUser={this.props.currentUser}\n        getDoctorById={this.props.getDoctorById}\n        key={doctor.id}\n        doctor={doctor}\n      />\n    ));\n  };\n\n  async componentDidMount() {\n    await this.props.loadUser();\n    await this.loadSearchIndex();\n  }\n  render() {\n    return (\n      <div>\n        {' '}\n        <Grid\n          container\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Card.Group\n            style={{ maxHeight: '35em', padding: '3em' }}\n            display='flex'\n            justify-content='center'\n            itemsPerRow={3}\n          >\n            {this.displayDoctors()}\n          </Card.Group>\n        </Grid>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}