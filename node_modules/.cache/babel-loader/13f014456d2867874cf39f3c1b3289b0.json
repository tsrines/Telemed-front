{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js\";\nimport React from 'react';\nimport { Grid, Rating, Header, Message, Divider, Segment, Image } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass DoctorShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: 0,\n      currentUser: null,\n      doc: {}\n    };\n\n    this.favoriteHandler = () => {\n      this.setState({\n        favorite: 0\n      });\n    };\n\n    this.postFavorite = () => {\n      try {} catch (error) {}\n    };\n\n    this.deleteFavorite = () => {};\n\n    this.rate = (e, {\n      rating\n    }) => {\n      console.log(rating, this.props);\n    };\n  }\n\n  async componentDidMount() {\n    const token = localStorage.token;\n\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: {\n            Authorization: token\n          }\n        });\n\n        if (res.errors) {\n          this.setState({\n            currentUser: null\n          });\n        } else {\n          this.setState({\n            currentUser: res.data\n          });\n        }\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    this.props.getDoctorById(parseInt(this.props.match.params.id));\n  }\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \", this.state); // debugger\n\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos\n    } = this.props.doctorShow;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        maxWidth: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, name), React.createElement(Rating, {\n      onRate: (e, data) => this.rate(e, data),\n      icon: \"heart\",\n      rating: this.state.favorite,\n      maxRating: 1,\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Phone Number: \", formatted_phone_number), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Address: \", formatted_address), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: website,\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      to: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Website\")), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: url,\n      rel: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Google Maps\")), rating && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Average Rating: \", rating), reviews && reviews.map(review => React.createElement(\"div\", {\n      key: review.author_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, review.author_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, review.text)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, photos && photos.map(photo => React.createElement(Image, {\n      key: photo.id,\n      alt: \"\",\n      src: photo.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default DoctorShow;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js"],"names":["React","Grid","Rating","Header","Message","Divider","Segment","Image","axios","DoctorShow","Component","state","favorite","currentUser","doc","favoriteHandler","setState","postFavorite","error","deleteFavorite","rate","e","rating","console","log","props","componentDidMount","token","localStorage","res","get","headers","Authorization","errors","data","alert","getDoctorById","parseInt","match","params","id","render","name","formatted_phone_number","formatted_address","url","website","reviews","photos","doctorShow","height","maxWidth","map","review","author_name","text","photo","slug"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Rating,\n  Header,\n  Message,\n  Divider,\n  Segment,\n  Image,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass DoctorShow extends React.Component {\n\n  state = {\n    favorite: 0,\n    currentUser: null,\n    doc: {},\n  };\n\n  favoriteHandler = () => {\n    this.setState({\n      favorite: 0,\n    });\n  };\n\n  async componentDidMount() {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        if(res.errors){\n          this.setState({currentUser: null})\n        } else {\n          this.setState({ currentUser: res.data });\n        }\n\n      } catch (error) {\n        alert(error);\n      }\n    }\n    this.props.getDoctorById(parseInt(this.props.match.params.id));\n  }\n\n  postFavorite = () => {\n    try {\n      \n    } catch (error) {\n      \n    }\n  }\n\n  deleteFavorite = () => {\n\n  }\n\n  rate = (e, { rating }) => {\n    console.log(rating, this.props);\n\n  };\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \",this.state)\n    // debugger\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos,\n    } = this.props.doctorShow;\n\n    return (\n      <div>\n        <Grid\n          columns={2}\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Row style={{ maxWidth: 1000 }}>\n            <Grid.Column>\n              <Segment>\n                <Header>{name}</Header>\n                <Rating\n                  onRate={(e, data) => this.rate(e, data)}\n                  icon='heart'\n                  rating={this.state.favorite}\n                  maxRating={1}\n                  size='huge'\n                />\n                <Divider />\n                <Message>Phone Number: {formatted_phone_number}</Message>\n                <Message>Address: {formatted_address}</Message>\n                <Message>\n                  <a\n                    href={website}\n                    rel='noopener noreferrer'\n                    target='_blank'\n                    to={website}\n                  >\n                    Website\n                  </a>\n                </Message>\n                <Message>\n                  <a href={url} rel=''>\n                    Google Maps\n                  </a>\n                </Message>\n                {rating && <Message>Average Rating: {rating}</Message>}\n                {reviews &&\n                  reviews.map((review) => (\n                    <div key={review.author_name}>\n                      <Message>\n                        <span>\n                          <strong>{review.author_name}</strong>\n                        </span>\n                        <p>{review.text}</p>\n                      </Message>\n                    </div>\n                  ))}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              {photos &&\n                photos.map((photo) => (\n                  <Image key={photo.id} alt='' src={photo.slug}></Image>\n                ))}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DoctorShow;\n"]},"metadata":{},"sourceType":"module"}