{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctor = async doctor => {\n  let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n  const detailedDoctor = res.data.result;\n  const {\n    formatted_address,\n    formatted_phone_number,\n    name,\n    place_id,\n    rating,\n    url,\n    website,\n    user_ratings_total,\n    geometry: {\n      location: {\n        lat,\n        lng\n      }\n    }\n  } = detailedDoctor;\n  const doctorHash = {\n    place_id,\n    name,\n    formatted_address,\n    rating,\n    user_ratings_total,\n    formatted_phone_number,\n    lat,\n    lng,\n    url,\n    website\n  };\n  const config = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      accepts: 'application/json'\n    }\n  };\n  const body = JSON.stringify(doctorHash);\n  fetch(`http://localhost:3000/doctors`, config, body).then(res => res.json()).then(data => console.log('data'));\n  debugger;\n  return doctorHash;\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctor","doctor","res","get","place_id","detailedDoctor","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","config","method","headers","accepts","body","JSON","stringify","fetch","then","json","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;AAC5C,MAAIC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CACb,0CAAyCF,MAAM,CAACG,QAAS,EAD5C,CAAhB;AAGA,QAAMC,cAAc,GAAGH,GAAG,CAACI,IAAJ,CAASC,MAAhC;AACA,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,sBAFI;AAGJC,IAAAA,IAHI;AAIJN,IAAAA,QAJI;AAKJO,IAAAA,MALI;AAMJC,IAAAA,GANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA,kBARI;AASJC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AADF;AATN,MAYFb,cAZJ;AAcA,QAAMc,UAAU,GAAG;AACjBf,IAAAA,QADiB;AAEjBM,IAAAA,IAFiB;AAGjBF,IAAAA,iBAHiB;AAIjBG,IAAAA,MAJiB;AAKjBG,IAAAA,kBALiB;AAMjBL,IAAAA,sBANiB;AAOjBQ,IAAAA,GAPiB;AAQjBC,IAAAA,GARiB;AASjBN,IAAAA,GATiB;AAUjBC,IAAAA;AAViB,GAAnB;AAYA,QAAMO,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,OAAO,EAAE;AAFF;AAFI,GAAf;AAOA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAAb;AAEAQ,EAAAA,KAAK,CAAE,+BAAF,EAAkCP,MAAlC,EAA0CI,IAA1C,CAAL,CACGI,IADH,CACS1B,GAAD,IAASA,GAAG,CAAC2B,IAAJ,EADjB,EAEGD,IAFH,CAEStB,IAAD,IAAUwB,OAAO,CAACC,GAAR,CAAY,MAAZ,CAFlB;AAGE;AAEF,SAAOZ,UAAP;AACD,CA9CM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctor = async (doctor) => {\n  let res = await Axios.get(\n    `http://localhost:3000/geocodes/details/${doctor.place_id}`\n  );\n  const detailedDoctor = res.data.result;\n  const {\n    formatted_address,\n    formatted_phone_number,\n    name,\n    place_id,\n    rating,\n    url,\n    website,\n    user_ratings_total,\n    geometry: {\n      location: { lat, lng },\n    },\n  } = detailedDoctor;\n\n  const doctorHash = {\n    place_id,\n    name,\n    formatted_address,\n    rating,\n    user_ratings_total,\n    formatted_phone_number,\n    lat,\n    lng,\n    url,\n    website,\n  };\n  const config = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      accepts: 'application/json',\n    },\n  };\n  const body = JSON.stringify(doctorHash);\n\n  fetch(`http://localhost:3000/doctors`, config, body)\n    .then((res) => res.json())\n    .then((data) => console.log('data'));\n    debugger\n\n  return doctorHash;\n};\n"]},"metadata":{},"sourceType":"module"}