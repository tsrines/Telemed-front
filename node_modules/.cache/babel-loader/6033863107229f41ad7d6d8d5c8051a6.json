{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Form,Header,Image,Button,Grid,Segment,Label,Input}from'semantic-ui-react';import axios from'axios';var Search=/*#__PURE__*/function(_React$Component){_inherits(Search,_React$Component);function Search(){var _getPrototypeOf2;var _this;_classCallCheck(this,Search);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Search)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={address:'',query:'',distance:'',browserLocation:false,lat:null,lng:null};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var payload,_this$state,lat,lng,distance,query,address,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('this.props from search',_this.props);e.preventDefault();_this.props.loadingHandler(true);payload=_this.state;_this$state=_this.state,lat=_this$state.lat,lng=_this$state.lng,distance=_this$state.distance,query=_this$state.query,address=_this$state.address;if(!(lat===null&&lng===null)){_context.next=22;break;}_context.prev=6;_context.next=9;return axios.get(\"http://localhost:3000/geocodes/coords?address=\".concat(address));case 9:res=_context.sent;payload.lat=res.data.lat;payload.lng=res.data.lng;payload.query=query;_context.next=15;return _this.props.googleSearch(payload);case 15:_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](6);console.log(_context.t0);case 20:_context.next=25;break;case 22:payload.query=query;_context.next=25;return _this.props.googleSearch(payload);case 25:case\"end\":return _context.stop();}}},_callee,null,[[6,17]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.useCurrentPosition=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var geo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:geo=navigator.geolocation;if(!geo){console.log('Geo not supported');}else{geo.getCurrentPosition(function(position){_this.setState({lat:position.coords.latitude.toString(),lng:position.coords.longitude.toString(),browserLocation:true});});}case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();return _this;}_createClass(Search,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Grid,{textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},React.createElement(Grid.Column,{style:{maxWidth:900}},React.createElement(Header,{as:\"h2\",color:\"red\",textAlign:\"center\"},React.createElement(Image,{src:\"../favicon.ico\"}),\"Telemed\"),React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(React.Fragment,null,React.createElement(Label,{pointing:\"below\"},\"Click me to use geolocation\"),React.createElement(Form.Field,null,React.createElement(Form.Checkbox,{onClick:this.useCurrentPosition}),React.createElement(Input,{fluid:true,name:\"address\",onChange:function onChange(e){return _this2.onChange(e);},type:\"text\",placeholder:\"Address\",value:this.state.address})),React.createElement(Form.Field,null,React.createElement(Label,null,\"What kind of doctor do you need to see?\"),React.createElement(Input,{fluid:true,required:true,name:\"query\",onChange:function onChange(e){return _this2.onChange(e);},type:\"text\",placeholder:\"...foot, heart, etc\",value:this.state.query})),React.createElement(Form.Field,null,React.createElement(Label,null,\"How far are you willing to travel?\"),React.createElement(Input,{fluid:true// label={'Travel Distance'}\n,required:true,name:\"distance\",onChange:function onChange(e){return _this2.onChange(e);},type:\"number\",placeholder:\"...in miles\",value:this.state.distance})),React.createElement(Button,{loading:this.props.loading,color:\"red\",type:\"submit\"},\"Get Doctors\"))))));}}]);return Search;}(React.Component);export default Search;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js"],"names":["React","Form","Header","Image","Button","Grid","Segment","Label","Input","axios","Search","state","address","query","distance","browserLocation","lat","lng","onChange","e","setState","target","name","value","onSubmit","console","log","props","preventDefault","loadingHandler","payload","get","res","data","googleSearch","useCurrentPosition","geo","navigator","geolocation","getCurrentPosition","position","coords","latitude","toString","longitude","height","maxWidth","loading","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Form,\n  Header,\n  Image,\n  Button,\n  Grid,\n  Segment,\n  Label,\n  Input,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n  state = {\n    address: '',\n    query: '',\n    distance: '',\n    browserLocation: false,\n    lat: null,\n    lng: null,\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    console.log('this.props from search', this.props);\n    e.preventDefault();\n    this.props.loadingHandler(true);\n    const payload = this.state;\n    const { lat, lng, distance, query, address } = this.state;\n    if (lat === null && lng === null) {\n      try {\n        let res = await axios.get(\n          `http://localhost:3000/geocodes/coords?address=${address}`\n        );\n        payload.lat = res.data.lat;\n        payload.lng = res.data.lng;\n        payload.query = query;\n        await this.props.googleSearch(payload);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      payload.query = query;\n      await this.props.googleSearch(payload);\n    }\n    // this.props.loadingHandler(false);\n  };\n\n  useCurrentPosition = async (e) => {\n    const geo = navigator.geolocation;\n\n    if (!geo) {\n      console.log('Geo not supported');\n    } else {\n      geo.getCurrentPosition((position) => {\n        this.setState({\n          lat: position.coords.latitude.toString(),\n          lng: position.coords.longitude.toString(),\n          browserLocation: true,\n        });\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 900 }}>\n            <Header as='h2' color='red' textAlign='center'>\n              <Image src='../favicon.ico' />\n              Telemed\n            </Header>\n            {/* {this.props.loading && <Segment>Loading...</Segment>} */}\n\n            <Form onSubmit={this.onSubmit}>\n              <>\n                <Label pointing='below'>Click me to use geolocation</Label>\n\n                <Form.Field>\n                  {/* <Label>Current Location?</Label> */}\n                  <Form.Checkbox\n                    onClick={this.useCurrentPosition}\n                  ></Form.Checkbox>\n                  <Input\n                    fluid\n                    name='address'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='Address'\n                    value={this.state.address}\n                  ></Input>\n                </Form.Field>\n                <Form.Field>\n                  <Label>What kind of doctor do you need to see?</Label>\n                  <Input\n                    fluid\n                    required\n                    name='query'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='...foot, heart, etc'\n                    value={this.state.query}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <Label>How far are you willing to travel?</Label>\n                  <Input\n                    fluid\n                    // label={'Travel Distance'}\n                    required\n                    name='distance'\n                    onChange={(e) => this.onChange(e)}\n                    type='number'\n                    placeholder='...in miles'\n                    value={this.state.distance}\n                  />\n                </Form.Field>\n                <Button loading={this.props.loading} color='red' type='submit'>\n                  Get Doctors\n                </Button>\n              </>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}