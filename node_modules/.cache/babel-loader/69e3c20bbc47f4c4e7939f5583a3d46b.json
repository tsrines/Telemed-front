{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\nimport SearchIndex from './containers/SearchIndex';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      currentUser: {},\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchIndex: []\n    };\n\n    this.editProfileOnChange = e => {\n      this.setState({ ...this.state,\n        currentUser: { ...this.state.currentUser,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.editProfileOnSubmit = async e => {\n      this.loadingHandler(true);\n      e.preventDefault();\n      const {\n        email,\n        address,\n        first_name,\n        last_name\n      } = this.state.currentUser;\n      const payload = {\n        email,\n        address,\n        first_name,\n        last_name\n      };\n      await this.patchUser(payload);\n      this.loadingHandler(false);\n    };\n\n    this.saveSearch = async searchedDoctors => {\n      debugger;\n      let user_id = this.state.currentUser.id;\n      let csv = '';\n      let data;\n      searchedDoctors.forEach(doc => csv += doc.id.toString() + ',');\n      const payload = {\n        csv,\n        user_id\n      };\n\n      try {\n        let res = await axios.post(`http://localhost:3000/searches`, payload);\n        data = res.data;\n        console.log('data from saveSearch', data);\n      } catch (error) {}\n\n      this.props.history.push(`/search/${payload.user_id}/${data.id}`);\n    };\n\n    this.setSearchIndex = searchIndex => {\n      this.setState({\n        searchIndex\n      });\n    };\n\n    this.googleSearch = async payload => {\n      this.loadingHandler(true);\n      const apidocs = await fetchApiDoctors(payload);\n      this.setState({\n        searchIndex: apidocs\n      }, () => {\n        this.loadingHandler(false);\n      });\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.map(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n        }\n      });\n      this.saveSearch(apidocs);\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.loadingHandler = bool => {\n      this.setState({\n        loading: bool\n      });\n    };\n\n    this.patchUser = async formData => {\n      try {\n        let res = await axios.patch(`http://localhost:3000/users/${this.state.currentUser.id}`, formData); // debugger\n\n        if (res.data.errors) {\n          console.log(res.data.errors);\n        } else {\n          let currentUser = res.data;\n          this.setState({\n            currentUser\n          }, () => this.loadingHandler(false));\n        }\n      } catch (err) {// console.log(err.data)\n      }\n    };\n\n    this.getDoctorById = async id => {\n      // debugger\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow\n        }, () => this.loadingHandler(false));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        }, () => {\n          this.loadingHandler(false);\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n          this.setState({\n            currentUser: res.data\n          }, () => this.loadingHandler(false));\n        } catch (error) {// alert(error);\n        }\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser: currentUser.user\n      }, () => {\n        localStorage.token = currentUser.token;\n        this.loadUser();\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.props.history.push('/');\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('token');\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  render() {\n    // console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      signUp: this.signUp,\n      logout: this.logout,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        doctors: this.state.doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        loadingHandler: this.loadingHandler,\n        error: this.state.error,\n        loading: this.state.loading,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search/:userId/:searchId\",\n      render: routerProps => React.createElement(SearchIndex, Object.assign({\n        loadingHandler: this.loadingHandler,\n        setSearchIndex: this.setSearchIndex,\n        searchIndex: this.state.searchIndex,\n        loadUser: this.loadUser,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading,\n        getDoctorById: this.getDoctorById,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        doctorShow: this.state.doctorShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/edit\",\n      render: routerProps => React.createElement(Edit, Object.assign({\n        editProfileOnChange: this.editProfileOnChange,\n        editProfileOnSubmit: this.editProfileOnSubmit,\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","NavBar","Container","Edit","SearchIndex","App","Component","state","loading","currentUser","lat","lng","doctors","searchIndex","editProfileOnChange","e","setState","target","name","value","editProfileOnSubmit","loadingHandler","preventDefault","email","address","first_name","last_name","payload","patchUser","saveSearch","searchedDoctors","user_id","id","csv","data","forEach","doc","toString","res","post","console","log","error","props","history","push","setSearchIndex","googleSearch","apidocs","reviews","place_id","map","photos","isFavorite","favoriteArray","filter","doctor","api_id","match","params","length","favorite","bool","formData","patch","errors","err","getDoctorById","get","doctorShow","getDoctors","loadUser","token","localStorage","headers","Authorization","login","alert","setUser","signUp","user","logout","removeItem","componentDidMount","render","routerProps","rate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\n\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\nimport SearchIndex from './containers/SearchIndex';\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    currentUser: {},\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchIndex: [],\n  };\n\n  editProfileOnChange = (e) => {\n    this.setState({\n      ...this.state,\n      currentUser: {\n        ...this.state.currentUser,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  editProfileOnSubmit = async (e) => {\n    this.loadingHandler(true)\n    e.preventDefault();\n    const {email, address, first_name, last_name} = this.state.currentUser\n    const payload = {\n      email, address, first_name, last_name\n    }\n    await this.patchUser(payload);\n    this.loadingHandler(false)\n  };\n\n  saveSearch = async (searchedDoctors) => {\n    debugger;\n    let user_id = this.state.currentUser.id;\n    let csv = '';\n    let data\n    searchedDoctors.forEach((doc) => (csv += doc.id.toString() + ','));\n    const payload = {\n      csv,\n      user_id,\n    };\n    try {\n      let res = await axios.post(`http://localhost:3000/searches`, payload);\n      data = res.data;\n\n      console.log('data from saveSearch', data);\n\n    } catch (error) {}\n    this.props.history.push(`/search/${payload.user_id}/${data.id}`);\n\n  };\n\n  setSearchIndex = (searchIndex) => {\n    this.setState({ searchIndex });\n  };\n\n  googleSearch = async (payload) => {\n    this.loadingHandler(true);\n    const apidocs = await fetchApiDoctors(payload);\n\n    this.setState({ searchIndex: apidocs }, () => {\n      this.loadingHandler(false);\n    });\n\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.map(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n      }\n    });\n    this.saveSearch(apidocs);\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  loadingHandler = (bool) => {\n    this.setState({ loading: bool });\n  };\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n\n  patchUser = async (formData) => {\n    try {\n      let res = await axios.patch(\n        `http://localhost:3000/users/${this.state.currentUser.id}`,\n        formData\n      );\n\n      // debugger\n      if(res.data.errors){\n        console.log(res.data.errors)\n      } else {\n        let currentUser = res.data\n        this.setState({ currentUser }, () => this.loadingHandler(false));\n      }\n      \n    } catch (err) {\n      // console.log(err.data)\n    }\n  };\n  getDoctorById = async (id) => {\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow }, () => this.loadingHandler(false));\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data }, () => {\n        this.loadingHandler(false);\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        this.setState({ currentUser: res.data }, () =>\n          this.loadingHandler(false)\n        );\n      } catch (error) {\n        // alert(error);\n      }\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n    this.loadingHandler(false);\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n    this.loadingHandler(false);\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser: currentUser.user,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        this.loadUser();\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.props.history.push('/');\n    this.setState(\n      {\n        currentUser: null,\n      },\n      () => {\n        localStorage.removeItem('token');\n       \n      }\n    );\n  };\n\n  render() {\n    // console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <>\n        <Container>\n          <NavBar\n            signUp={this.signUp}\n            logout={this.logout}\n            currentUser={this.state.currentUser}\n          />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route\n              exact\n              path='/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                  doctors={this.state.doctors}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/signup'\n              render={(routerProps) => (\n                <SignUp\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  {...routerProps}\n                  setUser={this.setUser}\n                  signUp={this.signUp}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path='/login'\n              render={(routerProps) => (\n                <Login\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  {...routerProps}\n                  setUser={this.setUser}\n                  login={this.login}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search'\n              render={(routerProps) => (\n                <Search\n                  loadingHandler={this.loadingHandler}\n                  error={this.state.error}\n                  loading={this.state.loading}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  googleSearch={this.googleSearch}\n                  favorite={this.favorite}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search/:userId/:searchId'\n              render={(routerProps) => (\n                <SearchIndex\n                  loadingHandler={this.loadingHandler}\n                  setSearchIndex={this.setSearchIndex}\n                  searchIndex={this.state.searchIndex}\n                  loadUser={this.loadUser}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/doctors/:id'\n              render={(routerProps) => (\n                <DoctorShow\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  getDoctorById={this.getDoctorById}\n                  rate={this.rate}\n                  doctors={this.state.doctors}\n                  favorite={this.state.favorite}\n                  isFavorite={this.isFavorite}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  favorite={this.favorite}\n                  doctorShow={this.state.doctorShow}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile'\n              render={(routerProps) => (\n                <Profile\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  currentUser={this.state.currentUser}\n                  doctors={this.state.doctors}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile/edit'\n              render={(routerProps) => (\n                <Edit\n                  editProfileOnChange={this.editProfileOnChange}\n                  editProfileOnSubmit={this.editProfileOnSubmit}\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  patchUser={this.patchUser}\n                  currentUser={this.state.currentUser}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n          </Switch>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}