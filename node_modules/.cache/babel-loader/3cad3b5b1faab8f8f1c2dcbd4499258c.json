{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({\n    coords\n  }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n\n    if (!geo) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    watcher = geo.watchPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return { ...position,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/usePosition.js"],"names":["useState","useEffect","usePosition","position","setPosition","error","setError","onChange","coords","latitude","longitude","onError","message","geo","navigator","geolocation","watcher","watchPosition","clearWatch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMO,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC/BJ,IAAAA,WAAW,CAAC;AACVK,MAAAA,QAAQ,EAAED,MAAM,CAACC,QADP;AAEVC,MAAAA,SAAS,EAAEF,MAAM,CAACE;AAFR,KAAD,CAAX;AAID,GALD;;AAMA,QAAMC,OAAO,GAAIN,KAAD,IAAW;AACzBC,IAAAA,QAAQ,CAACD,KAAK,CAACO,OAAP,CAAR;AACD,GAFD;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,GAAG,GAAGC,SAAS,CAACC,WAAtB;;AACA,QAAI,CAACF,GAAL,EAAU;AACRP,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AACDU,IAAAA,OAAO,GAAGH,GAAG,CAACI,aAAJ,CAAkBV,QAAlB,EAA4BI,OAA5B,CAAV;AACA,WAAO,MAAME,GAAG,CAACK,UAAJ,CAAeF,OAAf,CAAb;AACD,GARQ,EAQN,EARM,CAAT;AASA,SAAO,EAAE,GAAGb,QAAL;AAAeE,IAAAA;AAAf,GAAP;AACD,CAvBM","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n    });\n  };\n  const onError = (error) => {\n    setError(error.message);\n  };\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError('Geolocation is not supported');\n      return;\n    }\n    watcher = geo.watchPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return { ...position, error };\n};\n"]},"metadata":{},"sourceType":"module"}