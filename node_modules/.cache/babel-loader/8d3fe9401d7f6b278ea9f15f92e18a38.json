{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js\";\nimport React from 'react';\nimport { Form, Header, Image, Button, Grid, Segment } from 'semantic-ui-react';\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      query: '',\n      distance: '',\n      browserLocation: false\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      const {\n        address,\n        query,\n        distance,\n        browserLocation\n      } = { ...this.state\n      };\n      console.log(formData, browserLocation);\n      e.preventDefault();\n      this.props.googleSearch(formData, browserLocation);\n      this.props.loadingHandler();\n    };\n\n    this.useCurrentPosition = e => {\n      const geo = navigator.geolocation;\n\n      if (!geo) {\n        console.log('Geo not supported');\n      } else {\n        geo.getCurrentPosition(pos => console.log(pos.coords.longitude, pos.coords.latitude));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"red\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"../favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"Telemed\"), this.props.error && React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"No search results found / API is currently down\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"button\", {\n      onClick: this.useCurrentPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Use Current Location\"), React.createElement(\"input\", {\n      required: true,\n      name: \"address\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"What kind of doctor do you need to see?\"), React.createElement(\"input\", {\n      required: true,\n      name: \"query\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"...foot, heart, etc\",\n      value: this.state.query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"How far are you willing to travel?\"), React.createElement(\"input\", {\n      label: 'Travel Distance',\n      required: true,\n      name: \"distance\",\n      onChange: e => this.onChange(e),\n      type: \"number\",\n      placeholder: \"...in miles\",\n      value: this.state.distance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), !this.props.isLoading && React.createElement(Button, {\n      color: \"red\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Get Doctors\"), this.props.isLoading && React.createElement(Button, {\n      loading: true,\n      color: \"red\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js"],"names":["React","Form","Header","Image","Button","Grid","Segment","Search","Component","state","address","query","distance","browserLocation","onChange","e","setState","target","name","value","onSubmit","console","log","formData","preventDefault","props","googleSearch","loadingHandler","useCurrentPosition","geo","navigator","geolocation","getCurrentPosition","pos","coords","longitude","latitude","render","height","maxWidth","error","isLoading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Header, Image, Button, Grid, Segment } from 'semantic-ui-react';\n\n\nclass Search extends React.Component {\n  state = {\n    address: '',\n    query: '',\n    distance: '',\n    browserLocation: false\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    const {address, query, distance, browserLocation} = {...this.state}\n    \n    console.log(formData, browserLocation)\n    e.preventDefault();\n    this.props.googleSearch(formData, browserLocation);\n    this.props.loadingHandler();\n  };\n\n  useCurrentPosition = e => {\n    const geo = navigator.geolocation\n    if(!geo){\n      console.log('Geo not supported')\n    } else {\n      geo.getCurrentPosition(pos => console.log(pos.coords.longitude, pos.coords.latitude))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Column style={{ maxWidth: 900 }}>\n            <Header as='h2' color='red' textAlign='center'>\n              <Image src='../favicon.ico' />\n              Telemed\n            </Header>\n            {this.props.error && (\n              <Segment>No search results found / API is currently down</Segment>\n            )}\n            <Form onSubmit={this.onSubmit}>\n              <>\n                <Form.Field>\n                  <label>Location</label>\n                  <button onClick={this.useCurrentPosition}>Use Current Location</button>\n                  <input\n                    required\n                    name='address'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='Address'\n                    value={this.state.address}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>What kind of doctor do you need to see?</label>\n                  <input\n                    required\n                    name='query'\n                    onChange={(e) => this.onChange(e)}\n                    type='text'\n                    placeholder='...foot, heart, etc'\n                    value={this.state.query}\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label>How far are you willing to travel?</label>\n                  <input\n                    label={'Travel Distance'}\n                    required\n                    name='distance'\n                    onChange={(e) => this.onChange(e)}\n                    type='number'\n                    placeholder='...in miles'\n                    value={this.state.distance}\n                  />\n                </Form.Field>\n                {!this.props.isLoading && (\n                  <Button color='red' type='submit'>\n                    Get Doctors\n                  </Button>\n                )}\n                {this.props.isLoading && (\n                  <Button loading color='red' type='submit'></Button>\n                )}\n              </>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}