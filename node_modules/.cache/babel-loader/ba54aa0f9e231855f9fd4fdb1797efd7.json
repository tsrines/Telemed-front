{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js\";\nimport React from 'react';\nimport { Grid, Rating, Header, Message, Divider, Segment, Image } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass DoctorShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: 0,\n      currentUser: null,\n      doc: {},\n      id: null\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n\n          if (res.errors) {\n            this.setState({\n              currentUser: null\n            });\n          } else {\n            // debugger\n            this.setState({\n              currentUser: res.data\n            });\n          }\n        } catch (error) {\n          this.setState({\n            currentUser: null\n          });\n          alert(error);\n        }\n      }\n    };\n\n    this.postFavorite = async () => {\n      const favoriteObject = {\n        doctor_id: this.props.match.params.id,\n        user_id: this.state.currentUser.id\n      };\n\n      try {\n        let res = await axios.post(`http://localhost:3000/favorites`, favoriteObject);\n        this.setState({\n          favorite: 1,\n          id: res.data.id\n        }, () => {\n          this.loadUser();\n        });\n        console.log(res.data);\n      } catch (error) {}\n    };\n\n    this.deleteFavorite = async () => {\n      try {\n        let res = await axios.delete(`http://localhost:3000/favorites/${this.state.id}`);\n        console.log(\"res.data from deletefavorite\", res.data);\n        this.setState({\n          favorite: 0,\n          id: null\n        }, () => {\n          this.loadUser();\n        });\n      } catch (err) {\n        console.log(\"error\", err);\n      }\n\n      console.log('got here in delete');\n    };\n\n    this.rate = (e, {\n      rating\n    }) => {\n      if (rating === 0) {\n        this.deleteFavorite();\n      } else {\n        this.postFavorite();\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getDoctorById(parseInt(this.props.match.params.id));\n    await this.loadUser();\n    this.state.currentUser.doctors.find(doc => doc.id === this.props.match.params.id); // if(this.props.currentUser.doctors.includes(this.props.doctorShow)) this.setState({favorite: 1})\n  }\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \", this.state); // debugger\n\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos\n    } = this.props.doctorShow;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      style: {\n        maxWidth: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, name), React.createElement(Rating, {\n      onRate: (e, data) => this.rate(e, data),\n      icon: \"heart\",\n      rating: this.state.favorite,\n      maxRating: 1,\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Phone Number: \", formatted_phone_number), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Address: \", formatted_address), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: website,\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      to: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Website\")), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: url,\n      rel: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Google Maps\")), rating && React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Average Rating: \", rating), reviews && reviews.map(review => React.createElement(\"div\", {\n      key: review.author_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, review.author_name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, review.text)))))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, photos && photos.map(photo => React.createElement(Image, {\n      key: photo.id,\n      alt: \"\",\n      src: photo.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default DoctorShow;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorShow.js"],"names":["React","Grid","Rating","Header","Message","Divider","Segment","Image","axios","DoctorShow","Component","state","favorite","currentUser","doc","id","loadUser","token","localStorage","res","get","headers","Authorization","errors","setState","data","error","alert","postFavorite","favoriteObject","doctor_id","props","match","params","user_id","post","console","log","deleteFavorite","delete","err","rate","e","rating","componentDidMount","getDoctorById","parseInt","doctors","find","render","name","formatted_phone_number","formatted_address","url","website","reviews","photos","doctorShow","height","maxWidth","map","review","author_name","text","photo","slug"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Rating,\n  Header,\n  Message,\n  Divider,\n  Segment,\n  Image,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\n\nclass DoctorShow extends React.Component {\n\n  state = {\n    favorite: 0,\n    currentUser: null,\n    doc: {},\n    id: null,\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n      if (token) {\n        //get user info\n  \n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: { Authorization: token },\n          });\n          if(res.errors){\n            this.setState({currentUser: null})\n          } else {\n            // debugger\n            this.setState({ currentUser: res.data });\n          }\n  \n        } catch (error) {\n          this.setState({currentUser: null})\n          alert(error);\n        }\n      }\n  }\n\n  isFavorite\n\n\n\n  async componentDidMount() {\n    await this.props.getDoctorById(parseInt(this.props.match.params.id));\n    await this.loadUser()\n    this.state.currentUser.doctors.find(doc => doc.id === this.props.match.params.id)\n    \n    // if(this.props.currentUser.doctors.includes(this.props.doctorShow)) this.setState({favorite: 1})\n    \n\n  }\n\n  postFavorite = async () => {\n    const favoriteObject = {\n      doctor_id: this.props.match.params.id,\n      user_id: this.state.currentUser.id\n    }\n    try {\n      let res = await axios.post(`http://localhost:3000/favorites`, favoriteObject)\n      this.setState({favorite: 1, id: res.data.id}, ()=> {this.loadUser()})\n      console.log(res.data)\n    } catch (error) {\n      \n    }\n  }\n\n  deleteFavorite = async () => {\n    try {      \n      let res = await axios.delete(`http://localhost:3000/favorites/${this.state.id}`)\n      console.log(\"res.data from deletefavorite\",res.data)\n      this.setState({favorite: 0, id: null}, ()=> {this.loadUser()})\n    } catch (err) {\n      console.log(\"error\", err)\n    }\n\n    console.log('got here in delete')\n  }\n\n  rate = (e, { rating }) => {\n    if(rating === 0){\n      this.deleteFavorite()\n    } else {\n      this.postFavorite()\n    }\n\n\n  };\n\n  render() {\n    console.log(\"DOCTOR SHOW THIS.STATE: \",this.state)\n    // debugger\n    const {\n      name,\n      formatted_phone_number,\n      formatted_address,\n      rating,\n      url,\n      website,\n      reviews,\n      photos,\n    } = this.props.doctorShow;\n\n    return (\n      <div>\n        <Grid\n          columns={2}\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <Grid.Row style={{ maxWidth: 1000 }}>\n            <Grid.Column>\n              <Segment>\n                <Header>{name}</Header>\n                <Rating\n                  onRate={(e, data) => this.rate(e, data)}\n                  icon='heart'\n                  rating={this.state.favorite}\n                  maxRating={1}\n                  size='huge'\n                />\n                <Divider />\n                <Message>Phone Number: {formatted_phone_number}</Message>\n                <Message>Address: {formatted_address}</Message>\n                <Message>\n                  <a\n                    href={website}\n                    rel='noopener noreferrer'\n                    target='_blank'\n                    to={website}\n                  >\n                    Website\n                  </a>\n                </Message>\n                <Message>\n                  <a href={url} rel=''>\n                    Google Maps\n                  </a>\n                </Message>\n                {rating && <Message>Average Rating: {rating}</Message>}\n                {reviews &&\n                  reviews.map((review) => (\n                    <div key={review.author_name}>\n                      <Message>\n                        <span>\n                          <strong>{review.author_name}</strong>\n                        </span>\n                        <p>{review.text}</p>\n                      </Message>\n                    </div>\n                  ))}\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              {photos &&\n                photos.map((photo) => (\n                  <Image key={photo.id} alt='' src={photo.slug}></Image>\n                ))}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default DoctorShow;\n"]},"metadata":{},"sourceType":"module"}