{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Image, Segment, Divider } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport emailjs from 'emailjs-com';\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.formData = () => {\n      let formData = this.state;\n      this.props.onSubmit(formData);\n      this.setState({\n        email: \"\",\n        password: \"\",\n        passwordConfirmation: \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"red\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Telemed\", React.createElement(Image, {\n      src: \"../favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"email\",\n      value: this.state.email,\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"password\",\n      value: this.state.password,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.props.register && React.createElement(Form.Input, {\n      onChange: e => this.onChange(e),\n      name: \"passwordConfirmation\",\n      value: this.state.passwordConfirmation,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password Confirmation\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.props.register && React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.onSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.formData,\n      color: \"red\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign Up!\")), !this.props.register && React.createElement(Button, {\n      onClick: this.formData,\n      color: \"red\",\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.register ? \"Sign Up\" : \"Login\"))), !this.props.register && React.createElement(Button, {\n      onClick: this.props.onSignUp,\n      label: \"Sign Up?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Login.js"],"names":["React","Button","Form","Grid","Header","Image","Segment","Divider","withRouter","emailjs","LoginForm","Component","state","email","password","passwordConfirmation","onChange","e","setState","target","name","value","formData","props","onSubmit","render","height","maxWidth","register","onSignUp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, Grid, Header, Image, Segment, Divider } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\nimport emailjs from 'emailjs-com'\n\n\nclass LoginForm extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  formData = () => {\n    let formData = this.state\n    this.props.onSubmit(formData)\n    this.setState({\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    })\n  }\n\n\n  render() {\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='red' textAlign='center'>\n            Telemed \n            <Image src='../favicon.ico' />\n          </Header>\n          <br />\n          <br />\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"email\"\n                value={this.state.email}\n                fluid icon='user'\n                iconPosition='left'\n                placeholder='E-mail address' />\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"password\"\n                value={this.state.password}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n              {this.props.register &&\n                <Form.Input\n                  onChange={(e) => this.onChange(e)}\n                  name=\"passwordConfirmation\"\n                  value={this.state.passwordConfirmation}\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password Confirmation'\n                  type='password'\n                />}\n              {this.props.register && <Button.Group>\n                <Button onClick={this.props.onSignUp}>Cancel</Button>\n                <Button.Or />\n                <Button onClick={this.formData} color='red' fluid size='large'>Sign Up!</Button>\n              </Button.Group>}\n              {!this.props.register && <Button onClick={this.formData} color='red' fluid size='large'>\n                {this.props.register ? \"Sign Up\" : \"Login\"}\n              </Button>}\n            </Segment>\n          </Form>\n          {!this.props.register &&\n            <Button onClick={this.props.onSignUp} label=\"Sign Up?\" />}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\n\nexport default withRouter(LoginForm)"]},"metadata":{},"sourceType":"module"}