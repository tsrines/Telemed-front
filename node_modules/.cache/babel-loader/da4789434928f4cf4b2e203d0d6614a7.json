{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      currentUser: null,\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchedDocs: [],\n      doctorShow: {},\n      doctorSearch: []\n    };\n\n    this.doneLoading = () => {\n      this.setState({\n        loading: false\n      }, () => {\n        console.log('loading = false ?', this.state.loading);\n      });\n    };\n\n    this.googleSearch = async payload => {\n      this.setState({\n        loading: true\n      });\n      const apidocs = await fetchApiDoctors(payload);\n      this.setState({\n        doctorSearch: apidocs,\n        loading: false\n      }, () => this.props.history.push('/search/doctors'));\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.map(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n        }\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.patchUser = async formData => {\n      this.setState({\n        loading: true\n      });\n      let res = await axios.patch(`http://localhost:3000/${this.state.currentUser.id}`, formData);\n      let currentUser = res.data;\n      this.setState({\n        currentUser,\n        loading: false\n      });\n    };\n\n    this.getDoctorById = async id => {\n      this.setState({\n        loading: true\n      }); // debugger\n\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow,\n          loading: false\n        });\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n          this.setState({\n            currentUser: res.data\n          });\n        } catch (error) {// alert(error);\n        }\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser: currentUser.user\n      }, () => {\n        localStorage.token = currentUser.token; // this.loadUser();\n\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  render() {\n    console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      signUp: this.signUp,\n      logout: this.logout,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        doctors: this.state.doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        error: this.state.error,\n        loading: this.state.loading,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        doneLoading: this.doneLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        doctorSearch: this.state.doctorSearch,\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        loadUser: this.loadUser,\n        loading: this.state.loading,\n        getDoctorById: this.getDoctorById,\n        doctorShow: this.state.doctorShow,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/edit\",\n      render: routerProps => React.createElement(Edit, Object.assign({\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","NavBar","Container","Edit","App","Component","state","loading","currentUser","lat","lng","doctors","searchedDocs","doctorShow","doctorSearch","doneLoading","setState","console","log","googleSearch","payload","apidocs","props","history","push","forEach","doc","reviews","place_id","id","map","photos","isFavorite","favoriteArray","filter","doctor","api_id","match","params","length","favorite","patchUser","formData","res","patch","data","getDoctorById","get","err","getDoctors","error","loadUser","token","localStorage","headers","Authorization","login","post","errors","alert","setUser","signUp","user","logout","removeItem","componentDidMount","render","routerProps","rate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\n\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    currentUser: null,\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchedDocs: [],\n    doctorShow: {},\n    doctorSearch: [],\n  };\n\n  doneLoading = () => {\n    this.setState({ loading: false }, () => {\n      console.log('loading = false ?', this.state.loading);\n    });\n  };\n\n  googleSearch = async (payload) => {\n    this.setState({ loading: true });\n    const apidocs = await fetchApiDoctors(payload);\n\n    this.setState({ doctorSearch: apidocs, loading: false }, () =>\n      this.props.history.push('/search/doctors')\n    );\n\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.map(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n      }\n    });\n    this.setState({ loading: false });\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n\n  \n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n\n  patchUser = async (formData) => {\n    this.setState({ loading: true });\n    let res = await axios.patch(\n      `http://localhost:3000/${this.state.currentUser.id}`,\n      formData\n    );\n    let currentUser = res.data;\n    this.setState({ currentUser, loading: false });\n  };\n  getDoctorById = async (id) => {\n    this.setState({ loading: true });\n\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow, loading: false });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        this.setState({ currentUser: res.data });\n      } catch (error) {\n        // alert(error);\n      }\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser: currentUser.user,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        // this.loadUser();\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.setState(\n      {\n        currentUser: null,\n      },\n      () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      }\n    );\n  };\n\n\n\n  render() {\n    console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <>\n        <Container>\n          <NavBar\n            signUp={this.signUp}\n            logout={this.logout}\n            currentUser={this.state.currentUser}\n          />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route\n              exact\n              path='/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  loadUser={this.loadUser}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                  doctors={this.state.doctors}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/signup'\n              render={(routerProps) => (\n                <SignUp\n                loading={this.state.loading}\n\n                  {...routerProps}\n                  setUser={this.setUser}\n                  signUp={this.signUp}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path='/login'\n              render={(routerProps) => (\n                <Login\n                loading={this.state.loading}\n\n                  {...routerProps}\n                  setUser={this.setUser}\n                  login={this.login}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search'\n              render={(routerProps) => (\n                <Search\n                  error={this.state.error}\n                  loading={this.state.loading}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  googleSearch={this.googleSearch}\n                  favorite={this.favorite}\n                  doneLoading={this.doneLoading}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  doctorSearch={this.state.doctorSearch}\n                  loadUser={this.loadUser}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/doctors/:id'\n              render={(routerProps) => (\n                <DoctorShow\n                  loadUser={this.loadUser}\n                  loading={this.state.loading}\n\n                  getDoctorById={this.getDoctorById}\n                  doctorShow={this.state.doctorShow}\n                  rate={this.rate}\n                  doctors={this.state.doctors}\n                  favorite={this.state.favorite}\n                  isFavorite={this.isFavorite}\n\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  favorite={this.favorite}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile'\n              render={(routerProps) => (\n                <Profile\n\n                  currentUser={this.state.currentUser}\n                  doctors={this.state.doctors}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile/edit'\n              render={(routerProps) => (\n                <Edit\n                  patchUser={this.patchUser}\n                  currentUser={this.state.currentUser}\n\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n          </Switch>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}