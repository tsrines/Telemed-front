{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctors = async doctors => {\n  const queryDocs = [];\n  doctors.forEach(async doctor => {\n    let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: {\n          lat,\n          lng\n        }\n      }\n    } = detailedDoctor;\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website\n    }; // debugger;\n\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'Application/json');\n    myHeaders.append('accepts', 'application/json');\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(doctorHash),\n      redirect: 'follow'\n    };\n    const docdoc = await fetch('http://localhost:3000/doctors', requestOptions);\n  });\n  console.log(queryDocs);\n  return queryDocs;\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctors","doctors","queryDocs","forEach","doctor","res","get","place_id","detailedDoctor","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","docdoc","fetch","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AAC9C,QAAMC,SAAS,GAAG,EAAlB;AACED,EAAAA,OAAO,CAACE,OAAR,CAAiB,MAAOC,MAAP,IAAkB;AACnC,QAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACb,0CAAyCF,MAAM,CAACG,QAAS,EAD5C,CAAhB;AAGA,UAAMC,cAAc,GAAGH,GAAG,CAACI,IAAJ,CAASC,MAAhC;AACA,UAAM;AACJC,MAAAA,iBADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,IAHI;AAIJN,MAAAA,QAJI;AAKJO,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP;AADF;AATN,QAYFb,cAZJ;AAcA,UAAMc,UAAU,GAAG;AACjBf,MAAAA,QADiB;AAEjBM,MAAAA,IAFiB;AAGjBF,MAAAA,iBAHiB;AAIjBG,MAAAA,MAJiB;AAKjBG,MAAAA,kBALiB;AAMjBL,MAAAA,sBANiB;AAOjBQ,MAAAA,GAPiB;AAQjBC,MAAAA,GARiB;AASjBN,MAAAA,GATiB;AAUjBC,MAAAA;AAViB,KAAnB,CAnBmC,CAgCnC;;AACA,QAAIO,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,IAAAA,SAAS,CAACE,MAAV,CAAiB,SAAjB,EAA4B,kBAA5B;AACA,QAAIC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAEL,SAFU;AAGnBM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,UAAf,CAHa;AAInBU,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAOA,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkCR,cAAlC,CAA1B;AAED,GA7CC;AA8CFS,EAAAA,OAAO,CAACC,GAAR,CAAYlC,SAAZ;AACA,SAAOA,SAAP;AAED,CAnDM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctors = async (doctors) => {\n  const queryDocs = [];\n    doctors.forEach( async (doctor) => {\n    let res = await Axios.get(\n      `http://localhost:3000/geocodes/details/${doctor.place_id}`\n    );\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: { lat, lng },\n      },\n    } = detailedDoctor;\n\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website,\n    };\n\n    // debugger;\n    var myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'Application/json');\n    myHeaders.append('accepts', 'application/json');\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(doctorHash),\n      redirect: 'follow',\n    };\n\n    const docdoc = await fetch('http://localhost:3000/doctors', requestOptions)\n \n  });\n  console.log(queryDocs)\n  return queryDocs\n\n};\n"]},"metadata":{},"sourceType":"module"}