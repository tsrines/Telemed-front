{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js\";\nimport { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nexport default class SearchIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadSearchIndex = async () => {\n      const {\n        searchId\n      } = this.props.match.params.searchId;\n      const index = [];\n      let csv = '';\n\n      try {\n        let res = await Axios.get(`http://localhost:3000/searches/${searchId}`);\n        csv = res.data.csv;\n      } catch (err) {}\n\n      csv = csv.split(',');\n      csv.pop();\n      console.log(csv, 'CSV FROM LOADSEARCHINDEX');\n      await csv.forEach(async id => {\n        console.log(id);\n        let doctorId = parseInt(id);\n        let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n        let doc = res.data;\n        return;\n        console.log(doc);\n        index.push(doc);\n        debugger;\n      });\n      console.log(index);\n      await this.props.setSearchIndex(index);\n    };\n\n    this.displayDoctors = () => {\n      return this.props.searchIndex.map(doc => React.createElement(\"div\", {\n        key: doc.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, doc.name));\n    };\n  }\n\n  componentDidMount() {\n    this.loadSearchIndex();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.displayDoctors());\n  }\n\n}","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/SearchIndex.js"],"names":["Card","Grid","DoctorCard","Axios","React","Component","SearchIndex","loadSearchIndex","searchId","props","match","params","index","csv","res","get","data","err","split","pop","console","log","forEach","id","doctorId","parseInt","doc","push","setSearchIndex","displayDoctors","searchIndex","map","name","componentDidMount","render"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDE,eADiD,GAC/B,YAAY;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAA3C;AACA,YAAMI,KAAK,GAAG,EAAd;AACA,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAI;AACF,YAAIC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,kCAAiCP,QAAS,EAArD,CAAhB;AACAK,QAAAA,GAAG,GAAGC,GAAG,CAACE,IAAJ,CAASH,GAAf;AACD,OAHD,CAGE,OAAOI,GAAP,EAAY,CAAE;;AAChBJ,MAAAA,GAAG,GAAGA,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAN;AACAL,MAAAA,GAAG,CAACM,GAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ,EAAiB,0BAAjB;AACA,YAAMA,GAAG,CAACS,OAAJ,CAAY,MAAOC,EAAP,IAAc;AAC9BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACA,YAAIC,QAAQ,GAAGC,QAAQ,CAACF,EAAD,CAAvB;AACA,YAAIT,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,iCAAgCS,QAAS,EAApD,CAAhB;AACA,YAAIE,GAAG,GAAGZ,GAAG,CAACE,IAAd;AACA;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAd,QAAAA,KAAK,CAACe,IAAN,CAAWD,GAAX;AACA;AACD,OATK,CAAN;AAUAN,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,YAAM,KAAKH,KAAL,CAAWmB,cAAX,CAA0BhB,KAA1B,CAAN;AACD,KAxBgD;;AAAA,SA0BjDiB,cA1BiD,GA0BhC,MAAM;AAErB,aAAO,KAAKpB,KAAL,CAAWqB,WAAX,CAAuBC,GAAvB,CAA4BL,GAAD,IAAS;AAAK,QAAA,GAAG,EAAEA,GAAG,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBG,GAAG,CAACM,IAAvB,CAApC,CAAP;AACD,KA7BgD;AAAA;;AA+BjDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK1B,eAAL;AAED;;AACD2B,EAAAA,MAAM,GAAG;AACPd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACF,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKoB,cAAL,EAAN,CAAP;AACC;;AAtCgD","sourcesContent":["import { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\nimport Axios from 'axios';\n\nimport React, { Component } from 'react';\n\nexport default class SearchIndex extends Component {\n  loadSearchIndex = async () => {\n    const {searchId} = this.props.match.params.searchId\n    const index = [];\n    let csv = '';\n    try {\n      let res = await Axios.get(`http://localhost:3000/searches/${searchId}`);\n      csv = res.data.csv;\n    } catch (err) {}\n    csv = csv.split(',');\n    csv.pop();\n    console.log(csv, 'CSV FROM LOADSEARCHINDEX');\n    await csv.forEach(async (id) => {\n      console.log(id);\n      let doctorId = parseInt(id);\n      let res = await Axios.get(`http://localhost:3000/doctors/${doctorId}`);\n      let doc = res.data;\n      return \n      console.log(doc);\n      index.push(doc);\n      debugger\n    });\n    console.log(index);\n    await this.props.setSearchIndex(index);\n  };\n\n  displayDoctors = () => {\n\n    return this.props.searchIndex.map((doc) => <div key={doc.id}>{doc.name}</div>);\n  };\n\n  componentDidMount() {\n    this.loadSearchIndex();\n\n  }\n  render() {\n    console.log(this.props)\n  return <div>{this.displayDoctors()}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}