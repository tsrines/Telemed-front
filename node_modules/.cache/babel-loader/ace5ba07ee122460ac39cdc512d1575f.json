{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/Reviews.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message, Container, Header, Rating, Image, Grid } from 'semantic-ui-react';\n\nconst Reviews = ({\n  reviews\n}) => {\n  return React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, reviews && reviews.map(review => React.createElement(Message, {\n    key: review.author_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Container, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Image, {\n    as: \"icon\",\n    size: \"mini\",\n    src: review.profile_photo_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: review.author_url,\n    rel: \"no referrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, review.author_name))), React.createElement(Rating, {\n    disabled: true,\n    icon: \"star\",\n    maxRating: 5,\n    rating: review.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Message.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, review.text))));\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.array.isRequired\n};\nexport default Reviews;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/Reviews.js"],"names":["React","PropTypes","Message","Container","Header","Rating","Image","Grid","Reviews","reviews","map","review","author_name","profile_photo_url","author_url","rating","text","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,IANF,QAOO,mBAPP;;AASA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,SAEI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,IACNA,OAAO,CAACC,GAAR,CAAaC,MAAD,IACV,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,MAAM,CAACC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,GAAG,EAAED,MAAM,CAACE,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,IAAI,EAAEF,MAAM,CAACG,UAAhB;AAA4B,IAAA,GAAG,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CAAGH,MAAM,CAACC,WAAV,CADF,CAFF,CADF,EAQE,oBAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAE,CAHb;AAIE,IAAA,MAAM,EAAED,MAAM,CAACI,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAiBE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBJ,MAAM,CAACK,IAAzB,CAjBF,CADF,CAFJ,CAFJ;AA4BD,CA7BD;;AA+BAR,OAAO,CAACS,SAAR,GAAoB;AAClBR,EAAAA,OAAO,EAAER,SAAS,CAACiB,KAAV,CAAgBC;AADP,CAApB;AAIA,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Message,\n  Container,\n  Header,\n  Rating,\n  Image,\n  Grid,\n} from 'semantic-ui-react';\n\nconst Reviews = ({ reviews }) => {\n  return (\n\n      <Grid.Row>\n        {reviews &&\n          reviews.map((review) => (\n            <Message key={review.author_name}>\n              <Container centered>\n                <Header>\n                  <Image as='icon' size='mini' src={review.profile_photo_url} />\n                  <a href={review.author_url} rel='no referrer'>\n                    <>{review.author_name}</>\n                  </a>\n                </Header>\n\n                <Rating\n                  disabled\n                  icon='star'\n                  maxRating={5}\n                  rating={review.rating}\n                />\n              </Container>\n\n              <Message.Content>{review.text}</Message.Content>\n            </Message>\n          ))}\n      </Grid.Row>\n\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}