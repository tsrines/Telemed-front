{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js\";\nimport React from 'react';\nimport { Form, Header, Input, Image, Button, Grid, Segment } from 'semantic-ui-react';\n\nclass Search extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\",\n      ailment: \"\",\n      miles: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      const formData = this.state;\n      e.preventDefault();\n      this.props.toGeoCode(formData);\n      this.props.loadingHandler();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 900\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"red\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"../favicon.ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \"Telemed\"), this.props.error && React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"No search results found\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Input, {\n      required: true,\n      name: \"address\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Input, {\n      required: true,\n      name: \"ailment\",\n      onChange: e => this.onChange(e),\n      type: \"text\",\n      placeholder: \"What hurts?\",\n      value: this.state.ailment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Input, {\n      required: true,\n      name: \"miles\",\n      onChange: e => this.onChange(e),\n      type: \"number\",\n      placeholder: \"Miles?\",\n      value: this.state.miles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), !this.props.isLoading && React.createElement(Button, {\n      color: \"red\",\n      type: \"submit\",\n      value: \"Get Doctors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Get Doctors\"), this.props.isLoading && React.createElement(Button, {\n      loading: true,\n      color: \"red\",\n      type: \"submit\",\n      value: \"Get Doctors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Get Doctors\")))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Search.js"],"names":["React","Form","Header","Input","Image","Button","Grid","Segment","Search","Component","state","address","ailment","miles","onChange","e","setState","target","name","value","onSubmit","formData","preventDefault","props","toGeoCode","loadingHandler","render","height","maxWidth","error","isLoading"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Header, Input, Image, Button, Grid, Segment } from 'semantic-ui-react'\n\nclass Search extends React.Component {\n\n  state = {\n    address: \"\",\n    ailment: \"\",\n    miles: \"\",\n\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    const formData = this.state\n    e.preventDefault()\n    this.props.toGeoCode(formData)\n    this.props.loadingHandler()\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 900 }}>\n            <Header as='h2' color='red' textAlign='center'>\n              <Image src='../favicon.ico' />\n              Telemed\n            </Header>\n            {this.props.error && <Segment>No search results found</Segment>}\n            <Form onSubmit={this.onSubmit}>\n              <Input required name=\"address\" onChange={(e) => this.onChange(e)} type=\"text\" placeholder=\"Address\" value={this.state.address}></Input>\n              <Input required name=\"ailment\" onChange={(e) => this.onChange(e)} type=\"text\" placeholder=\"What hurts?\" value={this.state.ailment}></Input>\n              <Input required name=\"miles\" onChange={(e) => this.onChange(e)} type=\"number\" placeholder=\"Miles?\" value={this.state.miles}></Input>\n\n              {!this.props.isLoading && <Button color=\"red\" type=\"submit\" value=\"Get Doctors\">Get Doctors</Button>}\n              {this.props.isLoading && <Button loading color=\"red\" type=\"submit\" value=\"Get Doctors\">Get Doctors</Button>}\n            </Form>\n          </Grid.Column >\n        </Grid>\n\n      </div>\n\n    )\n  }\n}\n\nexport default Search "]},"metadata":{},"sourceType":"module"}