{"ast":null,"code":"import Axios from 'axios';\nexport const createDoctors = async doctors => {\n  const allDocs = [];\n  doctors.forEach(async doctor => {\n    let res = await Axios.get(`http://localhost:3000/geocodes/details/${doctor.place_id}`);\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: {\n          lat,\n          lng\n        }\n      }\n    } = detailedDoctor;\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website\n    };\n    const body = JSON.stringify(doctorHash); // debugger;\n\n    const config = {\n      method: 'post',\n      url: 'http://localhost:3000/doctors',\n      headers: {\n        'Content-Type': 'Application/json',\n        'accepts': 'application/json'\n      },\n      data: body\n    };\n    Axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  });\n  console.log(allDocs);\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/helpers/helpers.js"],"names":["Axios","createDoctors","doctors","allDocs","forEach","doctor","res","get","place_id","detailedDoctor","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","geometry","location","lat","lng","doctorHash","body","JSON","stringify","config","method","headers","then","response","console","log","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAP,IAAmB;AAC9C,QAAMC,OAAO,GAAG,EAAhB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,MAAOC,MAAP,IAAkB;AAChC,QAAIC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACb,0CAAyCF,MAAM,CAACG,QAAS,EAD5C,CAAhB;AAGA,UAAMC,cAAc,GAAGH,GAAG,CAACI,IAAJ,CAASC,MAAhC;AACA,UAAM;AACJC,MAAAA,iBADI;AAEJC,MAAAA,sBAFI;AAGJC,MAAAA,IAHI;AAIJN,MAAAA,QAJI;AAKJO,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJC,MAAAA,OAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAF;AAAOC,UAAAA;AAAP;AADF;AATN,QAYFb,cAZJ;AAcA,UAAMc,UAAU,GAAG;AACjBf,MAAAA,QADiB;AAEjBM,MAAAA,IAFiB;AAGjBF,MAAAA,iBAHiB;AAIjBG,MAAAA,MAJiB;AAKjBG,MAAAA,kBALiB;AAMjBL,MAAAA,sBANiB;AAOjBQ,MAAAA,GAPiB;AAQjBC,MAAAA,GARiB;AASjBN,MAAAA,GATiB;AAUjBC,MAAAA;AAViB,KAAnB;AAcA,UAAMO,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,UAAf,CAAb,CAjCgC,CAmChC;;AACA,UAAMI,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbZ,MAAAA,GAAG,EAAE,+BAFQ;AAGba,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,mBAAW;AAFJ,OAHI;AAObnB,MAAAA,IAAI,EAAGc;AAPM,KAAf;AAUAxB,IAAAA,KAAK,CAAC2B,MAAD,CAAL,CACCG,IADD,CACM,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,SAAL,CAAeK,QAAQ,CAACrB,IAAxB,CAAZ;AACD,KAHD,EAICwB,KAJD,CAIO,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAND;AAWD,GAzDD;AA2DAH,EAAAA,OAAO,CAACC,GAAR,CAAY9B,OAAZ;AACD,CA9DM","sourcesContent":["import Axios from 'axios';\n\nexport const createDoctors = async (doctors) => {\n  const allDocs = [];\n  doctors.forEach(async (doctor) => {\n    let res = await Axios.get(\n      `http://localhost:3000/geocodes/details/${doctor.place_id}`\n    );\n    const detailedDoctor = res.data.result;\n    const {\n      formatted_address,\n      formatted_phone_number,\n      name,\n      place_id,\n      rating,\n      url,\n      website,\n      user_ratings_total,\n      geometry: {\n        location: { lat, lng },\n      },\n    } = detailedDoctor;\n\n    const doctorHash = {\n      place_id,\n      name,\n      formatted_address,\n      rating,\n      user_ratings_total,\n      formatted_phone_number,\n      lat,\n      lng,\n      url,\n      website,\n    };\n\n\n    const body = JSON.stringify(doctorHash);\n\n    // debugger;\n    const config = {\n      method: 'post',\n      url: 'http://localhost:3000/doctors',\n      headers: { \n        'Content-Type': 'Application/json', \n        'accepts': 'application/json'\n      },\n      data : body\n    };\n    \n    Axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n\n\n\n  });\n\n  console.log(allDocs)\n};\n"]},"metadata":{},"sourceType":"module"}