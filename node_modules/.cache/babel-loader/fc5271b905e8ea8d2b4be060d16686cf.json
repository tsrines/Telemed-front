{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Edit.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormField, Label, Input } from 'semantic-ui-react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Edit = props => {\n  const {\n    currentUser,\n    loadUser,\n    patchUser\n  } = props;\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData);\n  };\n\n  const onSubmit = async () => {};\n\n  const initialState = {};\n  console.log(formData);\n  return React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    placeholder: currentUser ? currentUser.firstName : \"John\",\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Last Name\",\n    placeholder: currentUser ? currentUser.firstName : \"John\",\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    placeholder: currentUser ? currentUser.firstName : \"John\",\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    placeholder: currentUser ? currentUser.firstName : \"John\",\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    placeholder: currentUser ? currentUser.firstName : \"John\",\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nEdit.propTypes = {\n  patchUser: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired\n};\nexport default Edit;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Edit.js"],"names":["React","PropTypes","Form","FormField","Label","Input","useEffect","useState","Edit","props","currentUser","loadUser","patchUser","formData","setFormData","firstName","lastName","email","password","password2","onChange","e","target","name","value","console","log","onSubmit","initialState","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormField, Label, Input } from 'semantic-ui-react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Edit = (props) => {\n  const {currentUser, loadUser, patchUser} = props\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n  \n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    \n    console.log(formData);\n  };\n\n  const onSubmit = async () => {};\n  \n  const initialState = {};\n  console.log(formData)\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormField >\n        <Input\n        \n        label='First Name'\n        placeholder={currentUser ? currentUser.firstName : \"John\"}\n        labelPosition='left'\n        type='email'\n          value={formData.firstName}\n          name='firstName'\n          onChange={(e) => onChange(e)}\n        ></Input>\n      </FormField>\n      <FormField >\n        <Input\n        \n        label='Last Name'\n        placeholder={currentUser ? currentUser.firstName : \"John\"}\n        labelPosition='left'\n        type='email'\n          value={formData.firstName}\n          name='firstName'\n          onChange={(e) => onChange(e)}\n        ></Input>\n      </FormField>\n      <FormField >\n        <Input\n        \n        label='First Name'\n        placeholder={currentUser ? currentUser.firstName : \"John\"}\n        labelPosition='left'\n        type='email'\n          value={formData.firstName}\n          name='firstName'\n          onChange={(e) => onChange(e)}\n        ></Input>\n      </FormField>\n      <FormField >\n        <Input\n        \n        label='First Name'\n        placeholder={currentUser ? currentUser.firstName : \"John\"}\n        labelPosition='left'\n        type='email'\n          value={formData.firstName}\n          name='firstName'\n          onChange={(e) => onChange(e)}\n        ></Input>\n      </FormField>\n      <FormField >\n        <Input\n        \n        label='First Name'\n        placeholder={currentUser ? currentUser.firstName : \"John\"}\n        labelPosition='left'\n        type='email'\n          value={formData.firstName}\n          name='firstName'\n          onChange={(e) => onChange(e)}\n        ></Input>\n      </FormField>\n    </Form>\n  );\n};\n\nEdit.propTypes = {\n  patchUser: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}