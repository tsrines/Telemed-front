{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      currentUser: null,\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchedDocs: [],\n      doctorShow: {},\n      doctorSearch: []\n    };\n\n    this.saveSearch = async searchedDoctors => {\n      let user_id = this.currentUser.id;\n      let search_place_id_csv = '';\n      searchedDoctors.forEach(doc => csv += doc.id.toString());\n      const payload = {\n        search_place_id_csv,\n        user_id\n      };\n\n      try {\n        let res = await axios.post(`http://localhost:3000/searches`, payload);\n        let data = res.data;\n        console.log(\"data from saveSearch\", data);\n      } catch (error) {}\n    };\n\n    this.googleSearch = async payload => {\n      const apidocs = await fetchApiDoctors(payload);\n      this.saveSearch(apidocs);\n      this.setState({\n        doctorSearch: apidocs\n      }, () => {\n        this.props.history.push('/search/doctors');\n        this.loadingHandler(false);\n      });\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.map(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n        }\n      });\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.loadingHandler = bool => {\n      this.setState({\n        loading: bool\n      });\n    };\n\n    this.patchUser = async formData => {\n      let res = await axios.patch(`http://localhost:3000/${this.state.currentUser.id}`, formData);\n      let currentUser = res.data;\n      this.setState({\n        currentUser\n      }, () => this.loadingHandler(false));\n    };\n\n    this.getDoctorById = async id => {\n      // debugger\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow\n        }, () => this.loadingHandler(false));\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        }, () => {\n          this.loadingHandler(false);\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.loadUser = async () => {\n      const token = localStorage.token;\n\n      if (token) {\n        //get user info\n        try {\n          let res = await axios.get('http://localhost:3000/auto_login', {\n            headers: {\n              Authorization: token\n            }\n          });\n          this.setState({\n            currentUser: res.data\n          }, () => this.loadingHandler(false));\n        } catch (error) {// alert(error);\n        }\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n\n      this.loadingHandler(false);\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser: currentUser.user\n      }, () => {\n        localStorage.token = currentUser.token; // this.loadUser();\n\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  render() {\n    console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      signUp: this.signUp,\n      logout: this.logout,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        doctors: this.state.doctors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading\n      }, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        loadingHandler: this.loadingHandler,\n        error: this.state.error,\n        loading: this.state.loading,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        loadingHandler: this.loadingHandler,\n        doctorSearch: this.state.doctorSearch,\n        loadUser: this.loadUser,\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        loadUser: this.loadUser,\n        loadingHandler: this.loadingHandler,\n        loading: this.state.loading,\n        getDoctorById: this.getDoctorById,\n        doctorShow: this.state.doctorShow,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/edit\",\n      render: routerProps => React.createElement(Edit, Object.assign({\n        loading: this.state.loading,\n        loadingHandler: this.loadingHandler,\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        loadUser: this.loadUser\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","NavBar","Container","Edit","App","Component","state","loading","currentUser","lat","lng","doctors","searchedDocs","doctorShow","doctorSearch","saveSearch","searchedDoctors","user_id","id","search_place_id_csv","forEach","doc","csv","toString","payload","res","post","data","console","log","error","googleSearch","apidocs","setState","props","history","push","loadingHandler","reviews","place_id","map","photos","isFavorite","favoriteArray","filter","doctor","api_id","match","params","length","favorite","bool","patchUser","formData","patch","getDoctorById","get","err","getDoctors","loadUser","token","localStorage","headers","Authorization","login","errors","alert","setUser","signUp","user","logout","removeItem","componentDidMount","render","routerProps","rate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport DoctorShow from './components/doctorShow/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/profile/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\n\nimport Landing from './components/layout/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nimport NavBar from './components/layout/NavBar';\nimport { Container } from 'semantic-ui-react';\nimport Edit from './components/profile/Edit';\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    currentUser: null,\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchedDocs: [],\n    doctorShow: {},\n    doctorSearch: [],\n  };\n\n  saveSearch = async (searchedDoctors) => {\n    let user_id = this.currentUser.id\n    let search_place_id_csv = ''\n    searchedDoctors.forEach(doc => csv += doc.id.toString() )\n    const payload = {\n      search_place_id_csv,\n      user_id\n\n    }\n    try {\n      let res = await axios.post(`http://localhost:3000/searches`, payload )\n      let data = res.data\n      console.log(\"data from saveSearch\",data)\n    } catch (error) {\n      \n    }\n    \n  }\n\n  googleSearch = async (payload) => {\n    const apidocs = await fetchApiDoctors(payload);\n    this.saveSearch(apidocs)\n\n\n    this.setState({ doctorSearch: apidocs }, () => {\n      this.props.history.push('/search/doctors');\n      this.loadingHandler(false);\n    });\n\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.map(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n      }\n    });\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  loadingHandler = (bool) => {\n    this.setState({ loading: bool });\n  };\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n\n  patchUser = async (formData) => {\n    let res = await axios.patch(\n      `http://localhost:3000/${this.state.currentUser.id}`,\n      formData\n    );\n    let currentUser = res.data;\n    this.setState({ currentUser }, () => this.loadingHandler(false));\n  };\n  getDoctorById = async (id) => {\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow }, () => this.loadingHandler(false));\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data }, () => {\n        this.loadingHandler(false);\n      });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  loadUser = async () => {\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        this.setState({ currentUser: res.data }, () =>\n          this.loadingHandler(false)\n        );\n      } catch (error) {\n        // alert(error);\n      }\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n    this.loadUser();\n  }\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n    this.loadingHandler(false);\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n    this.loadingHandler(false);\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser: currentUser.user,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        // this.loadUser();\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.setState(\n      {\n        currentUser: null,\n      },\n      () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      }\n    );\n  };\n\n  render() {\n    console.log('THIS.PROPS FROM APP', this.props);\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <>\n        <Container>\n          <NavBar\n            signUp={this.signUp}\n            logout={this.logout}\n            currentUser={this.state.currentUser}\n          />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route\n              exact\n              path='/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                  doctors={this.state.doctors}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/signup'\n              render={(routerProps) => (\n                <SignUp\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  {...routerProps}\n                  setUser={this.setUser}\n                  signUp={this.signUp}\n                />\n              )}\n            />\n\n            <Route\n              exact\n              path='/login'\n              render={(routerProps) => (\n                <Login\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  {...routerProps}\n                  setUser={this.setUser}\n                  login={this.login}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search'\n              render={(routerProps) => (\n                <Search\n                  loadingHandler={this.loadingHandler}\n                  error={this.state.error}\n                  loading={this.state.loading}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  googleSearch={this.googleSearch}\n                  favorite={this.favorite}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/search/doctors'\n              render={(routerProps) => (\n                <Doctors\n                  loadingHandler={this.loadingHandler}\n                  doctorSearch={this.state.doctorSearch}\n                  loadUser={this.loadUser}\n                  getDoctorById={this.getDoctorById}\n                  currentUser={this.state.currentUser}\n                  loading={this.state.loading}\n                  getDoctors={this.getDoctors}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/doctors/:id'\n              render={(routerProps) => (\n                <DoctorShow\n                  loadUser={this.loadUser}\n                  loadingHandler={this.loadingHandler}\n                  loading={this.state.loading}\n                  getDoctorById={this.getDoctorById}\n                  doctorShow={this.state.doctorShow}\n                  rate={this.rate}\n                  doctors={this.state.doctors}\n                  favorite={this.state.favorite}\n                  isFavorite={this.isFavorite}\n                  currentUser={this.state.currentUser}\n                  {...routerProps}\n                  favorite={this.favorite}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile'\n              render={(routerProps) => (\n                <Profile\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  currentUser={this.state.currentUser}\n                  doctors={this.state.doctors}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/profile/edit'\n              render={(routerProps) => (\n                <Edit\n                  loading={this.state.loading}\n                  loadingHandler={this.loadingHandler}\n                  patchUser={this.patchUser}\n                  currentUser={this.state.currentUser}\n                  loadUser={this.loadUser}\n                  {...routerProps}\n                />\n              )}\n            />\n          </Switch>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}