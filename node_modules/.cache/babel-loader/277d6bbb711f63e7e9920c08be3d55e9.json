{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/DoctorShow.js\";\nimport React from 'react';\nimport { Divider, Image, Container } from 'semantic-ui-react';\nimport axios from 'axios';\nimport ShowMenu from './ShowMenu';\n\nclass DoctorShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: 0\n    };\n\n    this.isFavorite = () => {\n      const favorite = this.props.currentUser.doctors.find(doc => doc.id === parseInt(this.props.match.params.id));\n      if (favorite) this.setState({\n        favorite: 1\n      });\n    };\n\n    this.postFavorite = async () => {\n      const favoriteObject = {\n        doctor_id: this.props.match.params.id,\n        user_id: this.props.currentUser.id\n      };\n\n      try {\n        let res = await axios.post(`http://localhost:3000/favorites`, favoriteObject);\n        this.setState({\n          favorite: 1,\n          id: res.data.id\n        }, () => {\n          this.props.loadUser();\n        });\n        console.log(res.data);\n      } catch (error) {}\n    };\n\n    this.deleteFavorite = async () => {\n      let favorite = this.props.currentUser.favorites.find(favorite => favorite.doctor_id === parseInt(this.props.match.params.id));\n\n      if (favorite === -1) {\n        this.setState({\n          favorite: 0\n        });\n      }\n\n      try {\n        let res = await axios.delete(`http://localhost:3000/favorites/${favorite.id}`);\n        console.log('res.data from deletefavorite', res.data);\n        this.setState({\n          favorite: 0,\n          id: null\n        }, () => {\n          this.props.loadUser();\n        });\n      } catch (err) {\n        console.log('error', err);\n      }\n\n      this.props.loadingHandler();\n      console.log('got here in delete');\n    };\n\n    this.rate = (e, {\n      rating\n    }) => {\n      if (rating === 0) {\n        this.deleteFavorite();\n      } else {\n        this.postFavorite();\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getDoctorById(parseInt(this.props.match.params.id));\n    await this.props.loadUser();\n    this.isFavorite();\n  }\n\n  render() {\n    console.log('DOCTOR SHOW THIS.STATE: ', this.props); // debugger\n\n    const {\n      reviews,\n      photos,\n      photo\n    } = this.props.doctorShow;\n    return React.createElement(Container, {\n      style: {\n        padding: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Image, {\n      centered: true,\n      size: \"large\",\n      src: photo && photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ShowMenu, {\n      loading: this.props.loading,\n      favorite: this.state.favorite,\n      rate: this.rate,\n      doctor: this.props.doctorShow,\n      reviews: reviews,\n      photos: photos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DoctorShow;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/doctorShow/DoctorShow.js"],"names":["React","Divider","Image","Container","axios","ShowMenu","DoctorShow","Component","state","favorite","isFavorite","props","currentUser","doctors","find","doc","id","parseInt","match","params","setState","postFavorite","favoriteObject","doctor_id","user_id","res","post","data","loadUser","console","log","error","deleteFavorite","favorites","delete","err","loadingHandler","rate","e","rating","componentDidMount","getDoctorById","render","reviews","photos","photo","doctorShow","padding","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Divider, Image, Container } from 'semantic-ui-react';\nimport axios from 'axios';\n\nimport ShowMenu from './ShowMenu';\n\nclass DoctorShow extends React.Component {\n  state = {\n    favorite: 0,\n  };\n\n  isFavorite = () => {\n    const favorite = this.props.currentUser.doctors.find(\n      (doc) => doc.id === parseInt(this.props.match.params.id)\n    );\n    if (favorite) this.setState({ favorite: 1 });\n  };\n\n  async componentDidMount() {\n    await this.props.getDoctorById(parseInt(this.props.match.params.id));\n    await this.props.loadUser();\n    this.isFavorite();\n  }\n\n  postFavorite = async () => {\n    const favoriteObject = {\n      doctor_id: this.props.match.params.id,\n      user_id: this.props.currentUser.id,\n    };\n    try {\n      let res = await axios.post(\n        `http://localhost:3000/favorites`,\n        favoriteObject\n      );\n      this.setState({ favorite: 1, id: res.data.id }, () => {\n        this.props.loadUser();\n      });\n      console.log(res.data);\n    } catch (error) {}\n  };\n\n  deleteFavorite = async () => {\n    let favorite = this.props.currentUser.favorites.find(\n      (favorite) => favorite.doctor_id === parseInt(this.props.match.params.id)\n    );\n    if (favorite === -1) {\n      this.setState({ favorite: 0 });\n    }\n    try {\n      let res = await axios.delete(\n        `http://localhost:3000/favorites/${favorite.id}`\n      );\n      console.log('res.data from deletefavorite', res.data);\n      this.setState({ favorite: 0, id: null }, () => {\n        this.props.loadUser();\n      });\n    } catch (err) {\n      console.log('error', err);\n    }\n    this.props.loadingHandler()\n    console.log('got here in delete');\n  };\n\n  rate = (e, { rating }) => {\n    if (rating === 0) {\n      this.deleteFavorite();\n    } else {\n      this.postFavorite();\n    }\n  };\n\n  render() {\n    console.log('DOCTOR SHOW THIS.STATE: ', this.props);\n    // debugger\n    const { reviews, photos, photo } = this.props.doctorShow;\n\n    return (\n      <Container style={{ padding: '3rem' }}>\n        <Image centered size='large' src={photo && photo} />\n        {/* <About  /> */}\n        <Divider hidden />\n\n        <ShowMenu\n          loading={this.props.loading}\n          favorite={this.state.favorite}\n          rate={this.rate}\n          doctor={this.props.doctorShow}\n          reviews={reviews}\n          photos={photos}\n        />\n\n\n      </Container>\n    );\n  }\n}\n\nexport default DoctorShow;\n"]},"metadata":{},"sourceType":"module"}