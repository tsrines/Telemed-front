{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorCard.js\";\nimport React from 'react';\nimport { Card, Image, Rating } from 'semantic-ui-react';\nimport { withRouter } from 'react-router';\nimport defaultphoto from '../../src/defaultphoto.png';\n\nconst DoctorCard = props => {\n  const {\n    id,\n    name,\n    photos,\n    formatted_address,\n    rating,\n    photo\n  } = props.doctor;\n  return React.createElement(Card, {\n    inverted: true,\n    onClick: e => props.history.push(`/doctors/${id}`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, name)), photo && React.createElement(Image, {\n    fluid: true,\n    alt: \"Practice Image\",\n    src: photo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), !photo && React.createElement(Image, {\n    fluid: true,\n    centered: true,\n    alt: \"Practice Image\",\n    src: defaultphoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, formatted_address, rating && React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    disabled: true,\n    rating: rating,\n    maxRating: 5,\n    icon: \"star\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(DoctorCard);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorCard.js"],"names":["React","Card","Image","Rating","withRouter","defaultphoto","DoctorCard","props","id","name","photos","formatted_address","rating","photo","doctor","e","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,iBAApB;AAAuCC,IAAAA,MAAvC;AAA+CC,IAAAA;AAA/C,MAAyDN,KAAK,CAACO,MAArE;AAEA,SACE,oBAAC,IAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,OAAO,EAAGC,CAAD,IAAOR,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAoB,YAAWT,EAAG,EAAlC,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,IAAd,CADF,CADF,EAIGI,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,GAAG,EAAC,gBAAjB;AAAkC,IAAA,GAAG,EAAEA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJZ,EAKG,CAACA,KAAD,IAAU,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,QAAQ,MAArB;AAAsB,IAAA,GAAG,EAAC,gBAA1B;AAA2C,IAAA,GAAG,EAAER,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALb,EAME,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,iBADH,EAEGC,MAAM,IACL,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,MAAM,EAAEA,MAAzB;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAA+C,IAAA,IAAI,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CANF,CADF;AAiBD,CApBD;;AAsBA,eAAeR,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Card, Image, Rating } from 'semantic-ui-react';\nimport { withRouter } from 'react-router';\nimport defaultphoto from '../../src/defaultphoto.png';\n\nconst DoctorCard = (props) => {\n  const { id, name, photos, formatted_address, rating, photo } = props.doctor;\n\n  return (\n    <Card  inverted onClick={(e) => props.history.push(`/doctors/${id}`)}>\n      <Card.Content >\n        <Card.Header>{name}</Card.Header>\n      </Card.Content>\n      {photo && <Image fluid alt='Practice Image' src={photo} />}\n      {!photo && <Image fluid centered alt='Practice Image' src={defaultphoto}/>}\n      <Card.Content>\n        {formatted_address}\n        {rating && (\n          <Card.Meta>\n            <Rating disabled rating={rating} maxRating={5} icon='star' />\n          </Card.Meta>\n        )}\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default withRouter(DoctorCard);\n"]},"metadata":{},"sourceType":"module"}