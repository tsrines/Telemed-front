{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Profile.js\";\nimport React from 'react';\nimport { Header, Divider, Button, Container, Form, Input, Grid, Card } from 'semantic-ui-react';\nimport DoctorCard from './DoctorCard';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.profileDoctors = () => {\n      if (this.props.currentUser.doctors) {\n        return this.props.currentUser.doctors.map(doc => React.createElement(DoctorCard, {\n          key: doc.id,\n          doctor: doc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.loadUser(); // this.setForm();\n  }\n\n  render() {\n    const currentUser = this.props;\n    const {\n      email,\n      password,\n      passwordConfirmation,\n      firstName,\n      lastName,\n      address\n    } = currentUser;\n    console.log('THIS.STATE PROFILE: ', firstName);\n    return React.createElement(React.Fragment, null, React.createElement(Grid, {\n      style: {\n        padding: '2em'\n      },\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      text: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, currentUser && React.createElement(Header, {\n      as: \"h2\",\n      display: \"flex\",\n      textAlign: \"center\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, email ? email : ''), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Email\",\n      name: \"email\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Password Confirmation\",\n      name: \"passwordConfirmation\",\n      type: \"password\",\n      value: this.state.passwordConfirmation || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"Password Confirmation\",\n      name: \"passwordConfirmation\",\n      type: \"password\",\n      value: this.state.passwordConfirmation || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      type: \"text\",\n      value: this.state.firstName || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      type: \"text\",\n      value: this.state.firstName || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      type: \"text\",\n      value: this.state.lastName || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      type: \"text\",\n      value: this.state.lastName || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Input, {\n      disabled: true,\n      placeholder: \"Address\",\n      name: \"address\",\n      type: \"text\",\n      value: this.state.address || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : React.createElement(Input, {\n      placeholder: \"Address\",\n      name: \"address\",\n      type: \"text\",\n      value: this.state.address || '',\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.isDisabled ? React.createElement(Button, {\n      disabled: true,\n      color: \"red\",\n      onClick: this.submitEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Submit\") : React.createElement(Button, {\n      color: \"red\",\n      onClick: this.submitEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Submit\"), this.state.isDisabled ? React.createElement(Button, {\n      color: \"red\",\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Edit\") : React.createElement(Button, {\n      color: \"black\",\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Nevermind\")))), this.props.currentUser && React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      display: \"flex\",\n      textAlign: \"center\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Favorite Doctors\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Card.Group, {\n      style: {\n        overflow: 'auto',\n        maxHeight: '52em'\n      },\n      display: \"flex\",\n      \"justify-content\": \"center\",\n      itemsPerRow: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.profileDoctors()))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/Profile.js"],"names":["React","Header","Divider","Button","Container","Form","Input","Grid","Card","DoctorCard","Profile","Component","state","onChange","e","setState","target","name","value","profileDoctors","props","currentUser","doctors","map","doc","id","history","push","componentDidMount","loadUser","render","email","password","passwordConfirmation","firstName","lastName","address","console","log","padding","isDisabled","submitEdit","edit","overflow","maxHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Header,\n  Divider,\n  Button,\n  Container,\n  Form,\n  Input,\n  Grid,\n  Card,\n} from 'semantic-ui-react';\n\nimport DoctorCard from './DoctorCard';\n\nclass Profile extends React.Component {\n  state = {\n    \n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  profileDoctors = () => {\n    if (this.props.currentUser.doctors) {\n      return this.props.currentUser.doctors.map((doc) => (\n        <DoctorCard key={doc.id} doctor={doc} />\n      ));\n    } else {\n      this.props.history.push('/login');\n    }\n  };\n\n  async componentDidMount() {\n    await this.props.loadUser();\n    // this.setForm();\n  }\n\n  render() {\n    const currentUser = this.props;\n    const {\n      email,\n      password,\n      passwordConfirmation,\n      firstName,\n      lastName,\n      address,\n    } = currentUser;\n    console.log('THIS.STATE PROFILE: ', firstName);\n\n    return (\n      <>\n        <Grid style={{padding: '2em'}} columns={2}>\n          <Grid.Column>\n            <Container text textAlign='center'>\n              {currentUser && (\n                <Header as='h2' display='flex' textAlign='center' color='red'>\n                  {email ? email : ''}\n                </Header>\n              )}\n              <Divider />\n              <Form width={6}>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='Email'\n                    name='email'\n                    type='text'\n                    value={this.state.email}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='Email'\n                    name='email'\n                    type='text'\n                    value={this.state.email}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='Password'\n                    name='password'\n                    type='password'\n                    value={this.state.password}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='Password'\n                    name='password'\n                    type='password'\n                    value={this.state.password}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='Password Confirmation'\n                    name='passwordConfirmation'\n                    type='password'\n                    value={this.state.passwordConfirmation || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='Password Confirmation'\n                    name='passwordConfirmation'\n                    type='password'\n                    value={this.state.passwordConfirmation || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='First Name'\n                    name='firstName'\n                    type='text'\n                    value={this.state.firstName || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='First Name'\n                    name='firstName'\n                    type='text'\n                    value={this.state.firstName || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='Last Name'\n                    name='lastName'\n                    type='text'\n                    value={this.state.lastName || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='Last Name'\n                    name='lastName'\n                    type='text'\n                    value={this.state.lastName || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Input\n                    disabled\n                    placeholder='Address'\n                    name='address'\n                    type='text'\n                    value={this.state.address || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                ) : (\n                  <Input\n                    placeholder='Address'\n                    name='address'\n                    type='text'\n                    value={this.state.address || ''}\n                    onChange={(e) => this.onChange(e)}\n                  ></Input>\n                )}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? (\n                  <Button disabled color='red' onClick={this.submitEdit}>\n                    Submit\n                  </Button>\n                ) : (\n                  <Button color='red' onClick={this.submitEdit}>\n                    Submit\n                  </Button>\n                )}\n                {this.state.isDisabled ? (\n                  <Button color='red' onClick={this.edit}>\n                    Edit\n                  </Button>\n                ) : (\n                  <Button color='black' onClick={this.edit}>\n                    Nevermind\n                  </Button>\n                )}\n              </Form>\n            </Container>\n          </Grid.Column>\n          {this.props.currentUser && (\n            <Grid.Column>\n              <Header as='h2' display='flex' textAlign='center' color='red'>\n                Favorite Doctors\n              </Header>\n              <Divider />\n              <Card.Group\n                style={{ overflow: 'auto', maxHeight: '52em' }}\n                display='flex'\n                justify-content='center'\n                itemsPerRow={2}\n              >\n                {this.profileDoctors()}\n              </Card.Group>\n            </Grid.Column>\n          )}\n        </Grid>\n      </>\n    );\n  }\n}\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}