{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Card,Grid}from'semantic-ui-react';import DoctorCard from'../components/DoctorCard';var Doctors=/*#__PURE__*/function(_React$Component){_inherits(Doctors,_React$Component);function Doctors(){var _getPrototypeOf2;var _this;_classCallCheck(this,Doctors);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Doctors)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.displayDoctors=function(){if(_this.props.doctors){return _this.props.doctors.map(function(doctor){return React.createElement(DoctorCard,{currentUser:_this.props.currentUser,getDoctorById:_this.props.getDoctorById,key:doctor.id,doctor:doctor,loading:_this.props.loading});});}};_this.displayLoading=function(){return React.createElement(\"h1\",null,\"Loading...\");};return _this;}_createClass(Doctors,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.props.getDoctors();case 2:case\"end\":return _context.stop();}}},_callee,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){console.log('this.props from doctorsjs',this.props);return React.createElement(\"div\",null,React.createElement(Grid,{container:true,textAlign:\"center\",style:{height:'100vh'},verticalAlign:\"middle\"},React.createElement(\"br\",null),React.createElement(Card.Group,{style:{maxHeight:'35em'},display:\"flex\",\"justify-content\":\"center\",itemsPerRow:3},this.displayDoctors())));}}]);return Doctors;}(React.Component);export default Doctors;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/containers/Doctors.js"],"names":["React","Card","Grid","DoctorCard","Doctors","displayDoctors","props","doctors","map","doctor","currentUser","getDoctorById","id","loading","displayLoading","getDoctors","console","log","height","maxHeight","Component"],"mappings":"w9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,GAEMC,CAAAA,O,+YACJC,c,CAAiB,UAAM,CACrB,GAAI,MAAKC,KAAL,CAAWC,OAAf,CAAwB,CACtB,MAAO,OAAKD,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,SAACC,MAAD,QAC5B,qBAAC,UAAD,EACE,WAAW,CAAE,MAAKH,KAAL,CAAWI,WAD1B,CAEE,aAAa,CAAE,MAAKJ,KAAL,CAAWK,aAF5B,CAGE,GAAG,CAAEF,MAAM,CAACG,EAHd,CAIE,MAAM,CAAEH,MAJV,CAKE,OAAO,CAAE,MAAKH,KAAL,CAAWO,OALtB,EAD4B,EAAvB,CAAP,CASD,CACF,C,OAEDC,c,CAAiB,UAAM,CACrB,MAAO,4CAAP,CACD,C,uTAGO,MAAKR,KAAL,CAAWS,UAAX,E,gNAGC,CACPC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyC,KAAKX,KAA9C,EACA,MACE,gCACE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,QAFZ,CAGE,KAAK,CAAE,CAAEY,MAAM,CAAE,OAAV,CAHT,CAIE,aAAa,CAAC,QAJhB,EAME,8BANF,CAOE,oBAAC,IAAD,CAAM,KAAN,EACE,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CADT,CAEE,OAAO,CAAC,MAFV,CAGE,kBAAgB,QAHlB,CAIE,WAAW,CAAE,CAJf,EAMG,KAAKd,cAAL,EANH,CAPF,CADF,CADF,CAoBD,C,qBA7CmBL,KAAK,CAACoB,S,EAgD5B,cAAehB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport DoctorCard from '../components/DoctorCard';\n\nclass Doctors extends React.Component {\n  displayDoctors = () => {\n    if (this.props.doctors) {\n      return this.props.doctors.map((doctor) => (\n        <DoctorCard\n          currentUser={this.props.currentUser}\n          getDoctorById={this.props.getDoctorById}\n          key={doctor.id}\n          doctor={doctor}\n          loading={this.props.loading}\n        />\n      ));\n    }\n  };\n\n  displayLoading = () => {\n    return <h1>Loading...</h1>;\n  };\n\n  async componentDidMount() {\n    await this.props.getDoctors();\n  }\n\n  render() {\n    console.log('this.props from doctorsjs', this.props);\n    return (\n      <div>\n        <Grid\n          container\n          textAlign='center'\n          style={{ height: '100vh' }}\n          verticalAlign='middle'\n        >\n          <br></br>\n          <Card.Group\n            style={{ maxHeight: '35em' }}\n            display='flex'\n            justify-content='center'\n            itemsPerRow={3}\n          >\n            {this.displayDoctors()}\n          </Card.Group>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Doctors;\n"]},"metadata":{},"sourceType":"module"}