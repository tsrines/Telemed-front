{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nexport const fetchApiDoctors = async payload => {\n  try {\n    let res = await axios.post(`http://localhost:3000/doctors`, payload);\n    return res;\n  } catch (err) {\n    console.log('This is your error:', err);\n    throw err;\n  }\n};\nexport const createDoctors = async (incomingDoctors, query) => {\n  const dockers = [];\n  await incomingDoctors.forEach(async doctor => {\n    let finalDoc;\n    let createdReviews;\n    let createdPhotos;\n\n    try {\n      finalDoc = await createDoctor(doctor, query);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    } // try {\n    //   createdReviews = await createReviews(finalDoc);\n    //   finalDoc.reviews = createdReviews;\n    // } catch (error) {}\n    // try {\n    //   createdPhotos = await createPhotos(finalDoc);\n    //   finalDoc.photos = createdPhotos;\n    // } catch (error) {}\n\n\n    dockers.push(finalDoc);\n  });\n  return dockers;\n};\n\nconst createDoctor = async singleDoctor => {\n  let detailedDoctor;\n  let doctorFromBackend;\n\n  try {\n    let res = await axios.get(`http://localhost:3000/geocodes/details/${singleDoctor.place_id}`);\n    detailedDoctor = res.data.result;\n  } catch (err) {\n    console.log(err, 'FROM CREATEDOCTORS HELPER');\n    throw err;\n  }\n\n  const {\n    formatted_address,\n    formatted_phone_number,\n    name,\n    place_id,\n    rating,\n    url,\n    website,\n    user_ratings_total,\n    reviews,\n    photos,\n    geometry: {\n      location: {\n        lat,\n        lng\n      }\n    }\n  } = detailedDoctor; // ES6 key value assignment operator\n\n  const doctorHash = {\n    place_id,\n    name,\n    formatted_address,\n    rating,\n    user_ratings_total,\n    formatted_phone_number,\n    lat,\n    lng,\n    url,\n    website,\n    photos,\n    reviews\n  };\n\n  try {\n    let res = await axios.post('http://localhost:3000/doctors', doctorHash);\n    doctorFromBackend = res.data;\n  } catch (error) {\n    console.log('fixed?');\n  }\n\n  return doctorFromBackend;\n};\n\nexport const createReviews = async (place_id, doctor_id) => {\n  const reviewPayload = {\n    place_id,\n    doctor_id\n  };\n\n  try {\n    let res = await axios.post('http://localhost:3000/reviews', reviewPayload);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const createPhotos = async doctorFromBackend => {\n  const photoHash = {\n    doctor_id: doctorFromBackend.id,\n    doctor_reference: doctorFromBackend.place_id\n  };\n  let data;\n\n  try {\n    let res = await axios.post(`http://localhost:3000/photos`, photoHash);\n    data = res.data;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n\n  return data;\n};","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/helpers/helpers.js"],"names":["React","axios","fetchApiDoctors","payload","res","post","err","console","log","createDoctors","incomingDoctors","query","dockers","forEach","doctor","finalDoc","createdReviews","createdPhotos","createDoctor","push","singleDoctor","detailedDoctor","doctorFromBackend","get","place_id","data","result","formatted_address","formatted_phone_number","name","rating","url","website","user_ratings_total","reviews","photos","geometry","location","lat","lng","doctorHash","error","createReviews","doctor_id","reviewPayload","createPhotos","photoHash","id","doctor_reference"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport const fetchApiDoctors = async (payload) => {\n  try {\n    let res = await axios.post(`http://localhost:3000/doctors`, payload);\n    return res;\n  } catch (err) {\n    console.log('This is your error:', err);\n    throw err;\n  }\n};\n\nexport const createDoctors = async (incomingDoctors, query) => {\n  const dockers = [];\n  await incomingDoctors.forEach(async (doctor) => {\n    let finalDoc;\n    let createdReviews;\n    let createdPhotos;\n    try {\n      finalDoc = await createDoctor(doctor, query);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n    // try {\n    //   createdReviews = await createReviews(finalDoc);\n    //   finalDoc.reviews = createdReviews;\n    // } catch (error) {}\n    // try {\n    //   createdPhotos = await createPhotos(finalDoc);\n    //   finalDoc.photos = createdPhotos;\n    // } catch (error) {}\n\n    dockers.push(finalDoc);\n  });\n\n  return dockers;\n};\n\nconst createDoctor = async (singleDoctor) => {\n  let detailedDoctor;\n  let doctorFromBackend;\n  try {\n    let res = await axios.get(\n      `http://localhost:3000/geocodes/details/${singleDoctor.place_id}`\n    );\n    detailedDoctor = res.data.result;\n  } catch (err) {\n    console.log(err, 'FROM CREATEDOCTORS HELPER');\n    throw err;\n  }\n\n  const {\n    formatted_address,\n    formatted_phone_number,\n    name,\n    place_id,\n    rating,\n    url,\n    website,\n    user_ratings_total,\n    reviews,\n    photos,\n    geometry: {\n      location: { lat, lng },\n    },\n  } = detailedDoctor;\n\n  // ES6 key value assignment operator\n\n  const doctorHash = {\n    place_id,\n    name,\n    formatted_address,\n    rating,\n    user_ratings_total,\n    formatted_phone_number,\n    lat,\n    lng,\n    url,\n    website,\n    photos,\n    reviews,\n  };\n\n  try {\n    let res = await axios.post('http://localhost:3000/doctors', doctorHash);\n    doctorFromBackend = res.data;\n  } catch (error) {\n    console.log('fixed?');\n  }\n  return doctorFromBackend;\n};\n\nexport const createReviews = async (place_id, doctor_id) => {\n  const reviewPayload = {\n    place_id,\n    doctor_id,\n  };\n\n  try {\n    let res = await axios.post('http://localhost:3000/reviews', reviewPayload);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createPhotos = async (doctorFromBackend) => {\n  const photoHash = {\n    doctor_id: doctorFromBackend.id,\n    doctor_reference: doctorFromBackend.place_id,\n  };\n  let data;\n  try {\n    let res = await axios.post(`http://localhost:3000/photos`, photoHash);\n    data = res.data;\n  } catch (err) {\n    console.log(err);\n    throw err;\n  }\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}