{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Edit.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormField, Label, Input } from 'semantic-ui-react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Edit = props => {\n  const {\n    currentUser,\n    loadUser,\n    patchUser\n  } = props;\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData);\n  };\n\n  const onSubmit = async () => {};\n\n  const initialState = {};\n  console.log(formData);\n  return React.createElement(Form, {\n    display: \"flex\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"First Name\",\n    placeholder: currentUser ? currentUser.firstName : 'John',\n    labelPosition: \"left\",\n    type: \"text\",\n    value: formData.firstName,\n    name: \"firstName\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Last Name\",\n    placeholder: currentUser ? currentUser.lastName : 'Doe',\n    labelPosition: \"left\",\n    type: \"text\",\n    value: formData.lastName,\n    name: \"lastName\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Email\",\n    placeholder: currentUser ? currentUser.email : 'Email...',\n    labelPosition: \"left\",\n    type: \"email\",\n    value: formData.lastName,\n    name: \"email\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Input, {\n    error: true,\n    label: \"Address\",\n    placeholder: currentUser ? currentUser.address ? currentUser.address : '123 Main Street' : null,\n    labelPosition: \"left\",\n    type: \"text\",\n    value: formData.address,\n    name: \"address\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Password\",\n    placeholder: \"Password...\",\n    labelPosition: \"left\",\n    type: \"password\",\n    value: formData.password,\n    name: \"password\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(FormField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Password Confirmation\",\n    placeholder: \"Password Confirmation\",\n    labelPosition: \"left\",\n    type: \"password\",\n    value: formData.password2,\n    name: \"password2\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nEdit.propTypes = {\n  patchUser: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired\n};\nexport default Edit;","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/profile/Edit.js"],"names":["React","PropTypes","Form","FormField","Label","Input","useEffect","useState","Edit","props","currentUser","loadUser","patchUser","formData","setFormData","firstName","lastName","email","password","password2","onChange","e","target","name","value","console","log","onSubmit","initialState","address","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormField, Label, Input } from 'semantic-ui-react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Edit = (props) => {\n  const { currentUser, loadUser, patchUser } = props;\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  useEffect(() => {\n    loadUser();\n  }, [loadUser]);\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    console.log(formData);\n  };\n\n  const onSubmit = async () => {};\n\n  const initialState = {};\n  console.log(formData);\n  return (\n    <Form display='flex' onSubmit={onSubmit}>\n      <FormField>\n        <Input\n          label='First Name'\n          placeholder={currentUser ? currentUser.firstName : 'John'}\n          labelPosition='left'\n          type='text'\n          value={formData.firstName}\n          name='firstName'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n      <FormField>\n        <Input\n          label='Last Name'\n          placeholder={currentUser ? currentUser.lastName : 'Doe'}\n          labelPosition='left'\n          type='text'\n          value={formData.lastName}\n          name='lastName'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n      <FormField>\n        <Input\n          label='Email'\n          placeholder={currentUser ? currentUser.email : 'Email...'}\n          labelPosition='left'\n          type='email'\n          value={formData.lastName}\n          name='email'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n      <FormField>\n        <Input\n          error\n          label='Address'\n          placeholder={currentUser ? currentUser.address ? currentUser.address : '123 Main Street' : null}\n          labelPosition='left'\n          type='text'\n          value={formData.address}\n          name='address'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n      <FormField>\n        <Input\n          label='Password'\n          placeholder='Password...'\n          labelPosition='left'\n          type='password'\n          value={formData.password}\n          name='password'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n      <FormField>\n        <Input\n          label='Password Confirmation'\n          placeholder='Password Confirmation'\n          labelPosition='left'\n          type='password'\n          value={formData.password2}\n          name='password2'\n          onChange={onChange}\n        ></Input>\n      </FormField>\n    </Form>\n  );\n};\n\nEdit.propTypes = {\n  patchUser: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}