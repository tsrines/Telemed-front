{"ast":null,"code":"var _jsxFileName = \"/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { Button, Image } from 'semantic-ui-react';\nimport DoctorShow from './components/DoctorShow';\nimport Doctors from './containers/Doctors';\nimport Profile from './components/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport { fetchApiDoctors, createReviews, createPhotos } from './helpers/helpers';\nimport axios from 'axios';\nimport Landing from './components/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      favorite: 0,\n      currentUser: null,\n      lat: 0,\n      lng: 0,\n      doctors: [],\n      searchedDocs: [],\n      error: false,\n      apiDoctors: [],\n      users: [],\n      doctorShow: {},\n      doctorSearch: []\n    };\n\n    this.googleSearch = async payload => {\n      const apidocs = await fetchApiDoctors(payload);\n      this.setState({\n        doctorSearch: apidocs\n      }, () => console.log('this.state.doctorSearch', this.state.doctorSearch));\n      const docs = [];\n      await apidocs.forEach(async doc => {\n        let reviews = await createReviews(doc.place_id, doc.id);\n\n        if (reviews) {\n          doc.reviews = reviews;\n        }\n      });\n      await apidocs.forEach(async doc => {\n        let photos = await createPhotos(doc.place_id, doc.id);\n\n        if (photos) {\n          doc.photos = photos;\n          docs.push(doc);\n          console.log(docs);\n        }\n      });\n    };\n\n    this.isFavorite = () => {\n      let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id);\n\n      if (favoriteArray.length > 0) {\n        this.setState({\n          favorite: 1\n        });\n      }\n    };\n\n    this.heart = doctor => {\n      console.log(doctor);\n      console.log('got here in heart');\n    };\n\n    this.unHeart = favorite => {\n      // debugger\n      // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n      fetch(`https://cryptic-island-45793.herokuapp.com/favorites/${favorite.id}`, {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(data => {\n        let favorites = this.state.currentUser.favorites.filter(favorite => favorite.id !== data.id);\n        let doctors = this.state.currentUser.doctors.filter(doctor => doctor.api_id !== data.api_id);\n        this.setState({ ...this.state,\n          favorite: 0,\n          doctors: [data.doctor, ...this.state.doctors],\n          currentUser: { ...this.state.currentUser,\n            favorites: favorites,\n            doctors: doctors\n          }\n        });\n      });\n    };\n\n    this.favorite = dunno => {\n      console.log('got here in favorite');\n    };\n\n    this.userProfile = () => {\n      let id = this.state.currentUser.id;\n      fetch(`https://cryptic-island-45793.herokuapp.com/users/${id}`).then(resp => resp.json()).then(data => {\n        this.setState({ ...this.state,\n          currentUser: { ...this.state.currentUser,\n            doctors: data.doctors\n          }\n        }, () => {\n          this.props.history.push('/profile');\n        });\n      });\n    };\n\n    this.isResolved = () => {\n      if (this.state.apiDoctors.length < 1) {\n        this.setState({\n          error: true\n        });\n      } else {\n        this.setState({\n          error: false\n        });\n      }\n    };\n\n    this.loadingHandler = () => {\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.patchUser = userData => {\n      fetch('https://cryptic-island-45793.herokuapp.com' + `/users/${this.state.currentUser.id}`, {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          accepts: 'application/json'\n        },\n        body: JSON.stringify({\n          email: userData.email,\n          password: userData.password,\n          password_confirmation: userData.passwordConfirmation,\n          first_name: userData.firstName,\n          last_name: userData.lastName,\n          address: userData.address\n        })\n      }).then(resp => resp.json()).then(data => this.setState({ ...this.state,\n        currentUser: {\n          doctors: data.doctors,\n          favorites: data.favorites,\n          id: data.id,\n          email: data.email,\n          address: data.address,\n          password: data.password,\n          passwordConfirmation: data.password_confirmation,\n          firstName: data.first_name,\n          lastName: data.last_name\n        }\n      }));\n    };\n\n    this.getDoctorById = async id => {\n      // debugger\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n        let doctorShow = res.data;\n        this.setState({\n          doctorShow,\n          loading: false\n        });\n      } catch (err) {\n        console.log(err);\n        throw err;\n      }\n    };\n\n    this.getDoctors = async () => {\n      try {\n        let res = await axios.get(`http://localhost:3000/doctors`);\n        this.setState({\n          doctors: res.data\n        });\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.searchButton = () => {\n      if (this.state.currentUser) {\n        this.props.history.push('/search');\n      } else {\n        alert('Please log in before searching');\n      }\n    };\n\n    this.login = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/login`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n        throw err;\n      }\n    };\n\n    this.signUp = async formData => {\n      try {\n        let res = await axios.post(`http://localhost:3000/users`, formData);\n\n        if (res.errors) {\n          alert(res.errors);\n        } else {\n          let currentUser = res.data;\n          this.setUser(currentUser);\n        }\n      } catch (err) {\n        alert(err);\n      }\n    };\n\n    this.setUser = currentUser => {\n      this.setState({\n        currentUser\n      }, () => {\n        localStorage.token = currentUser.token;\n        this.props.history.push('/search');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // this.getDoctors();\n    const token = localStorage.token;\n\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: {\n            Authorization: token\n          }\n        });\n        this.setState({\n          currentUser: res.data\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n\n  render() {\n    console.log('THIS.STATE FROM APP', this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      onClick: () => this.searchButton(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Search\"), this.state.isLoggedIn && React.createElement(Button, {\n      color: \"red\",\n      onClick: () => this.userProfile(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Profile\"), this.state.currentUser && React.createElement(Button, {\n      color: \"red\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Image, {\n      alt: \"\",\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors\",\n      render: routerProps => React.createElement(Doctors, Object.assign({\n        getDoctorById: this.getDoctorById,\n        currentUser: this.state.currentUser,\n        loading: this.state.loading,\n        getDoctors: this.getDoctors,\n        searchedDocs: this.state.searchedDocs\n      }, routerProps, {\n        doctors: this.state.doctors,\n        showDoctor: this.showDoctor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routerProps => React.createElement(SignUp, Object.assign({}, routerProps, {\n        setUser: this.setUser,\n        signUp: this.signUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        setUser: this.setUser,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/search\",\n      render: routerProps => React.createElement(Search, Object.assign({\n        error: this.state.error,\n        isLoading: this.state.isLoading,\n        currentUser: this.state.currentUser,\n        loadingHandler: this.loadingHandler\n      }, routerProps, {\n        googleSearch: this.googleSearch,\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/doctors/:id\",\n      render: routerProps => React.createElement(DoctorShow, Object.assign({\n        getDoctorById: this.getDoctorById,\n        doctorShow: this.state.doctorShow,\n        rate: this.rate,\n        doctors: this.state.doctors,\n        favorite: this.state.favorite,\n        isFavorite: this.isFavorite,\n        heart: this.heart,\n        currentUser: this.state.currentUser\n      }, routerProps, {\n        favorite: this.favorite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: routerProps => React.createElement(Profile, Object.assign({\n        patchUser: this.patchUser,\n        currentUser: this.state.currentUser,\n        doctors: this.state.doctors,\n        isLoggedIn: this.state.isLoggedIn\n      }, routerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/App.js"],"names":["React","Route","Switch","withRouter","Button","Image","DoctorShow","Doctors","Profile","Search","fetchApiDoctors","createReviews","createPhotos","axios","Landing","SignUp","Login","App","Component","state","loading","favorite","currentUser","lat","lng","doctors","searchedDocs","error","apiDoctors","users","doctorShow","doctorSearch","googleSearch","payload","apidocs","setState","console","log","docs","forEach","doc","reviews","place_id","id","photos","push","isFavorite","favoriteArray","filter","doctor","api_id","props","match","params","length","heart","unHeart","fetch","method","then","resp","json","data","favorites","dunno","userProfile","history","isResolved","loadingHandler","isLoading","patchUser","userData","headers","accepts","body","JSON","stringify","email","password","password_confirmation","passwordConfirmation","first_name","firstName","last_name","lastName","address","getDoctorById","res","get","err","getDoctors","searchButton","alert","login","formData","post","errors","setUser","signUp","localStorage","token","logout","removeItem","componentDidMount","Authorization","render","isLoggedIn","routerProps","showDoctor","rate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,SACEC,eADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,mBAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,QAAQ,EAAE,CAFJ;AAGNC,MAAAA,WAAW,EAAE,IAHP;AAINC,MAAAA,GAAG,EAAE,CAJC;AAKNC,MAAAA,GAAG,EAAE,CALC;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,YAAY,EAAE,EAPR;AAQNC,MAAAA,KAAK,EAAE,KARD;AASNC,MAAAA,UAAU,EAAE,EATN;AAUNC,MAAAA,KAAK,EAAE,EAVD;AAWNC,MAAAA,UAAU,EAAE,EAXN;AAYNC,MAAAA,YAAY,EAAE;AAZR,KADwB;;AAAA,SAgBhCC,YAhBgC,GAgBjB,MAAOC,OAAP,IAAmB;AAChC,YAAMC,OAAO,GAAG,MAAMxB,eAAe,CAACuB,OAAD,CAArC;AACA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAEG;AAAhB,OAAd,EAAyC,MACvCE,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKlB,KAAL,CAAWY,YAAlD,CADF;AAGA,YAAMO,IAAI,GAAG,EAAb;AACA,YAAMJ,OAAO,CAACK,OAAR,CAAgB,MAAOC,GAAP,IAAe;AACnC,YAAIC,OAAO,GAAG,MAAM9B,aAAa,CAAC6B,GAAG,CAACE,QAAL,EAAeF,GAAG,CAACG,EAAnB,CAAjC;;AACA,YAAIF,OAAJ,EAAa;AACXD,UAAAA,GAAG,CAACC,OAAJ,GAAcA,OAAd;AACD;AACF,OALK,CAAN;AAMA,YAAMP,OAAO,CAACK,OAAR,CAAgB,MAAOC,GAAP,IAAe;AACnC,YAAII,MAAM,GAAG,MAAMhC,YAAY,CAAC4B,GAAG,CAACE,QAAL,EAAeF,GAAG,CAACG,EAAnB,CAA/B;;AACA,YAAIC,MAAJ,EAAY;AACVJ,UAAAA,GAAG,CAACI,MAAJ,GAAaA,MAAb;AACAN,UAAAA,IAAI,CAACO,IAAL,CAAUL,GAAV;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD;AACF,OAPK,CAAN;AAQD,KApC+B;;AAAA,SAsChCQ,UAtCgC,GAsCnB,MAAM;AACjB,UAAIC,aAAa,GAAG,KAAK5B,KAAL,CAAWG,WAAX,CAAuBG,OAAvB,CAA+BuB,MAA/B,CACjBC,MAAD,IAAYA,MAAM,CAACC,MAAP,IAAiB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBV,EADnC,CAApB;;AAGA,UAAII,aAAa,CAACO,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKnB,QAAL,CAAc;AACZd,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGD;AACF,KA/C+B;;AAAA,SAiDhCkC,KAjDgC,GAiDvBN,MAAD,IAAY;AAClBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KApD+B;;AAAA,SAsDhCmB,OAtDgC,GAsDrBnC,QAAD,IAAc;AACtB;AAEA;AACAoC,MAAAA,KAAK,CACF,wDAAuDpC,QAAQ,CAACsB,EAAG,EADjE,EAEH;AACEe,QAAAA,MAAM,EAAE;AADV,OAFG,CAAL,CAMGC,IANH,CAMSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANlB,EAOGF,IAPH,CAOSG,IAAD,IAAU;AACd,YAAIC,SAAS,GAAG,KAAK5C,KAAL,CAAWG,WAAX,CAAuByC,SAAvB,CAAiCf,MAAjC,CACb3B,QAAD,IAAcA,QAAQ,CAACsB,EAAT,KAAgBmB,IAAI,CAACnB,EADrB,CAAhB;AAGA,YAAIlB,OAAO,GAAG,KAAKN,KAAL,CAAWG,WAAX,CAAuBG,OAAvB,CAA+BuB,MAA/B,CACXC,MAAD,IAAYA,MAAM,CAACC,MAAP,KAAkBY,IAAI,CAACZ,MADvB,CAAd;AAGA,aAAKf,QAAL,CAAc,EACZ,GAAG,KAAKhB,KADI;AAEZE,UAAAA,QAAQ,EAAE,CAFE;AAGZI,UAAAA,OAAO,EAAE,CAACqC,IAAI,CAACb,MAAN,EAAc,GAAG,KAAK9B,KAAL,CAAWM,OAA5B,CAHG;AAIZH,UAAAA,WAAW,EAAE,EACX,GAAG,KAAKH,KAAL,CAAWG,WADH;AAEXyC,YAAAA,SAAS,EAAEA,SAFA;AAGXtC,YAAAA,OAAO,EAAEA;AAHE;AAJD,SAAd;AAUD,OAxBH;AAyBD,KAnF+B;;AAAA,SAqFhCJ,QArFgC,GAqFpB2C,KAAD,IAAW;AACpB5B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAvF+B;;AAAA,SAyFhC4B,WAzFgC,GAyFlB,MAAM;AAClB,UAAItB,EAAE,GAAG,KAAKxB,KAAL,CAAWG,WAAX,CAAuBqB,EAAhC;AACAc,MAAAA,KAAK,CAAE,oDAAmDd,EAAG,EAAxD,CAAL,CACGgB,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,aAAK3B,QAAL,CACE,EACE,GAAG,KAAKhB,KADV;AAEEG,UAAAA,WAAW,EAAE,EACX,GAAG,KAAKH,KAAL,CAAWG,WADH;AAEXG,YAAAA,OAAO,EAAEqC,IAAI,CAACrC;AAFH;AAFf,SADF,EAQE,MAAM;AACJ,eAAK0B,KAAL,CAAWe,OAAX,CAAmBrB,IAAnB,CAAwB,UAAxB;AACD,SAVH;AAYD,OAfH;AAgBD,KA3G+B;;AAAA,SAgHhCsB,UAhHgC,GAgHnB,MAAM;AACjB,UAAI,KAAKhD,KAAL,CAAWS,UAAX,CAAsB0B,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,aAAKnB,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAFD,MAEO;AACL,aAAKQ,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAtH+B;;AAAA,SAwHhCyC,cAxHgC,GAwHf,MAAM;AACrB,WAAKjC,QAAL,CAAc;AAAEkC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA1H+B;;AAAA,SA4HhCC,SA5HgC,GA4HnBC,QAAD,IAAc;AACxBd,MAAAA,KAAK,CACH,+CACG,UAAS,KAAKtC,KAAL,CAAWG,WAAX,CAAuBqB,EAAG,EAFnC,EAGH;AACEe,QAAAA,MAAM,EAAE,OADV;AAEEc,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,OAAO,EAAE;AAFF,SAFX;AAMEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEN,QAAQ,CAACM,KADG;AAEnBC,UAAAA,QAAQ,EAAEP,QAAQ,CAACO,QAFA;AAGnBC,UAAAA,qBAAqB,EAAER,QAAQ,CAACS,oBAHb;AAInBC,UAAAA,UAAU,EAAEV,QAAQ,CAACW,SAJF;AAKnBC,UAAAA,SAAS,EAAEZ,QAAQ,CAACa,QALD;AAMnBC,UAAAA,OAAO,EAAEd,QAAQ,CAACc;AANC,SAAf;AANR,OAHG,CAAL,CAmBG1B,IAnBH,CAmBSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAnBlB,EAoBGF,IApBH,CAoBSG,IAAD,IACJ,KAAK3B,QAAL,CAAc,EACZ,GAAG,KAAKhB,KADI;AAEZG,QAAAA,WAAW,EAAE;AACXG,UAAAA,OAAO,EAAEqC,IAAI,CAACrC,OADH;AAEXsC,UAAAA,SAAS,EAAED,IAAI,CAACC,SAFL;AAGXpB,UAAAA,EAAE,EAAEmB,IAAI,CAACnB,EAHE;AAIXkC,UAAAA,KAAK,EAAEf,IAAI,CAACe,KAJD;AAKXQ,UAAAA,OAAO,EAAEvB,IAAI,CAACuB,OALH;AAMXP,UAAAA,QAAQ,EAAEhB,IAAI,CAACgB,QANJ;AAOXE,UAAAA,oBAAoB,EAAElB,IAAI,CAACiB,qBAPhB;AAQXG,UAAAA,SAAS,EAAEpB,IAAI,CAACmB,UARL;AASXG,UAAAA,QAAQ,EAAEtB,IAAI,CAACqB;AATJ;AAFD,OAAd,CArBJ;AAoCD,KAjK+B;;AAAA,SAkKhCG,aAlKgC,GAkKhB,MAAO3C,EAAP,IAAc;AAC5B;AACA,UAAI;AACF,YAAI4C,GAAG,GAAG,MAAM1E,KAAK,CAAC2E,GAAN,CAAW,iCAAgC7C,EAAG,EAA9C,CAAhB;AAEA,YAAIb,UAAU,GAAGyD,GAAG,CAACzB,IAArB;AACA,aAAK3B,QAAL,CAAc;AAAEL,UAAAA,UAAF;AAAcV,UAAAA,OAAO,EAAE;AAAvB,SAAd;AACD,OALD,CAKE,OAAOqE,GAAP,EAAY;AACZrD,QAAAA,OAAO,CAACC,GAAR,CAAYoD,GAAZ;AACA,cAAMA,GAAN;AACD;AACF,KA7K+B;;AAAA,SA+KhCC,UA/KgC,GA+KnB,YAAY;AACvB,UAAI;AACF,YAAIH,GAAG,GAAG,MAAM1E,KAAK,CAAC2E,GAAN,CAAW,+BAAX,CAAhB;AACA,aAAKrD,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAE8D,GAAG,CAACzB;AAAf,SAAd;AACD,OAHD,CAGE,OAAOnC,KAAP,EAAc;AACdS,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,cAAMA,KAAN;AACD;AACF,KAvL+B;;AAAA,SAyMhCgE,YAzMgC,GAyMjB,MAAM;AACnB,UAAI,KAAKxE,KAAL,CAAWG,WAAf,EAA4B;AAC1B,aAAK6B,KAAL,CAAWe,OAAX,CAAmBrB,IAAnB,CAAwB,SAAxB;AACD,OAFD,MAEO;AACL+C,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,KA/M+B;;AAAA,SAiNhCC,KAjNgC,GAiNxB,MAAOC,QAAP,IAAoB;AAC1B,UAAI;AACF,YAAIP,GAAG,GAAG,MAAM1E,KAAK,CAACkF,IAAN,CAAY,6BAAZ,EAA0CD,QAA1C,CAAhB;;AACA,YAAIP,GAAG,CAACS,MAAR,EAAgB;AACdJ,UAAAA,KAAK,CAACL,GAAG,CAACS,MAAL,CAAL;AACD,SAFD,MAEO;AACL,cAAI1E,WAAW,GAAGiE,GAAG,CAACzB,IAAtB;AACA,eAAKmC,OAAL,CAAa3E,WAAb;AACD;AACF,OARD,CAQE,OAAOmE,GAAP,EAAY;AACZG,QAAAA,KAAK,CAACH,GAAD,CAAL;AACA,cAAMA,GAAN;AACD;AACF,KA9N+B;;AAAA,SA+NhCS,MA/NgC,GA+NvB,MAAOJ,QAAP,IAAoB;AAC3B,UAAI;AACF,YAAIP,GAAG,GAAG,MAAM1E,KAAK,CAACkF,IAAN,CAAY,6BAAZ,EAA0CD,QAA1C,CAAhB;;AACA,YAAIP,GAAG,CAACS,MAAR,EAAgB;AACdJ,UAAAA,KAAK,CAACL,GAAG,CAACS,MAAL,CAAL;AACD,SAFD,MAEO;AACL,cAAI1E,WAAW,GAAGiE,GAAG,CAACzB,IAAtB;AACA,eAAKmC,OAAL,CAAa3E,WAAb;AACD;AACF,OARD,CAQE,OAAOmE,GAAP,EAAY;AACZG,QAAAA,KAAK,CAACH,GAAD,CAAL;AACD;AACF,KA3O+B;;AAAA,SA4OhCQ,OA5OgC,GA4OrB3E,WAAD,IAAiB;AACzB,WAAKa,QAAL,CACE;AACEb,QAAAA;AADF,OADF,EAIE,MAAM;AACJ6E,QAAAA,YAAY,CAACC,KAAb,GAAqB9E,WAAW,CAAC8E,KAAjC;AACA,aAAKjD,KAAL,CAAWe,OAAX,CAAmBrB,IAAnB,CAAwB,SAAxB;AACD,OAPH;AASD,KAtP+B;;AAAA,SAwPhCwD,MAxPgC,GAwPvB,MAAM;AACb,WAAKlE,QAAL,CACE;AACEb,QAAAA,WAAW,EAAE;AADf,OADF,EAIE,MAAM;AACJ6E,QAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACA,aAAKnD,KAAL,CAAWe,OAAX,CAAmBrB,IAAnB,CAAwB,GAAxB;AACD,OAPH;AASD,KAlQ+B;AAAA;;AAyLhC,QAAM0D,iBAAN,GAA0B;AACxB;AACA,UAAMH,KAAK,GAAGD,YAAY,CAACC,KAA3B;;AACA,QAAIA,KAAJ,EAAW;AACT;AACA,UAAI;AACF,YAAIb,GAAG,GAAG,MAAM1E,KAAK,CAAC2E,GAAN,CAAU,kCAAV,EAA8C;AAC5DhB,UAAAA,OAAO,EAAE;AAAEgC,YAAAA,aAAa,EAAEJ;AAAjB;AADmD,SAA9C,CAAhB;AAGA,aAAKjE,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAEiE,GAAG,CAACzB;AAAnB,SAAd;AACD,OALD,CAKE,OAAOnC,KAAP,EAAc;AACdiE,QAAAA,KAAK,CAACjE,KAAD,CAAL;AACD;AACF;AACF;;AA4DD8E,EAAAA,MAAM,GAAG;AACPrE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKlB,KAAxC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAE,MAAM,KAAKwE,YAAL,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIG,KAAKxE,KAAL,CAAWuF,UAAX,IACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAE,MAAM,KAAKzC,WAAL,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EASG,KAAK9C,KAAL,CAAWG,WAAX,IACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAE,KAAK+E,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAcE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,EAAX;AAAc,MAAA,GAAG,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEvF,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAG6F,WAAD,IACN,oBAAC,OAAD;AACE,QAAA,aAAa,EAAE,KAAKrB,aADtB;AAEE,QAAA,WAAW,EAAE,KAAKnE,KAAL,CAAWG,WAF1B;AAGE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAHtB;AAIE,QAAA,UAAU,EAAE,KAAKsE,UAJnB;AAKE,QAAA,YAAY,EAAE,KAAKvE,KAAL,CAAWO;AAL3B,SAMMiF,WANN;AAOE,QAAA,OAAO,EAAE,KAAKxF,KAAL,CAAWM,OAPtB;AAQE,QAAA,UAAU,EAAE,KAAKmF,UARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAkBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAGD,WAAD,IACN,oBAAC,MAAD,oBACMA,WADN;AAEE,QAAA,OAAO,EAAE,KAAKV,OAFhB;AAGE,QAAA,MAAM,EAAE,KAAKC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EA8BE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAGS,WAAD,IACN,oBAAC,KAAD,oBACMA,WADN;AAEE,QAAA,OAAO,EAAE,KAAKV,OAFhB;AAGE,QAAA,KAAK,EAAE,KAAKJ,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EAyCE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAGc,WAAD,IACN,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKxF,KAAL,CAAWQ,KADpB;AAEE,QAAA,SAAS,EAAE,KAAKR,KAAL,CAAWkD,SAFxB;AAGE,QAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWG,WAH1B;AAIE,QAAA,cAAc,EAAE,KAAK8C;AAJvB,SAKMuC,WALN;AAME,QAAA,YAAY,EAAE,KAAK3E,YANrB;AAOE,QAAA,QAAQ,EAAE,KAAKX,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EAwDE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,MAAM,EAAGsF,WAAD,IACN,oBAAC,UAAD;AACE,QAAA,aAAa,EAAE,KAAKrB,aADtB;AAEE,QAAA,UAAU,EAAE,KAAKnE,KAAL,CAAWW,UAFzB;AAGE,QAAA,IAAI,EAAE,KAAK+E,IAHb;AAIE,QAAA,OAAO,EAAE,KAAK1F,KAAL,CAAWM,OAJtB;AAKE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWE,QALvB;AAME,QAAA,UAAU,EAAE,KAAKyB,UANnB;AAOE,QAAA,KAAK,EAAE,KAAKS,KAPd;AAQE,QAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWG;AAR1B,SASMqF,WATN;AAUE,QAAA,QAAQ,EAAE,KAAKtF,QAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDF,EA0EE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAGsF,WAAD,IACN,oBAAC,OAAD;AACE,QAAA,SAAS,EAAE,KAAKrC,SADlB;AAEE,QAAA,WAAW,EAAE,KAAKnD,KAAL,CAAWG,WAF1B;AAGE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWM,OAHtB;AAIE,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWuF;AAJzB,SAKMC,WALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1EF,CAfF,CADF;AA0GD;;AA/W+B;;AAkXlC,eAAexG,UAAU,CAACc,GAAD,CAAzB","sourcesContent":["import React from 'react';\n\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { Button, Image } from 'semantic-ui-react';\nimport DoctorShow from './components/DoctorShow';\nimport Doctors from './containers/Doctors';\n\nimport Profile from './components/Profile';\nimport Search from './components/Search';\nimport './App.css';\nimport {\n  fetchApiDoctors,\n  createReviews,\n  createPhotos,\n} from './helpers/helpers';\nimport axios from 'axios';\n\nimport Landing from './components/Landing';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    favorite: 0,\n    currentUser: null,\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    searchedDocs: [],\n    error: false,\n    apiDoctors: [],\n    users: [],\n    doctorShow: {},\n    doctorSearch: [],\n  };\n\n  googleSearch = async (payload) => {\n    const apidocs = await fetchApiDoctors(payload);\n    this.setState({ doctorSearch: apidocs }, () =>\n      console.log('this.state.doctorSearch', this.state.doctorSearch)\n    );\n    const docs = [];\n    await apidocs.forEach(async (doc) => {\n      let reviews = await createReviews(doc.place_id, doc.id);\n      if (reviews) {\n        doc.reviews = reviews;\n      }\n    });\n    await apidocs.forEach(async (doc) => {\n      let photos = await createPhotos(doc.place_id, doc.id);\n      if (photos) {\n        doc.photos = photos;\n        docs.push(doc);\n        console.log(docs);\n      }\n    });\n  };\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(\n      (doctor) => doctor.api_id == this.props.match.params.id\n    );\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1,\n      });\n    }\n  };\n\n  heart = (doctor) => {\n    console.log(doctor);\n    console.log('got here in heart');\n  };\n\n  unHeart = (favorite) => {\n    // debugger\n\n    // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n    fetch(\n      `https://cryptic-island-45793.herokuapp.com/favorites/${favorite.id}`,\n      {\n        method: 'DELETE',\n      }\n    )\n      .then((resp) => resp.json())\n      .then((data) => {\n        let favorites = this.state.currentUser.favorites.filter(\n          (favorite) => favorite.id !== data.id\n        );\n        let doctors = this.state.currentUser.doctors.filter(\n          (doctor) => doctor.api_id !== data.api_id\n        );\n        this.setState({\n          ...this.state,\n          favorite: 0,\n          doctors: [data.doctor, ...this.state.doctors],\n          currentUser: {\n            ...this.state.currentUser,\n            favorites: favorites,\n            doctors: doctors,\n          },\n        });\n      });\n  };\n\n  favorite = (dunno) => {\n    console.log('got here in favorite');\n  };\n\n  userProfile = () => {\n    let id = this.state.currentUser.id;\n    fetch(`https://cryptic-island-45793.herokuapp.com/users/${id}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        this.setState(\n          {\n            ...this.state,\n            currentUser: {\n              ...this.state.currentUser,\n              doctors: data.doctors,\n            },\n          },\n          () => {\n            this.props.history.push('/profile');\n          }\n        );\n      });\n  };\n\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n\n  // request to BetterDoc API with Long/Lat\n  isResolved = () => {\n    if (this.state.apiDoctors.length < 1) {\n      this.setState({ error: true });\n    } else {\n      this.setState({ error: false });\n    }\n  };\n\n  loadingHandler = () => {\n    this.setState({ isLoading: true });\n  };\n\n  patchUser = (userData) => {\n    fetch(\n      'https://cryptic-island-45793.herokuapp.com' +\n        `/users/${this.state.currentUser.id}`,\n      {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          accepts: 'application/json',\n        },\n        body: JSON.stringify({\n          email: userData.email,\n          password: userData.password,\n          password_confirmation: userData.passwordConfirmation,\n          first_name: userData.firstName,\n          last_name: userData.lastName,\n          address: userData.address,\n        }),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((data) =>\n        this.setState({\n          ...this.state,\n          currentUser: {\n            doctors: data.doctors,\n            favorites: data.favorites,\n            id: data.id,\n            email: data.email,\n            address: data.address,\n            password: data.password,\n            passwordConfirmation: data.password_confirmation,\n            firstName: data.first_name,\n            lastName: data.last_name,\n          },\n        })\n      );\n  };\n  getDoctorById = async (id) => {\n    // debugger\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors/${id}`);\n\n      let doctorShow = res.data;\n      this.setState({ doctorShow, loading: false });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  };\n\n  getDoctors = async () => {\n    try {\n      let res = await axios.get(`http://localhost:3000/doctors`);\n      this.setState({ doctors: res.data });\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  async componentDidMount() {\n    // this.getDoctors();\n    const token = localStorage.token;\n    if (token) {\n      //get user info\n      try {\n        let res = await axios.get('http://localhost:3000/auto_login', {\n          headers: { Authorization: token },\n        });\n        this.setState({ currentUser: res.data });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n\n  searchButton = () => {\n    if (this.state.currentUser) {\n      this.props.history.push('/search');\n    } else {\n      alert('Please log in before searching');\n    }\n  };\n\n  login = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/login`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n      throw err;\n    }\n  };\n  signUp = async (formData) => {\n    try {\n      let res = await axios.post(`http://localhost:3000/users`, formData);\n      if (res.errors) {\n        alert(res.errors);\n      } else {\n        let currentUser = res.data;\n        this.setUser(currentUser);\n      }\n    } catch (err) {\n      alert(err);\n    }\n  };\n  setUser = (currentUser) => {\n    this.setState(\n      {\n        currentUser,\n      },\n      () => {\n        localStorage.token = currentUser.token;\n        this.props.history.push('/search');\n      }\n    );\n  };\n\n  logout = () => {\n    this.setState(\n      {\n        currentUser: null,\n      },\n      () => {\n        localStorage.removeItem('token');\n        this.props.history.push('/');\n      }\n    );\n  };\n  render() {\n    console.log('THIS.STATE FROM APP', this.state);\n    return (\n      <div>\n        <Button color='red' onClick={() => this.searchButton()}>\n          Search\n        </Button>\n        {this.state.isLoggedIn && (\n          <Button color='red' onClick={() => this.userProfile()}>\n            Profile\n          </Button>\n        )}\n        {this.state.currentUser && (\n          <Button color='red' onClick={this.logout}>\n            Logout\n          </Button>\n        )}\n        <Image alt='' src=''></Image>\n        <Switch>\n          <Route exact path='/' component={Landing}></Route>\n          <Route\n            exact\n            path='/doctors'\n            render={(routerProps) => (\n              <Doctors\n                getDoctorById={this.getDoctorById}\n                currentUser={this.state.currentUser}\n                loading={this.state.loading}\n                getDoctors={this.getDoctors}\n                searchedDocs={this.state.searchedDocs}\n                {...routerProps}\n                doctors={this.state.doctors}\n                showDoctor={this.showDoctor}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/signup'\n            render={(routerProps) => (\n              <SignUp\n                {...routerProps}\n                setUser={this.setUser}\n                signUp={this.signUp}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path='/login'\n            render={(routerProps) => (\n              <Login\n                {...routerProps}\n                setUser={this.setUser}\n                login={this.login}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/search'\n            render={(routerProps) => (\n              <Search\n                error={this.state.error}\n                isLoading={this.state.isLoading}\n                currentUser={this.state.currentUser}\n                loadingHandler={this.loadingHandler}\n                {...routerProps}\n                googleSearch={this.googleSearch}\n                favorite={this.favorite}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/doctors/:id'\n            render={(routerProps) => (\n              <DoctorShow\n                getDoctorById={this.getDoctorById}\n                doctorShow={this.state.doctorShow}\n                rate={this.rate}\n                doctors={this.state.doctors}\n                favorite={this.state.favorite}\n                isFavorite={this.isFavorite}\n                heart={this.heart}\n                currentUser={this.state.currentUser}\n                {...routerProps}\n                favorite={this.favorite}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/profile'\n            render={(routerProps) => (\n              <Profile\n                patchUser={this.patchUser}\n                currentUser={this.state.currentUser}\n                doctors={this.state.doctors}\n                isLoggedIn={this.state.isLoggedIn}\n                {...routerProps}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}