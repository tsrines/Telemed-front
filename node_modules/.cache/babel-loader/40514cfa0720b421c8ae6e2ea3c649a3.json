{"ast":null,"code":"import _classCallCheck from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/rines/Development/code/mod5/Telemed/Telemed-front/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Card,Image}from'semantic-ui-react';import{withRouter}from'react-router-dom';var DoctorCard=/*#__PURE__*/function(_React$Component){_inherits(DoctorCard,_React$Component);function DoctorCard(){var _getPrototypeOf2;var _this;_classCallCheck(this,DoctorCard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(DoctorCard)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.doctorShow=function(id){// let apiDoc = this.props.doctors.find(doctor => doctor.id === id)\n// this.props.createDoctor(apiDoc)\n_this.props.history.push(\"/doctors/\".concat(id));};return _this;}_createClass(DoctorCard,[{key:\"render\",value:function render(){var _this2=this;var capitalGender;// console.log(this.props)\nif(this.props.gender){var gender=this.props.gender;capitalGender=gender.charAt(0).toUpperCase()+gender.slice(1);}else{capitalGender=\"Unknown\";}return React.createElement(\"div\",null,React.createElement(Card,{onClick:function onClick(){return _this2.doctorShow(_this2.props.id);}},React.createElement(Image,{src:this.props.image,wrapped:true,ui:false}),React.createElement(Card.Content,null,React.createElement(Card.Header,null,this.props.firstName||this.props.first_name,\" \",this.props.lastName||this.props.last_name,\" \",this.props.title),React.createElement(Card.Header,null,\" \"),React.createElement(Card.Description,null,this.props.specialty),React.createElement(Card.Meta,null,React.createElement(\"span\",null,capitalGender))),React.createElement(Card.Content,{extra:true},React.createElement(\"span\",null))));}}]);return DoctorCard;}(React.Component);export default withRouter(DoctorCard);","map":{"version":3,"sources":["/Users/rines/Development/code/mod5/Telemed/Telemed-front/src/components/DoctorCard.js"],"names":["React","Card","Image","withRouter","DoctorCard","doctorShow","id","props","history","push","capitalGender","gender","charAt","toUpperCase","slice","image","firstName","first_name","lastName","last_name","title","specialty","Component"],"mappings":"qsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAGEC,KAHF,KAIO,mBAJP,CAKA,OAASC,UAAT,KAA2B,kBAA3B,C,GAIMC,CAAAA,U,2ZACJC,U,CAAa,SAACC,EAAD,CAAQ,CACnB;AAEA;AACA,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,oBAAoCH,EAApC,GACD,C,6EAEQ,iBAGP,GAAII,CAAAA,aAAJ,CACA;AACA,GAAI,KAAKH,KAAL,CAAWI,MAAf,CAAuB,CACrB,GAAIA,CAAAA,MAAM,CAAG,KAAKJ,KAAL,CAAWI,MAAxB,CACAD,aAAa,CAAGC,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,GAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAjD,CACD,CAHD,IAGO,CACLJ,aAAa,CAAG,SAAhB,CACD,CAED,MACE,gCACE,oBAAC,IAAD,EAAM,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACL,UAAL,CAAgB,MAAI,CAACE,KAAL,CAAWD,EAA3B,CAAN,EAAf,EACE,oBAAC,KAAD,EAAO,GAAG,CAAE,KAAKC,KAAL,CAAWQ,KAAvB,CAA8B,OAAO,KAArC,CAAsC,EAAE,CAAE,KAA1C,EADF,CAEE,oBAAC,IAAD,CAAM,OAAN,MACE,oBAAC,IAAD,CAAM,MAAN,MAAc,KAAKR,KAAL,CAAWS,SAAX,EAAwB,KAAKT,KAAL,CAAWU,UAAjD,KAA8D,KAAKV,KAAL,CAAWW,QAAX,EAAuB,KAAKX,KAAL,CAAWY,SAAhG,KAA4G,KAAKZ,KAAL,CAAWa,KAAvH,CADF,CAEE,oBAAC,IAAD,CAAM,MAAN,UAFF,CAGE,oBAAC,IAAD,CAAM,WAAN,MACG,KAAKb,KAAL,CAAWc,SADd,CAHF,CAME,oBAAC,IAAD,CAAM,IAAN,MACE,gCAAOX,aAAP,CADF,CANF,CAFF,CAeE,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,EACE,gCADF,CAfF,CADF,CADF,CAyBD,C,wBA7CsBV,KAAK,CAACsB,S,EAgD/B,cAAenB,CAAAA,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {\n  Card,\n\n  Image\n} from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\n\n\n\nclass DoctorCard extends React.Component {\n  doctorShow = (id) => {\n    // let apiDoc = this.props.doctors.find(doctor => doctor.id === id)\n\n    // this.props.createDoctor(apiDoc)\n    this.props.history.push(`/doctors/${id}`)\n  }\n\n  render() {\n\n\n    let capitalGender\n    // console.log(this.props)\n    if (this.props.gender) {\n      let gender = this.props.gender\n      capitalGender = gender.charAt(0).toUpperCase() + gender.slice(1)\n    } else {\n      capitalGender = \"Unknown\"\n    }\n\n    return (\n      <div>\n        <Card onClick={() => this.doctorShow(this.props.id)}>\n          <Image src={this.props.image} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{this.props.firstName || this.props.first_name} {this.props.lastName || this.props.last_name} {this.props.title}</Card.Header>\n            <Card.Header> </Card.Header>\n            <Card.Description>\n              {this.props.specialty}\n            </Card.Description>\n            <Card.Meta>\n              <span>{capitalGender}</span>\n            </Card.Meta>\n\n\n\n          </Card.Content>\n          <Card.Content extra>\n            <span></span>\n\n          </Card.Content>\n        </Card>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(DoctorCard)"]},"metadata":{},"sourceType":"module"}