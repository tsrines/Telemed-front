{"version":3,"sources":["components/DoctorShow.js","components/DoctorCard.js","containers/Doctors.js","components/Login.js","components/Profile.js","components/Search.js","App.js","index.js"],"names":["DoctorShow","isFavorite","props","currentUser","doctors","filter","doctor","id","match","params","length","setState","favorite","state","favoriteHandler","docCheck","doc","find","renderDocJsx","rate","e","data","rating","heart","Array","isArray","this","console","log","undefined","Grid","columns","textAlign","style","height","verticalAlign","Row","maxWidth","Column","Segment","Header","first_name","firstName","last_name","lastName","title","Divider","Message","phone_number","Rating","onRate","icon","maxRating","size","bio","React","Component","DoctorCard","doctorShow","history","push","capitalGender","gender","charAt","toUpperCase","slice","Card","onClick","Image","src","image","wrapped","ui","Content","Description","specialty","Meta","extra","withRouter","Doctors","address","ailment","miles","onChange","target","name","value","onSubmit","formData","preventDefault","toGeoCode","displayDoctors","map","createDoctor","key","Group","overflow","maxHeight","display","justify-content","itemsPerRow","LoginForm","email","password","passwordConfirmation","as","color","Form","stacked","Input","fluid","iconPosition","placeholder","type","register","Button","onSignUp","Or","label","Profile","isDisabled","submitEdit","userData","patchUser","alert","edit","profileDoctors","Container","width","disabled","Search","loadingHandler","error","required","isLoading","loading","App","isLoggedIn","favorites","lat","lng","apiDoctors","users","api_id","doctorObj","phone","fetch","method","headers","body","JSON","stringify","then","resp","json","unHeart","favoriteObject","user_id","doctor_id","newdoc","logInOrSignUp","password_confirmation","userProfile","logOut","process","geometry","location","getDoctors","catch","isResolved","parseDoctors","imageApi","REACT_APP_SERP_API_KEY","images_results","original","err","doctorsArray","element","doctorHash","uid","profile","practices","phones","number","specialties","message","searchButton","alt","Login","exact","path","render","routerProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c1fa6db.chunk.js","sourcesContent":["import React from 'react'\nimport { Grid, Rating, Header, Message, Button, Divider, Segment } from 'semantic-ui-react'\n\n\n\nclass DoctorShow extends React.Component {\n\n  // sendEmail = () => {\n\n  //   emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\n  //     .then((result) => {\n  //       console.log(result.text);\n  //     }, (error) => {\n  //       console.log(error.text)\n  //       this.props.history.push('/video');\n  //     });\n  // }\n\n\n  isFavorite = () => {\n\n\n    let favoriteArray = this.props.currentUser.doctors.filter(doctor => doctor.id == this.props.match.params.id)\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1\n      })\n    }\n    // debugger\n  }\n  // let apiDoc = this.props.apiDoctors.find(doctor => doctor.uid === this.props.match.params.id)\n  // if (Array.isArray(this.props.currentUser.userDoctors) && this.props.currentUser.userDoctors.length > 0) {\n  //   let doctorArray = this.props.currentUser.userDoctors.filter(doctor => doctor.api_id === apiDoc.uid)\n\n  //   if (doctorArray.length === 1) {\n  //     this.setState({\n  //       favorite: 1\n  //     })\n  //   }\n  // }\n\n\n  state = {\n    favorite: 0\n  }\n\n  favoriteHandler = () => {\n    this.setState({\n      favorite: 0\n    })\n  }\n\n  docCheck = () => {\n    let doc\n    if (this.props.doctors.length > 0) {\n      doc = this.props.doctors.find(doctor => doctor.id == this.props.match.params.id)\n      if (!!doc) {\n        this.renderDocJsx(doc)\n      }\n    } else {\n      doc = this.props.currentUser.doctors.find(doctor => doctor.id == this.props.match.params.id)\n      if (!!doc) {\n        this.renderDocJsx(doc)\n      }\n    }\n  }\n\n\n  componentDidMount() {\n    if (Array.isArray(this.props.currentUser.doctors)) {\n      this.isFavorite()\n    }\n  }\n\n  rate = (e, data, doc) => {\n    this.setState({\n      favorite: data.rating\n    }, () => this.props.heart(doc))\n  }\n\n  render() {\n    let doc\n    doc = this.props.currentUser.doctors.find(doctor => doctor.id == this.props.match.params.id)\n    console.log(\"doc after currentUser find:\", doc)\n    if (doc == undefined) {\n      doc = this.props.doctors.find(doctor => doctor.id == this.props.match.params.id)\n      console.log(\"doc after doctor find:\", doc)\n    }\n    // if (doc === undefined){\n    // console.log(\"before push\", doc)\n\n    // this.props.history.push('/profile')\n    // debugger\n    // }\n\n\n\n\n    // console.log(\"this.props.doctors \", this.props.doctors)\n    // console.log(\"this.props.match \", this.props.match)\n    // console.log(\"this.props.match.params.id: \", this.props.match.params.id)\n    // console.log(\"doc: \", doc)\n\n    // console.log(\"this.props.currentUser\", this.props.currentUser)\n    // debugger\n\n\n\n\n    return (\n      // <div>Hello</div>\n\n      <div>\n        <Grid columns={2} textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Row style={{ maxWidth: 750 }}>\n            <Grid.Column>\n              <Segment >\n                <Header>{doc.first_name ? doc.first_name : doc.firstName} {doc.last_name ? doc.last_name : doc.lastName} {doc.title}</Header>\n                <Divider />\n                <Message>Phone Number: {doc.phone_number}</Message>                \n                <Rating onRate={(e, data) => this.rate(e, data, doc)} icon=\"heart\" rating={this.state.favorite} maxRating={1} size=\"huge\" />\n              </Segment >\n            </Grid.Column>\n            <Grid.Column>\n              <Message>{doc.bio}</Message>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n\n// DoctorShow.defaultProps = {\n//   currentUser: {\n//     userDoctors: []\n//   }\n// };\n\nexport default DoctorShow","import React from 'react'\nimport {\n  Card,\n\n  Image\n} from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\n\n\n\nclass DoctorCard extends React.Component {\n  doctorShow = (id) => {\n    // let apiDoc = this.props.doctors.find(doctor => doctor.id === id)\n\n    // this.props.createDoctor(apiDoc)\n    this.props.history.push(`/doctors/${id}`)\n  }\n\n  render() {\n\n\n    let capitalGender\n    // console.log(this.props)\n    if (this.props.gender) {\n      let gender = this.props.gender\n      capitalGender = gender.charAt(0).toUpperCase() + gender.slice(1)\n    } else {\n      capitalGender = \"Unknown\"\n    }\n\n    return (\n      <div>\n        <Card onClick={() => this.doctorShow(this.props.id)}>\n          <Image src={this.props.image} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{this.props.firstName || this.props.first_name} {this.props.lastName || this.props.last_name} {this.props.title}</Card.Header>\n            <Card.Header> </Card.Header>\n            <Card.Description>\n              {this.props.specialty}\n            </Card.Description>\n            <Card.Meta>\n              <span>{capitalGender}</span>\n            </Card.Meta>\n\n\n\n          </Card.Content>\n          <Card.Content extra>\n            <span></span>\n\n          </Card.Content>\n        </Card>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(DoctorCard)","import React from 'react'\nimport { Card, Grid } from 'semantic-ui-react'\nimport DoctorCard from '../components/DoctorCard'\nimport { withRouter } from 'react-router-dom'\n\nclass Doctors extends React.Component {\n\n  state = {\n    address: \"\",\n    ailment: \"\",\n    miles: \"\",\n\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    const formData = this.state\n    e.preventDefault()\n    this.props.toGeoCode(formData)\n  }\n\n  render() {\n    let displayDoctors = this.props.doctors.map(doctor => <DoctorCard createDoctor={this.props.createDoctor} doctors={this.props.doctors} key={doctor.id} {...doctor} />)\n    return (\n      <div>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <br></br>\n          <Card.Group style={{ overflow: 'auto', maxHeight: '65em' }} display='flex' justify-content='center' itemsPerRow={6}>\n            {displayDoctors}\n          </Card.Group>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Doctors)","import React from 'react'\nimport { Button, Form, Grid, Header, Image, Segment, Divider } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\nimport emailjs from 'emailjs-com'\n\n\nclass LoginForm extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  formData = () => {\n    let formData = this.state\n    this.props.onSubmit(formData)\n    this.setState({\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    })\n  }\n\n\n  render() {\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='red' textAlign='center'>\n            Telemed \n            <Image src='../favicon.ico' />\n          </Header>\n          <br />\n          <br />\n          <Form size='large'>\n            <Segment stacked>\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"email\"\n                value={this.state.email}\n                fluid icon='user'\n                iconPosition='left'\n                placeholder='E-mail address' />\n              <Form.Input\n                onChange={(e) => this.onChange(e)}\n                name=\"password\"\n                value={this.state.password}\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n              />\n              {this.props.register &&\n                <Form.Input\n                  onChange={(e) => this.onChange(e)}\n                  name=\"passwordConfirmation\"\n                  value={this.state.passwordConfirmation}\n                  fluid\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password Confirmation'\n                  type='password'\n                />}\n              {this.props.register && <Button.Group>\n                <Button onClick={this.props.onSignUp}>Cancel</Button>\n                <Button.Or />\n                <Button onClick={this.formData} color='red' fluid size='large'>Sign Up!</Button>\n              </Button.Group>}\n              {!this.props.register && <Button onClick={this.formData} color='red' fluid size='large'>\n                {this.props.register ? \"Sign Up\" : \"Login\"}\n              </Button>}\n            </Segment>\n          </Form>\n          {!this.props.register &&\n            <Button onClick={this.props.onSignUp} label=\"Sign Up?\" />}\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\n\nexport default withRouter(LoginForm)","import React from 'react'\nimport {\n  Header,\n  Divider,\n  Button,\n  Container,\n  Form,\n  Input,\n  Grid,\n  Card\n} from 'semantic-ui-react'\nimport DoctorCard from './DoctorCard'\n\n\nclass Profile extends React.Component {\n  state = {\n    email: this.props.currentUser.email,\n    password: this.props.currentUser.password,\n    passwordConfirmation: this.props.currentUser.passwordConfirmation,\n    firstName: this.props.currentUser.firstName,\n    lastName: this.props.currentUser.lastName,\n    address: this.props.currentUser.address,\n    isDisabled: true\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    }, () => console.log(this.state))\n  }\n\n  submitEdit = () => {\n    let userData = this.state\n    this.props.patchUser(userData)\n    this.setState({\n      isDisabled: true\n    })\n    this.props.history.push('/search')\n    alert(\"Profile has been updated!\")\n  }\n\n  edit = () => {\n    this.setState({\n      isDisabled: !this.state.isDisabled\n    })\n  }\n\n  render() {\n    let profileDoctors = this.props.currentUser.doctors.map(doctor => <DoctorCard key={doctor.id} {...doctor} />)\n    return (\n      <div>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Container textAlign='center'>\n              <Header as='h2' display='flex' textAlign=\"center\" color=\"red\">User Profile</Header>\n              <Divider />\n              <Form width={6}>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Email\" name=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Email\" name=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Password\" name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Password Confirmation\" name=\"passwordConfirmation\" type=\"password\" value={this.state.passwordConfirmation || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Password Confirmation\" name=\"passwordConfirmation\" type=\"password\" value={this.state.passwordConfirmation || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"First Name\" name=\"firstName\" type=\"text\" value={this.state.firstName || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"First Name\" name=\"firstName\" type=\"text\" value={this.state.firstName || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Last Name\" name=\"lastName\" type=\"text\" value={this.state.lastName || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Last Name\" name=\"lastName\" type=\"text\" value={this.state.lastName || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Input disabled placeholder=\"Address\" name=\"address\" type=\"text\" value={this.state.address || \"\"} onChange={(e) => this.onChange(e)}></Input>\n                  : <Input placeholder=\"Address\" name=\"address\" type=\"text\" value={this.state.address || \"\"} onChange={(e) => this.onChange(e)}></Input>}\n              </Form>\n              <Form>\n                {this.state.isDisabled ? <Button disabled color='red' onClick={this.submitEdit}>Submit</Button>\n                  : <Button color='red' onClick={this.submitEdit}>Submit</Button>}\n                {this.state.isDisabled ? <Button color='red' onClick={this.edit}>Edit</Button>\n                  : <Button color='black' onClick={this.edit}>Nevermind</Button>}\n\n              </Form>\n            </Container >\n          </Grid.Column>\n          {this.props.currentUser.doctors.length > 0 && <Grid.Column >\n            <Header as='h2' display='flex' textAlign=\"center\" color=\"red\">Favorite Doctors</Header>\n            <Divider />\n            <Card.Group style={{ overflow: 'auto', maxHeight: '52em' }} display='flex' justify-content='center' itemsPerRow={2}>\n              {profileDoctors}\n            </Card.Group>\n          </Grid.Column>}\n\n        </Grid>\n\n\n\n      </div>\n    )\n  }\n}\nexport default Profile","import React from 'react'\nimport { Form, Header, Input, Image, Button, Grid, Segment } from 'semantic-ui-react'\n\nclass Search extends React.Component {\n\n  state = {\n    address: \"\",\n    ailment: \"\",\n    miles: \"\",\n\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    const formData = this.state\n    e.preventDefault()\n    this.props.toGeoCode(formData)\n    this.props.loadingHandler()\n  }\n\n\n  render() {\n    return (\n      <div>\n\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 900 }}>\n            <Header as='h2' color='red' textAlign='center'>\n              <Image src='../favicon.ico' />\n              Telemed\n            </Header>\n            {this.props.error && <Segment>No search results found</Segment>}\n            <Form onSubmit={this.onSubmit}>\n              <Input required name=\"address\" onChange={(e) => this.onChange(e)} type=\"text\" placeholder=\"Address\" value={this.state.address}></Input>\n              <Input required name=\"ailment\" onChange={(e) => this.onChange(e)} type=\"text\" placeholder=\"What hurts?\" value={this.state.ailment}></Input>\n              <Input required name=\"miles\" onChange={(e) => this.onChange(e)} type=\"number\" placeholder=\"Miles?\" value={this.state.miles}></Input>\n\n              {!this.props.isLoading && <Button color=\"red\" type=\"submit\" value=\"Get Doctors\">Get Doctors</Button>}\n              {this.props.isLoading && <Button loading color=\"red\" type=\"submit\" value=\"Get Doctors\">Get Doctors</Button>}\n            </Form>\n          </Grid.Column >\n        </Grid>\n\n      </div>\n\n    )\n  }\n}\n\nexport default Search ","import React from 'react';\nimport {\n  Route,\n  Link,\n  Switch,\n  withRouter,\n} from 'react-router-dom'\nimport { Button, Image } from 'semantic-ui-react'\nimport DoctorShow from './components/DoctorShow'\nimport Doctors from './containers/Doctors'\nimport Login from './components/Login'\nimport Profile from './components/Profile'\nimport Search from './components/Search'\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: false,\n    isLoggedIn: false,\n    register: false,\n    favorite: 0,\n    currentUser: {\n      id: \"\",\n      email: \"\",\n      address: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      doctors: [],\n      favorites: []\n    },\n    lat: 0,\n    lng: 0,\n    doctors: [],\n    error: false,\n    apiDoctors: [],\n    users: []\n  }\n\n  isFavorite = () => {\n    let favoriteArray = this.state.currentUser.doctors.filter(doctor => doctor.api_id == this.props.match.params.id)\n    if (favoriteArray.length > 0) {\n      this.setState({\n        favorite: 1\n      })\n    }\n\n  }\n\n  rate = (e, data) => {\n    console.log(e, data)\n  }\n\n  createDoctor = (doctor) => {\n\n    let doctorObj = {\n      api_id: doctor.id,\n      first_name: doctor.firstName,\n      last_name: doctor.lastName,\n      address: doctor.address,\n      image: doctor.image,\n      specialty: doctor.specialty,\n      title: doctor.title,\n      gender: doctor.gender,\n      bio: doctor.bio,\n      phone_number: doctor.phone\n    }\n\n    fetch(`http://localhost:3000/doctors`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify(doctorObj)\n    }).then(resp => resp.json())\n      .then(data => {\n        \n        let doctors = [...this.state.doctors]\n        this.setState({\n          ...this.state,\n          doctors: [data, ...doctors]\n        }, () => { this.props.history.push('/doctors') })\n      }, this.setState({ isLoading: false }))\n  }\n\n  heart = (doctor) => {\n\n    console.log(\"this is doctor: \", doctor)\n    let favorite = this.state.currentUser.favorites.find(favorite => favorite.api_id == doctor.api_id)\n\n    console.log(\"in the heart, before if\", favorite)\n    if (typeof favorite == \"object\") {\n      console.log(\"in the if, before unHeart is called\", favorite)\n      this.unHeart(favorite)  \n    } else {\n      console.log(\"in the else, before favorite is called\", favorite)\n      this.favorite(doctor)\n    }\n  }\n\n  unHeart = (favorite) => {\n    // debugger\n    console.log(\"got here in the unheart\", favorite)\n    // let favorite = this.state.currentUser.userFavorites.find(favorite => favorite.api_id === doctor.uid)\n    fetch(`http://localhost:3000/favorites/${favorite.id}`, {\n      method: \"DELETE\",\n    }).then(resp => resp.json()).then(data => {\n      let favorites = this.state.currentUser.favorites.filter(favorite => favorite.id !== data.id)\n      let doctors = this.state.currentUser.doctors.filter(doctor => doctor.api_id !== data.api_id)\n      this.setState({\n        ...this.state,\n        favorite: 0,\n        doctors: [data.doctor, ...this.state.doctors],\n        currentUser: {\n          ...this.state.currentUser,\n          favorites: favorites,\n          doctors: doctors\n        }\n      })\n    })\n  }\n\n  favorite = (doctor) => {\n    console.log(\"in the favorite\")\n\n    let favoriteObject = {\n      user_id: this.state.currentUser.id,\n      doctor_id: doctor.id,\n      api_id: doctor.api_id\n    }\n\n    fetch(`http://localhost:3000/favorites`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify(favoriteObject)\n    }).then(resp => resp.json())\n      .then(data => {\n        let favorites = [...this.state.currentUser.favorites]\n        let doctors = [...this.state.currentUser.doctors]\n\n        let newdoc = {\n          id: data.doctor_id,\n          api_id: doctor.api_id,\n          first_name: doctor.first_name,\n          last_name: doctor.last_name,\n          title: doctor.title,\n          gender: doctor.gender,\n          bio: doctor.bio,\n          phone_number: doctor.phone_number\n        }\n\n        // userDoctors.filter\n        this.setState({\n          ...this.state,\n          favorite: 1,\n          currentUser: {\n            ...this.state.currentUser,\n            favorites: [data, ...favorites],\n            doctors: [newdoc, ...doctors]\n\n          }\n        }, () => console.log(\"this.state.currentUser\", this.state.currentUser))\n\n      })\n\n  }\n\n\n  onSubmit = (formData) => {\n    this.logInOrSignUp(formData)\n  }\n\n  logInOrSignUp = (formData) => {\n    fetch(`http://localhost:3000/users`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application.json\"\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password,\n        password_confirmation: formData.passwordConfirmation\n\n      })\n    }).then(resp => resp.json())\n      .then(data => {\n\n        this.setState({\n          ...this.state,\n          currentUser: {\n            id: data.id,\n            email: data.email,\n            address: data.address,\n            password: data.password,\n            passwordConfirmation: data.password_confirmation,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            doctors: data.doctors,\n            favorites: data.favorites\n          },\n          isLoggedIn: true\n        }, () => this.props.history.push('/search'))\n      }\n\n      )\n\n  }\n\n  userProfile = () => {\n\n\n    let id = this.state.currentUser.id\n    fetch(`http://localhost:3000/users/${id}`)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          ...this.state,\n          currentUser: {\n            ...this.state.currentUser,\n            doctors: data.doctors\n          }\n\n        }, () => {\n          console.log(\"after profile button is clicked: \", this.state.currentUser.doctors)\n          this.props.history.push('/profile')\n        })\n      })\n  }\n\n  logOut = () => {\n    this.props.history.push('/')\n    this.setState({ isLoggedIn: false, currentUser: {}, doctors: [] })\n  }\n\n  onSignUp = () => {\n    this.setState({ register: !this.state.register })\n  }\n  // request to Google GeoCode API to turn string into Longitude/Latitude\n  toGeoCode = (formData) => {\n\n\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${formData.address}&key=${process.env.REACT_APP_GOOGLE_GEOCODE_API_KEY}`)\n      .then(resp => resp.json())\n      .then(data => this.setState({\n        lat: data[\"results\"][0].geometry.location.lat,\n        lng: data[\"results\"][0].geometry.location.lng\n      }, () => this.getDoctors(formData))).catch(error => console.log(error))\n\n  }\n\n  // request to BetterDoc API with Long/Lat\n  isResolved = () => {\n    if(this.state.apiDoctors.length < 1){\n      this.setState({error: true})\n    } else {\n      this.setState({error: false})\n    }\n  }\n\n  getDoctors = (formData) => {\n\n    fetch(`https://api.betterdoctor.com/2016-03-01/doctors?query=${formData.ailment}&location=${this.state.lat}%2C${this.state.lng}%2C${formData.miles}&skip=0&limit=100&user_key=${process.env.REACT_APP_BETTER_DOC_API_KEY}`)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(\"data from betterdoc\", data)\n        this.setState({\n          apiDoctors: data.data,\n          isLoading: false\n        }, () => this.isResolved())\n        this.parseDoctors(data.data)\n      }).catch((error) => {\n        console.log(error)\n      })\n  }\n\n  imageApi = (firstName, lastName, title) => {\n\n    fetch(`https://serpapi.com/search?q=${firstName}%20${lastName},%20${title}&tbm=isch&ijn=0&api_key=${process.env.REACT_APP_SERP_API_KEY}`)\n      .then(resp => { resp.json() })\n      .then(data => {\n\n        return data.images_results[0].original\n      })\n      .catch(err => {\n\n        console.error(err)\n      })\n  }\n\n  parseDoctors = (doctorsArray) => {\n\n    let doctors = []\n    doctorsArray.map(element => {\n\n\n      try {\n        let doctorHash = {}\n        doctorHash.id = element.uid\n        // doctorHash.image = this.imageApi(element.profile.first_name, element.profile.last_name, element.profile.title)\n        doctorHash.firstName = element.profile.first_name\n        doctorHash.lastName = element.profile.last_name\n        if (element.profile.gender === 'male') {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/matthew.png'\n        } else if (element.profile.gender === 'female') {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/kristy.png'\n        } else {\n          doctorHash.image = 'https://semantic-ui.com/images/avatar2/large/elyse.png'\n        }\n        doctorHash.title = element.profile.title\n        doctorHash.bio = element.profile.bio\n        doctorHash.address = element.practices[0].address\n        doctorHash.gender = element.profile.gender\n        doctorHash.phone = element.practices[0].phones[0].number\n\n        doctorHash.specialty = element.specialties[0].name\n        doctors.push(doctorHash)\n        this.createDoctor(doctorHash)\n      }\n      catch (err) {\n        console.log(err.message)\n      }\n    })\n  }\n\n  loadingHandler = () => {\n    this.setState({ isLoading: true })\n  }\n\n\n  patchUser = (userData) => {\n\n    fetch(`http://localhost:3000/users/${this.state.currentUser.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accepts\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: userData.email,\n        password: userData.password,\n        password_confirmation: userData.passwordConfirmation,\n        first_name: userData.firstName,\n        last_name: userData.lastName,\n        address: userData.address,\n\n      })\n    }).then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          ...this.state,\n          currentUser: {\n            doctors: data.doctors,\n            favorites: data.favorites,\n            id: data.id,\n            email: data.email,\n            address: data.address,\n            password: data.password,\n            passwordConfirmation: data.password_confirmation,\n            firstName: data.first_name,\n            lastName: data.last_name\n          }\n        }, () => console.log(this.state.currentUser)))\n  }\n\n  componentDidMount() {\n    // let doctorsInCurrentState = [...this.state.doctors]\n    fetch(`http://localhost:3000/users`)\n      .then(resp => resp.json())\n      .then(users => {\n        console.log(\"in component did mount users\", users)\n        this.setState({\n          users\n        }, () => console.log(\"this.state.users after mount: \", this.state.users))\n      })\n  }\n\n  searchButton = () => {\n    if (this.state.isLoggedIn) {\n      this.props.history.push('/search')\n    } else {\n      alert('Please log in before searching')\n    }\n  }\n\n  render() {  \n    return (\n      <div>\n        <Button color=\"red\" onClick={()=> this.searchButton()} >Search</Button>\n        {this.state.isLoggedIn && <Button color=\"red\" onClick={() => this.userProfile()}>Profile</Button>}\n        {this.state.isLoggedIn && <Button color=\"red\" onClick={this.logOut}>Logout</Button>}\n        <Image alt=\"\" src=\"\"></Image>\n        {!this.state.isLoggedIn && <Login isLoggedIn={this.state.isLoggedIn} onSignUp={this.onSignUp} onSubmit={this.onSubmit} register={this.state.register} />}\n        <Switch>\n          <Route exact path='/doctors' render={routerProps => <Doctors createDoctor={this.createDoctor}  {...routerProps} doctors={this.state.doctors} />} />\n          <Route exact path='/search' render={routerProps => <Search error={this.state.error} isLoading={this.state.isLoading} currentUser={this.state.currentUser} loadingHandler={this.loadingHandler} {...routerProps} toGeoCode={this.toGeoCode} favorite={this.favorite} />} />\n          <Route exact path='/doctors/:id' render={routerProps => <DoctorShow rate={this.rate} doctors={this.state.doctors} favorite={this.state.favorite} isFavorite={this.isFavorite} heart={this.heart} currentUser={this.state.currentUser} {...routerProps} favorite={this.favorite} />} />\n          <Route exact path='/profile' render={routerProps => <Profile patchUser={this.patchUser} currentUser={this.state.currentUser} doctors={this.state.doctors} isLoggedIn={this.state.isLoggedIn} {...routerProps} />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(<Router><App /></Router>, \n  document.getElementById('root'));\n\n\n"],"sourceRoot":""}